--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v81=v2(v0(v30,16));if v19 then local v91=v5(v81,v19);v19=nil;return v91;else return v81;end end end);local function v20(v31,v32,v33) if v33 then local v82=(v31/((5 -3)^(v32-(1 + 0 + 0))))%((1 + 1)^(((v33-(2 -1)) -(v32-(1 -0))) + (2 -1))) ;return v82-(v82%(620 -(555 + 64))) ;else local v83=((237 + 830) -(68 + 997))^(v32-(1271 -(226 + 1044))) ;return (((v31%(v83 + v83))>=v83) and (932 -(857 + 74))) or (568 -(367 + 201)) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35=957 -(892 + 65) ;local v36;local v37;while true do if (v35==(2 -1)) then return (v37 * (606 -(87 + 263))) + v36 ;end if (v35==(180 -((266 -199) + 113))) then v36,v37=v1(v16,v18,v18 + 2 + 0 );v18=v18 + (4 -2) ;v35=1 -0 ;end end end local function v23() local v38,v39,v40,v41=v1(v16,v18,v18 + (955 -(802 + 150)) );v18=v18 + (10 -6) ;return (v41 * (30433252 -13656036)) + (v40 * 65536) + (v39 * 256) + v38 ;end local function v24() local v42=0 + 0 ;local v43;local v44;local v45;local v46;local v47;local v48;while true do if (v42==(439 -((686 -541) + 293))) then v45=431 -(44 + 386) ;v46=(v20(v44,998 -(361 + 554 + 82) ,68 -48 ) * ((5 -(1750 -(760 + 987)))^(19 + 13))) + v43 ;v42=2 + 0 ;end if (v42==2) then v47=v20(v44,21,1944 -(1789 + 124) );v48=((v20(v44,41 -9 )==((1954 -(745 + 21)) -(1069 + 118))) and  -(4 -3)) or ((1 + 1) -1) ;v42=6 -3 ;end if (v42==(0 -(0 -0))) then v43=v23();v44=v23();v42=1 + 0 ;end if (v42==(4 -1)) then if (v47==(0 + 0)) then if (v46==(791 -(368 + 423))) then return v48 * (0 -0) ;else v47=19 -((39 -29) + 8) ;v45=0 -0 ;end elseif (v47==(7874 -5827)) then return ((v46==(442 -(4 + 412 + 21 + 5))) and (v48 * (1/(0 -0)))) or (v48 * NaN) ;end return v8(v48,v47-(2103 -(1020 + 60)) ) * (v45 + (v46/((1 + 1)^(175 -123)))) ;end end end local function v25(v49) local v50;if  not v49 then v49=v23();if (v49==(1055 -(87 + 968))) then return "";end end v50=v3(v16,v18,(v18 + v49) -1 );v18=v18 + v49 ;local v51={};for v65=4 -3 , #v50 do v51[v65]=v2(v1(v3(v50,v65,v65)));end return v6(v51);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v52=(function() return 0;end)();local v53=(function() return;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();local v58=(function() return;end)();while true do if (v52== #",") then local v87=(function() return 0;end)();local v88=(function() return;end)();while true do if (v87==0) then v88=(function() return 0 + 0 ;end)();while true do if ((0 -0)==v88) then v57=(function() return v23();end)();v58=(function() return {};end)();v88=(function() return 1;end)();end if (v88==(30 -(22 + 7))) then for v107= #":",v57 do local v108=(function() return 0;end)();local v109=(function() return;end)();local v110=(function() return;end)();local v111=(function() return;end)();while true do if (1~=v108) then else v111=(function() return nil;end)();while true do if (v109~=(0 + 0)) then else local v119=(function() return 0 + 0 ;end)();local v120=(function() return;end)();while true do if (0==v119) then v120=(function() return 0;end)();while true do if ((1986 -(1266 + 719))~=v120) then else v109=(function() return  #"}";end)();break;end if ((603 -(268 + 335))==v120) then v110=(function() return v21();end)();v111=(function() return nil;end)();v120=(function() return 291 -(60 + 230) ;end)();end end break;end end end if (v109~= #">") then else if (v110== #"~") then v111=(function() return v21()~=0 ;end)();elseif (v110==2) then v111=(function() return v24();end)();elseif (v110== #"xxx") then v111=(function() return v25();end)();end v58[v107]=(function() return v111;end)();break;end end break;end if (v108==(572 -(426 + 146))) then v109=(function() return 0 + 0 ;end)();v110=(function() return nil;end)();v108=(function() return 1457 -(282 + 1174) ;end)();end end end v56[ #"nil"]=(function() return v21();end)();v88=(function() return 2;end)();end if (v88~=2) then else v52=(function() return 2;end)();break;end end break;end end end if (v52==(813 -(569 + 242))) then for v92= #"[",v23() do local v93=(function() return v21();end)();if (v20(v93, #"~", #"]")~=0) then else local v100=(function() return 0;end)();local v101=(function() return;end)();local v102=(function() return;end)();local v103=(function() return;end)();local v104=(function() return;end)();while true do if ((2 -1)==v100) then local v106=(function() return 0;end)();while true do if ((0 + 0)==v106) then v103=(function() return nil;end)();v104=(function() return nil;end)();v106=(function() return 1;end)();end if ((1025 -(706 + 318))==v106) then v100=(function() return 1253 -(721 + 530) ;end)();break;end end end if (v100~=2) then else while true do if (0~=v101) then else local v112=(function() return 1271 -(945 + 326) ;end)();local v113=(function() return;end)();while true do if (v112~=(0 -0)) then else v113=(function() return 0 + 0 ;end)();while true do if (v113==(700 -(271 + 429))) then v102=(function() return v20(v93,2 + 0 , #"asd");end)();v103=(function() return v20(v93, #".dev",1506 -(1408 + 92) );end)();v113=(function() return 1087 -(461 + 625) ;end)();end if (v113==1) then v101=(function() return  #"{";end)();break;end end break;end end end if (v101== #"nil") then if (v20(v103, #"-19", #"-19")~= #":") then else v104[ #".dev"]=(function() return v58[v104[ #"xnxx"]];end)();end v53[v92]=(function() return v104;end)();break;end if (v101~=(1290 -(993 + 295))) then else local v115=(function() return 0 + 0 ;end)();while true do if (v115~=1) then else v101=(function() return  #"91(";end)();break;end if (0==v115) then if (v20(v103, #"[", #"[")~= #"{") then else v104[1173 -(418 + 753) ]=(function() return v58[v104[2]];end)();end if (v20(v103,2,2)== #"/") then v104[ #"-19"]=(function() return v58[v104[ #"xnx"]];end)();end v115=(function() return 1 + 0 ;end)();end end end if (v101== #"\\") then local v116=(function() return 0 + 0 ;end)();local v117=(function() return;end)();while true do if (v116~=0) then else v117=(function() return 0;end)();while true do if (v117~=(1 + 0)) then else v101=(function() return 1 + 1 ;end)();break;end if (v117==0) then v104=(function() return {v22(),v22(),nil,nil};end)();if (v102==(1769 -(1749 + 20))) then local v432=(function() return 0 + 0 ;end)();local v433=(function() return;end)();while true do if (v432~=0) then else v433=(function() return 0;end)();while true do if ((1322 -(1249 + 73))~=v433) then else v104[ #"gha"]=(function() return v22();end)();v104[ #"?id="]=(function() return v22();end)();break;end end break;end end elseif (v102== #"<") then v104[ #"gha"]=(function() return v23();end)();elseif (v102==(1 + 1)) then v104[ #"nil"]=(function() return v23() -((1147 -(466 + 679))^16) ;end)();elseif (v102== #"xnx") then local v503=(function() return 0;end)();while true do if (v503~=(0 -0)) then else v104[ #"nil"]=(function() return v23() -(2^(45 -29)) ;end)();v104[ #".com"]=(function() return v22();end)();break;end end end v117=(function() return 1901 -(106 + 1794) ;end)();end end break;end end end end break;end if (v100==(0 + 0)) then v101=(function() return 0;end)();v102=(function() return nil;end)();v100=(function() return 1 + 0 ;end)();end end end end for v94= #"!",v23() do v54[v94-#"/" ]=(function() return v28();end)();end return v56;end if (v52~=0) then else local v89=(function() return 0;end)();local v90=(function() return;end)();while true do if (v89~=(0 -0)) then else v90=(function() return 0 -0 ;end)();while true do if (v90~=(115 -(4 + 110))) then else v55=(function() return {};end)();v56=(function() return {v53,v54,nil,v55};end)();v90=(function() return 2;end)();end if (v90==0) then v53=(function() return {};end)();v54=(function() return {};end)();v90=(function() return 585 -(57 + 527) ;end)();end if (v90~=(1429 -(41 + 1386))) then else v52=(function() return  #"|";end)();break;end end break;end end end end end local function v29(v59,v60,v61) local v62=v59[104 -(17 + 86) ];local v63=v59[2 + 0 ];local v64=v59[6 -3 ];return function(...) local v67=v62;local v68=v63;local v69=v64;local v70=v27;local v71=1 + 0 ;local v72= -(2 -1);local v73={};local v74={...};local v75=v12("#",...) -(1 -0) ;local v76={};local v77={};for v84=0 -0 ,v75 do if ((892<1213) and (v84>=v69)) then v73[v84-v69 ]=v74[v84 + 1 + 0 ];else v77[v84]=v74[v84 + 1 + 0 ];end end local v78=(v75-v69) + (1 -0) ;local v79;local v80;while true do v79=v67[v71];v80=v79[1390 -(135 + 1254) ];if (v80<=(130 -(30 + 35))) then if (v80<=(22 + 10)) then if (v80<=(70 -55)) then if (v80<=(1264 -(1043 + 214))) then if ((3313<=4655) and (v80<=(11 -8))) then if ((v80<=(1213 -(323 + 889))) or (3956<2705)) then if (v80>(0 -0)) then local v122=580 -(361 + 219) ;local v123;while true do if ((1959<3037) and (v122==((303 + 17) -((208 -155) + 267)))) then v123=v79[1 + (1162 -(160 + 1001)) ];v77[v123]=v77[v123](v13(v77,v123 + (414 -(15 + 398)) ,v79[985 -(18 + 844 + 120) ]));break;end end else local v124=v79[(5 + 2) -5 ];local v125={v77[v124](v77[v124 + 1 + 0 ])};local v126=0 + 0 ;for v309=v124,v79[854 -(20 + 830) ] do v126=v126 + (1860 -((1179 -(237 + 121)) + 1038)) ;v77[v309]=v125[v126];end end elseif ((v80==(2 + 0)) or (1241>2213)) then local v127=(1023 -(525 + 372)) -(116 + 10) ;local v128;while true do if ((4905<4974) and (v127==(0 + 0))) then v128=v79[(1 -0) + 1 ];do return v13(v77,v128,v72);end break;end end else do return;end end elseif (v80<=(743 -(542 + 196))) then if (v80==(8 -4)) then local v129=0 + (0 -0) ;local v130;while true do if (v129==(1026 -(834 + 192))) then v130=v79[2 + 0 ];v77[v130](v77[v130 + (143 -(96 + 46)) + 0 ]);break;end end else do return;end end elseif ((3557==3557) and (v80>(3 + 3))) then if (v77[v79[4 -2 ]]==v77[v79[9 -5 ]]) then v71=v71 + (1552 -(1126 + 425)) ;else v71=v79[408 -(118 + 287) ];end else local v131=0 -(777 -(643 + 134)) ;local v132;while true do if ((369==369) and (v131==(1122 -(118 + 1003)))) then for v434=v132,v72 do local v435=0 + 0 ;local v436;while true do if (v435==(0 -0)) then v436=v73[v434-v132 ];v77[v434]=v436;break;end end end break;end if ((v131==(0 -0)) or (3589<2987)) then v132=v79[379 -(142 + 235) ];v72=(v132 + v78) -(1 + 0 + 0) ;v131=4 -(6 -3) ;end end end elseif ((4378>2853) and (v80<=(9 + 2))) then if (v80<=(2 + 7)) then if ((v80==(985 -(553 + (1573 -1149)))) or (1712>3602)) then if ((4539>=2733) and  not v77[v79[(3 + 0) -1 ]]) then v71=v71 + 1 + 0 ;else v71=v79[3 + 0 ];end else local v133=0 + 0 ;local v134;while true do if (v133==(0 + 0)) then v134=v79[2 + 0 ];v77[v134]=v77[v134](v77[v134 + (2 -1) ]);break;end end end elseif (v80==(27 -17)) then if (v77[v79[2]]<v77[v79[8 -4 ]]) then v71=v71 + (1 -0) + 0 ;else v71=v79[14 -11 ];end elseif ((v79[755 -(239 + (1050 -536)) ]==v77[v79[2 + 2 ]]) or (2599<=515)) then v71=v71 + (1100 -(35 + 1064)) ;else v71=v79[1332 -(797 + 532) ];end elseif (v80<=(10 + 3)) then if ((v80>(5 + 7)) or (3754<810)) then local v135=v79[(723 -(316 + 403)) -2 ];v77[v135](v13(v77,v135 + (1203 -(373 + 829)) ,v79[734 -(476 + 170 + 85) ]));else local v136=1130 -((1014 -645) + 761) ;local v137;local v138;while true do if ((1633<=1977) and (v136==(1667 -(636 + 1030)))) then v77[v137 + 1 + 0 ]=v138;v77[v137]=v138[v79[6 -(1 + 1) ]];break;end if (v136==(0 -0)) then v137=v79[240 -(64 + 174) ];v138=v77[v79[224 -(55 + 166) ]];v136=1 + 0 ;end end end elseif (v80==(20 -6)) then local v139=336 -(144 + 192) ;local v140;local v141;local v142;while true do if (v139==(216 -(42 + 174))) then v140=v79[2 + 0 ];v141=v77[v140];v139=(2 -1) + 0 ;end if (v139==1) then v142=v79[2 + 1 ];for v437=1505 -(363 + 1141) ,v142 do v141[v437]=v77[v140 + v437 ];end break;end end else local v143=1580 -(1183 + 397) ;local v144;local v145;local v146;while true do if (((2 + 0) -1)==v143) then v146=0 + 0 ;for v440=v144,v79[1287 -(1035 + 248) ] do v146=v146 + (22 -(20 + 1)) ;v77[v440]=v145[v146];end break;end if (v143==(0 + 0)) then v144=v79[1977 -(1913 + 62) ];v145={v77[v144](v13(v77,v144 + 1 ,v72))};v143=1 + 0 ;end end end elseif (v80<=(60 -37)) then if (v80<=(987 -(478 + 158 + 332))) then if ((4528>=3619) and (v80<=17)) then if ((v80==(1949 -(565 + (4740 -3372)))) or (172>=2092)) then local v147=0 -0 ;local v148;while true do if ((1662 -(1477 + 184))==v147) then for v443=v148,v72 do local v444=v73[v443-v148 ];v77[v443]=v444;end break;end if ((2120==2120) and (v147==0)) then v148=v79[2 -(0 -0) ];v72=(v148 + v78) -(1 + 0) ;v147=857 -(564 + 292) ;end end else v77[v79[2 -0 ]]=v29(v68[v79[8 -5 ]],nil,v61);end elseif (v80>(322 -((506 -262) + 60))) then if (v77[v79[2 + 0 ]] or (2398==358)) then v71=v71 + (477 -(41 + 435)) ;else v71=v79[1004 -(938 + 63) ];end else v77[v79[2 + 0 ]][v77[v79[1128 -(936 + 189) ]]]=v77[v79[9 -5 ]];end elseif (v80<=(7 + 14)) then if (v80>(77 -57)) then v77[v79[1615 -(1565 + 48) ]]=v79[2 + 1 ]~=(1138 -(782 + 356)) ;else local v153=267 -(176 + 91) ;local v154;while true do if (v153==(0 -0)) then v154=v79[2];v77[v154](v13(v77,v154 + (1 -0) ,v72));break;end end end elseif ((2387<4637) and (v80==(1114 -(975 + 117)))) then v77[v79[1877 -(157 + 1718) ]]=v77[v79[1 + 2 + 0 ]] -v77[v79[14 -10 ]] ;else local v156=v79[8 -6 ];local v157=v77[v79[3]];v77[v156 + (3 -2) ]=v157;v77[v156]=v157[v79[(2011 -989) -(697 + 321) ]];end elseif ((1265<2775) and (v80<=(73 -(3 + 43)))) then if (v80<=(23 + 2)) then if (v80>(93 -69)) then v77[v79[3 -1 ]]=v77[v79[6 -3 ]][v77[v79[4 + 0 ]]];else local v163=229 -((214 -141) + 156) ;local v164;local v165;local v166;while true do if ((((18 -(12 + 5)) + 0)==v163) or (4430<51)) then v166=0 + 0 ;for v446=v164,v79[6 -2 ] do v166=v166 + (2 -(3 -2)) ;v77[v446]=v165[v166];end break;end if ((1871<=1998) and (v163==(470 -((477 -253) + 246)))) then v164=v79[(2612 -1383) -(322 + 905) ];v165={v77[v164](v77[v164 + (1190 -(449 + 740)) ])};v163=873 -(826 + 10 + 36) ;end end end elseif (v80>(973 -(245 + 702))) then local v167=v79[(1979 -(1656 + 317)) -4 ];v77[v167]=v77[v167](v13(v77,v167 + 1 + 0 ,v79[1901 -(260 + 1638) ]));else local v169=v79[442 -(382 + 58) ];v77[v169]=v77[v169]();end elseif (v80<=(92 -63)) then if (v80==(24 + 4)) then local v171=v79[3 -1 ];do return v77[v171](v13(v77,v171 + 1 + 0 + 0 ,v79[1537 -(709 + 825) ]));end else v77[v79[5 -3 ]]=v77[v79[1208 -(902 + 303) ]] * v77[v79[8 -4 ]] ;end elseif (v80<=(72 -(34 + 8))) then if v77[v79[1 + 1 ]] then v71=v71 + (1691 -(1121 + 569)) ;else v71=v79[217 -(22 + 192) ];end elseif (v80>(714 -(483 + 200))) then v77[v79[1465 -(1404 + 59) ]]={};else local v359=v79[10 -7 ];local v360=v77[v359];for v417=v359 + (2 -1) ,v79[4 -0 ] do v360=v360   .. v77[v417] ;end v77[v79[767 -(468 + 297) ]]=v360;end elseif (v80<=(1534 -(35 + 1451))) then if (v80<=(602 -((887 -553) + 228))) then if (v80<=((595 -474) -85)) then if (v80<=(78 -44)) then if (v80>(59 -26)) then v77[v79[1 + 1 ]][v77[v79[239 -(141 + 95) ]]]=v77[v79[4 + 0 ]];elseif (v77[v79[4 -2 ]]==v79[9 -5 ]) then v71=v71 + 1 + 0 ;else v71=v79[8 -5 ];end elseif (v80==(25 + 10)) then if (v77[v79[2 + 0 ]]~=v77[v79[5 -(355 -(5 + 349)) ]]) then v71=v71 + 1 + 0 ;else v71=v79[166 -(92 + 71) ];end else local v175=0 + 0 ;local v176;while true do if (v175==(0 -0)) then v176=v79[2 -(1271 -(266 + 1005)) ];do return v77[v176](v13(v77,v176 + (766 -(574 + 191)) ,v72));end break;end end end elseif (v80<=(32 + 6)) then if ((v80==(92 -55)) or (2083>=3954)) then v60[v79[2 + 1 ]]=v77[v79[(561 + 290) -(254 + 595) ]];elseif (v77[v79[128 -(55 + 71) ]]~=v79[5 -1 ]) then v71=v71 + (1791 -(573 + 1217)) ;else v71=v79[8 -5 ];end elseif (v80==(3 + 36)) then if (v79[2]<v77[v79[5 -(3 -2) ]]) then v71=v79[942 -(714 + 225) ];else v71=v71 + (2 -1) ;end else v77[v79[2 -0 ]]=v79[1 + 2 ]~=0 ;end elseif ((1857>59) and (v80<=(63 -19))) then if ((v80<=((1115 -267) -(118 + 688))) or (1232==3045)) then if (v80>(156 -115)) then local v180=v79[(1746 -(561 + 1135)) -(25 + (29 -6)) ];local v181=v79[1 + 3 ];local v182=v180 + (1888 -(927 + 959)) ;local v183={v77[v180](v77[v180 + 1 ],v77[v182])};for v312=4 -3 ,v181 do v77[v182 + v312 ]=v183[v312];end local v184=v183[1781 -(389 + 1391) ];if v184 then v77[v182]=v184;v71=v79[2 + 1 ];else v71=v71 + (733 -((52 -36) + 716)) ;end else local v185=v79[(1069 -(507 + 559)) -1 ];local v186=v77[v185];local v187=v79[954 -(783 + 168) ];for v315=(245 -147) -(11 + (265 -179)) ,v187 do v186[v315]=v77[v185 + v315 ];end end elseif (v80==(104 -61)) then v77[v79[287 -(175 + 110) ]]=v77[v79[6 -3 ]] * v79[19 -(403 -(212 + 176)) ] ;else local v189=v79[(2703 -(250 + 655)) -(503 + 1293) ];do return v13(v77,v189,v189 + v79[8 -5 ] );end end elseif (v80<=(34 + (32 -20))) then if ((104==104) and (v80==(1106 -(810 + 251)))) then if (v79[2 + 0 ]<=v77[v79[2 + 2 ]]) then v71=v71 + 1 + 0 ;else v71=v79[7 -4 ];end else local v190=v79[535 -(43 + 490) ];local v191,v192=v70(v77[v190](v77[v190 + (734 -(711 + 22)) ]));v72=(v192 + v190) -(1 -0) ;local v193=0 -0 ;for v318=v190,v72 do local v319=859 -(240 + 619) ;while true do if ((0 + 0)==v319) then v193=v193 + (1696 -(556 + 1139)) ;v77[v318]=v191[v193];break;end end end end elseif (v80>(74 -27)) then v77[v79[(1 -0) + 1 ]]();else local v194=v79[1746 -(1344 + 400) ];do return v77[v194](v13(v77,v194 + (406 -(255 + 150)) ,v72));end end elseif (v80<=(45 + 11)) then if ((4534>2967) and (v80<=(28 + 24))) then if (v80<=(213 -163)) then if (v80==(157 -108)) then local v195=v68[v79[1742 -(404 + 1335) ]];local v196;local v197={};v196=v10({},{__index=function(v320,v321) local v322=v197[v321];return v322[407 -(183 + 223) ][v322[2 -0 ]];end,__newindex=function(v323,v324,v325) local v326=v197[v324];v326[1 + 0 ][v326[1 + 1 ]]=v325;end});for v328=338 -(10 + 327) ,v79[3 + 1 ] do v71=v71 + (339 -(118 + 220)) ;local v329=v67[v71];if (v329[1 + 0 ]==(560 -((2064 -(1869 + 87)) + 341))) then v197[v328-((3 -2) + 0) ]={v77,v329[1496 -(711 + 782) ]};else v197[v328-((2 -1) -0) ]={v60,v329[1 + 2 ]};end v76[ #v76 + (1820 -(580 + 1239)) ]=v197;end v77[v79[5 -3 ]]=v29(v195,v196,v61);elseif ((v77[v79[2 + 0 ]]==v79[1 + 3 ]) or (3449<=2368)) then v71=v71 + 1 + 0 ;else v71=v79[(450 + 324) -(720 + 51) ];end elseif (v80>(113 -62)) then local v199=v79[1778 -((1124 -703) + 1355) ];v77[v199]=v77[v199](v77[v199 + (2 -1) ]);elseif (v77[v79[2]]==v77[v79[2 + 2 ]]) then v71=v71 + 1 + 0 ;else v71=v79[1170 -(181 + 464 + 522) ];end elseif ((4733>=3548) and (v80<=(1844 -(1010 + 780)))) then if ((v80>(53 + 0)) or (2005>4687)) then local v201=v77[v79[19 -15 ]];if  not v201 then v71=v71 + (2 -1) ;else v77[v79[1838 -(305 + 740 + 791) ]]=v201;v71=v79[3];end else for v331=v79[1 + 1 ],v79[7 -4 ] do v77[v331]=nil;end end elseif (v80==(83 -(881 -(152 + 701)))) then local v202=v79[507 -(351 + 154) ];local v203,v204=v70(v77[v202](v13(v77,v202 + (1575 -(1281 + 293)) ,v79[269 -(28 + 238) ])));v72=(v204 + v202) -(2 -(1312 -(430 + 881))) ;local v205=1559 -(1381 + 178) ;for v333=v202,v72 do local v334=0 + 0 + 0 ;while true do if (((0 + 0)==v334) or (1767<=916)) then v205=v205 + (849 -(40 + 808)) ;v77[v333]=v203[v205];break;end end end elseif (v79[1 + 1 ]==v77[v79[2 + (897 -(557 + 338)) ]]) then v71=v71 + (3 -2) ;else v71=v79[2 + 1 ];end elseif (v80<=(530 -(381 + 89))) then if (v80<=(52 + 6)) then if (v80==(39 + 18)) then local v206=v79[2 -0 ];v77[v206](v77[v206 + (1157 -(1074 + 82)) ]);else v77[v79[3 -(1 + 0) ]]=v60[v79[1787 -(214 + 1570) ]];end elseif ((3589<3682) and (v80==(1514 -(990 + 465)))) then v77[v79[4 -2 ]]=v79[(5 -3) + 1 ]^v77[v79[2 + 2 ]] ;else local v210=v79[2];local v211={};for v335=1 + 0 , #v76 do local v336=v76[v335];for v374=0 + 0 , #v336 do local v375=0 + 0 ;local v376;local v377;local v378;while true do if (v375==(479 -((1193 -852) + 138))) then v376=v336[v374];v377=v376[3 -2 ];v375=1;end if (v375==(1727 -(1668 + 58))) then v378=v376[628 -(512 + 114) ];if ((v377==v77) and (v378>=v210)) then v211[v378]=v377[v378];v376[2 -1 ]=v211;end break;end end end end end elseif ((v80<=(161 -99)) or (75>=430)) then if (v80>(125 -64)) then for v337=v79[6 -4 ],v79[884 -(581 + (646 -346)) ] do v77[v337]=nil;end else v77[v79[1 + 1 ]]=v79[6 -3 ]^v77[v79[1 + 3 ]] ;end elseif (v80<=((856 -(499 + 302)) + 8)) then if (v79[1237 -(1030 + 205) ]<v77[v79[4 + 0 ]]) then v71=v71 + 1 + 0 ;else v71=v79[(876 -(39 + 827)) -7 ];end elseif ((v80>(2058 -(109 + 1885))) or (4157<=3219)) then if  not v77[v79[2 -0 ]] then v71=v71 + ((2 -1) -0) ;else v71=v79[1 + 2 ];end else v61[v79[2 + 1 ]]=v77[v79[1471 -(1269 + 200) ]];end elseif (v80<=(187 -89)) then if ((1823<2782) and (v80<=(896 -(98 + 717)))) then if (v80<=(1236 -(671 + 492))) then if ((3434>=1764) and (v80<=(895 -(802 + 24)))) then if (v80<=((2862 -1580) -(369 + 846))) then if ((4040>1820) and (v80>(113 -47))) then local v213=0 + 0 ;while true do if (v213==(1945 -(1036 + 909))) then v77[v79[2 -0 ]]=v79[(3 -2) + 2 ]~=(203 -(11 + 192)) ;v71=v71 + 1 + 0 ;break;end end else v77[v79[177 -((206 -71) + 40) ]]=v79[1 + 2 ];end elseif (v80>68) then v77[v79[1 + 0 + 1 ]]=v77[v79[8 -5 ]]/v79[(38 -25) -9 ] ;else v77[v79[1 + 1 ]]=v61[v79[1 + 1 + 1 ]];end elseif (v80<=(16 + 55)) then if (v80==(58 + 12)) then if (v79[971 -(522 + 447) ]<v77[v79[(4 -1) + (105 -(103 + 1)) ]]) then v71=v71 + 1 + 0 ;else v71=v79[1436 -(797 + 636) ];end else local v219=v79[5 -3 ];local v220={};for v339=(558 -(475 + 79)) -3 , #v76 do local v340=0 + 0 ;local v341;while true do if (v340==(1619 -(1427 + 192))) then v341=v76[v339];for v480=0 + 0 , #v341 do local v481=0 -0 ;local v482;local v483;local v484;while true do if (v481==((0 -0) + 0)) then v482=v341[v480];v483=v482[1 + 0 ];v481=327 -(192 + 134) ;end if (v481==(1277 -(316 + 960))) then v484=v482[2];if ((v483==v77) and (v484>=v219)) then local v504=0 + 0 ;while true do if ((4192>=2529) and (v504==(0 -(0 -0)))) then v220[v484]=v483[v484];v482[1]=v220;break;end end end break;end end end break;end end end end elseif (v80>(56 + 16)) then v60[v79[3 + 0 ]]=v77[v79[7 -5 ]];else v77[v79[553 -(83 + 468) ]]=v77[v79[(101 + 680) -(454 + 324) ]] + v77[v79[(1593 + 217) -((2705 -(1395 + 108)) + 604) ]] ;end elseif (v80<=((1044 -685) -282)) then if (v80<=(124 -49)) then if (v80==74) then v77[v79[5 -3 ]]();elseif (v79[327 -(45 + 280) ]<v77[v79[10 -6 ]]) then v71=v79[3 + 0 ];else v71=v71 + (1094 -(277 + (2020 -(7 + 1197)))) ;end elseif (v80>(67 + 9)) then local v224=v79[2];local v225,v226=v70(v77[v224](v77[v224 + 1 + 0 + 0 ]));v72=(v226 + v224) -(1 + 0) ;local v227=0 + 0 ;for v342=v224,v72 do v227=v227 + (1 -0) ;v77[v342]=v225[v227];end else v77[v79[(668 + 1245) -(340 + 1571) ]]=v79[(326 -(27 + 292)) -4 ];end elseif ((1554<2325) and (v80<=((93 -61) + 47))) then if (v80==(1850 -(1733 + 39))) then v77[v79[(6 -1) -3 ]]= #v77[v79[8 -5 ]];elseif (v77[v79[1036 -(125 + (3812 -2903)) ]]<v77[v79[1952 -((2160 -1064) + 852) ]]) then v71=v79[3 -0 ];else v71=v71 + 1 + 0 ;end elseif ((1108<4525) and (v80>(1854 -(1111 + 663)))) then if (v77[v79[2 -0 ]]<=v77[v79[4 + 0 ]]) then v71=v71 + (1 -0) ;else v71=v79[(140 -(43 + 96)) + 2 ];end else local v231=v79[514 -(409 + 103) ];local v232=v77[v231];for v345=v231 + (237 -(46 + 190)) ,v79[3] do v7(v232,v77[v345]);end end elseif (v80<=(184 -(51 + 44))) then if (v80<=(24 + 61)) then if (v80<=(1400 -(1114 + 203))) then if (v80==(808 -(228 + 498))) then local v233=0 + 0 ;local v234;local v235;local v236;local v237;while true do if ((v233==(2 + (0 -0))) or (4367<=3332)) then for v455=v234,v72 do v237=v237 + (664 -(174 + 489)) ;v77[v455]=v235[v237];end break;end if ((v233==(0 -0)) or (2896>4641)) then v234=v79[2];v235,v236=v70(v77[v234](v13(v77,v234 + 1 + 0 ,v79[1908 -(830 + (2430 -1355)) ])));v233=525 -(303 + 184 + 37) ;end if (v233==1) then v72=(v236 + v234) -(1270 -(231 + 1038)) ;v237=0 + 0 ;v233=1164 -(171 + 991) ;end end else do return v77[v79[8 -6 ]]();end end elseif (v80==84) then v77[v79[5 -3 ]]=v77[v79[7 -4 ]][v77[v79[4 + 0 ]]];else local v240=0;while true do if (v240==(0 -0)) then v77[v79[5 -3 ]]=v79[(2 + 2) -1 ]~=(0 -0) ;v71=v71 + (1249 -(111 + 1137)) ;break;end end end elseif (v80<=(245 -(91 + 67))) then if (v80==((504 -249) -169)) then do return v77[v79[1 + 1 ]];end elseif (v77[v79[1 + 1 ]]<=v77[v79[4]]) then v71=v71 + (524 -(423 + 100)) ;else v71=v79[1 + 2 ];end elseif ((882>21) and (v80==(243 -155))) then local v241=0 + 0 ;local v242;local v243;local v244;while true do if ((0 -0)==v241) then v242=v68[v79[774 -(326 + 445) ]];v243=nil;v241=4 -3 ;end if (v241==(2 -1)) then v244={};v243=v10({},{__index=function(v458,v459) local v460=v244[v459];return v460[1244 -(157 + 1086) ][v460[4 -2 ]];end,__newindex=function(v461,v462,v463) local v464=v244[v462];v464[712 -(530 + 181) ][v464[2]]=v463;end});v241=2 -0 ;end if ((2373<=4789) and (v241==(883 -(614 + 267)))) then for v466=33 -(19 + 13) ,v79[6 -2 ] do v71=v71 + (1 -0) ;local v467=v67[v71];if (v467[1]==(258 -147)) then v244[v466-(1932 -(1813 + 46 + 72)) ]={v77,v467[8 -5 ]};else v244[v466-(1 + 0 + 0) ]={v60,v467[8 -5 ]};end v76[ #v76 + (860 -(464 + 395)) ]=v244;end v77[v79[1814 -(1293 + 39 + 480) ]]=v29(v242,v243,v61);break;end end else v77[v79[3 -1 ]]=v61[v79[7 -4 ]];end elseif (v80<=(177 -84)) then if (v80<=(392 -301)) then if (v80>(212 -122)) then v71=v79[2 + (1752 -(1414 + 337)) ];else v77[v79[1 + 1 ]][v79[(1946 -(1642 + 298)) -3 ]]=v77[v79[1 + 3 ]];end elseif ((v80>(31 + 61)) or (1839<1136)) then v61[v79[2 + 1 ]]=v77[v79[1098 -(709 + 387) ]];else local v252=v79[1860 -(673 + 1185) ];v77[v252]=v77[v252](v13(v77,v252 + (2 -1) ,v72));end elseif ((3430==3430) and (v80<=(68 + 27))) then if (v80>(484 -(14 + 376))) then v77[v79[6 -4 ]]=v77[v79[4 -1 ]];else v77[v79[2 + 0 ]]=v60[v79[4 -1 ]];end elseif (v80<=(69 + 27)) then v77[v79[2 + 0 ]]= #v77[v79[3 -0 ]];elseif ((748<=2288) and (v80==(175 -((59 -36) + 55)))) then if ((891<4473) and (v77[v79[1 + 1 ]]~=v77[v79[7 -3 ]])) then v71=v71 + (1 -0) ;else v71=v79[1883 -(446 + 1434) ];end else local v387=1283 -(1040 + 243) ;local v388;while true do if (v387==(0 -0)) then v388=v79[5 -3 ];do return v13(v77,v388,v72);end break;end end end elseif (v80<=114) then if ((v80<=(1953 -((1607 -1048) + 1288))) or (3071<=2647)) then if (v80<=(276 -174)) then if (v80<=(2031 -(609 + 1322))) then if ((v80==(553 -(13 + 441))) or (633>1640)) then v77[v79[7 -5 ]]=v77[v79[1735 -(1400 + 332) ]] -v77[v79[10 -6 ]] ;else local v260=0 -(0 -0) ;local v261;local v262;local v263;while true do if (v260==(1 + 0)) then v263=(0 + 0) -0 ;for v470=v261,v79[2 + 2 ] do v263=v263 + ((733 + 208) -(850 + 90)) ;v77[v470]=v262[v263];end break;end if (v260==(0 + 0)) then v261=v79[5 -3 ];v262={v77[v261](v13(v77,v261 + (2 -1) ,v72))};v260=1 + 0 ;end end end elseif (v80==(185 -84)) then v77[v79[2 + 0 + 0 ]]=v77[v79[5 -2 ]] + v77[v79[3 + 1 ]] ;else local v265=v79[2 + 0 ];local v266=v79[4 + 0 ];local v267=v265 + 2 + 0 ;local v268={v77[v265](v77[v265 + (2 -1) ],v77[v267])};for v346=1,v266 do v77[v267 + v346 ]=v268[v346];end local v269=v268[1 + 0 ];if v269 then v77[v267]=v269;v71=v79[2 + 1 ];else v71=v71 + 1 + 0 ;end end elseif (v80<=(95 + 9)) then if ((3764>2404) and (v80==(75 + (68 -40)))) then local v270=v79[2 -0 ];v77[v270]=v77[v270](v13(v77,v270 + (690 -(579 + 110)) ,v72));else do return v77[v79[1 + 1 ]];end end elseif ((v80>105) or (3811>=4158)) then v77[v79[2 + 0 + 0 ]]=v77[v79[670 -(89 + 578) ]][v79[3 + 1 ]];else v77[v79[2 + 0 ]]=v77[v79[5 -(4 -2) ]][v79[1053 -(572 + 477) ]];end elseif (v80<=110) then if ((743>47) and (v80<=108)) then if (v80==(15 + 92)) then v77[v79[1 + 1 ]]=v77[v79[(942 + 235) -(663 + 511) ]] * v79[4 + 0 + 0 ] ;else do return v77[v79[2 + 0 + 0 ]]();end end elseif ((3599>=1059) and (v80==(14 + 95))) then local v277=v79[2 + 0 ];v77[v277]=v77[v277]();else local v279=86 -(84 + 2) ;local v280;while true do if ((1371<=2507) and (v279==((1301 -(384 + 917)) -0))) then v280=v79[2];v77[v280](v13(v77,v280 + 1 + 0 ,v79[845 -(497 + 345) ]));break;end end end elseif (v80<=((914 -(128 + 569)) -105)) then if (v80>(3 + 108)) then v77[v79[1 + 1 ]]=v29(v68[v79[1336 -(605 + 728) ]],nil,v61);else v77[v79[2 + 0 ]]=v77[v79[6 -3 ]];end elseif (v80==(6 + 107)) then v77[v79[7 -5 ]][v79[3 + (1543 -(1407 + 136)) ]]=v79[726 -(478 + 244) ];else local v286=0 -(1887 -(687 + 1200)) ;local v287;local v288;while true do if ((1 + 0)==v286) then for v473=v287 + (3 -2) ,v79[493 -(457 + 32) ] do v288=v288   .. v77[v473] ;end v77[v79[1 + 1 ]]=v288;break;end if ((v286==(1402 -(832 + 570))) or (3607==2536)) then v287=v79[3 + 0 ];v288=v77[v287];v286=1 + 0 ;end end end elseif (v80<=(491 -369)) then if (v80<=(31 + 87)) then if (v80<=((2120 -(556 + 1154)) -294)) then if (v80>(392 -277)) then v77[v79[2 -0 ]]=v77[v79[2 + 1 ]] * v77[v79[800 -(588 + 208) ]] ;else v77[v79[(17 -12) -3 ]]={};end elseif ((1126<3675) and (v80>(1917 -((979 -(9 + 86)) + 916)))) then v77[v79[4 -2 ]][v79[(427 -(275 + 146)) -3 ]]=v77[v79[3 + 1 ]];else local v293=v79[655 -(232 + 421) ];v77[v293](v13(v77,v293 + (1890 -(1569 + 320)) ,v72));end elseif (v80<=120) then if ((v80>(30 + 89)) or (3344>=3615)) then if ((v77[v79[1 + 1 ]]~=v79[13 -(2 + 7) ]) or (4776<=210)) then v71=v71 + (606 -(316 + 289)) ;else v71=v79[7 -4 ];end elseif ((v77[v79[1 + 1 ]]<v77[v79[12 -8 ]]) or (2613>2752)) then v71=v79[1456 -(666 + 787) ];else v71=v71 + (426 -(360 + 65)) ;end elseif (v80>((178 -(29 + 35)) + (30 -23))) then v77[v79[(946 -629) -(306 + 9) ]]=v77[v79[257 -(79 + 175) ]]/v79[13 -9 ] ;elseif (v79[2 -0 ]<=v77[v79[4 + 0 ]]) then v71=v71 + (2 -1) ;else v71=v79[2 + 1 ];end elseif ((4542>2119) and (v80<=(242 -116))) then if (v80<=124) then if (v80>(1022 -(503 + 396))) then local v295=181 -(92 + 89) ;local v296;local v297;local v298;while true do if (v295==(0 -0)) then v296=v79[2 + 0 ];v297={v77[v296](v13(v77,v296 + (3 -2) ,v79[1 + 2 ]))};v295=2 -1 ;end if (v295==(1 + 0)) then v298=0 + (0 -0) ;for v474=v296,v79[2 + 2 ] do v298=v298 + (2 -1) ;v77[v474]=v297[v298];end break;end end else v77[v79[1 + 1 ]][v79[4 -1 ]]=v79[1248 -(485 + 759) ];end elseif ((v80==(289 -164)) or (1039==338)) then local v301=v79[1191 -(442 + 487 + 260) ];local v302={v77[v301](v13(v77,v301 + (947 -(88 + 858)) ,v79[2 + 1 ]))};local v303=0 -0 ;for v349=v301,v79[4] do v303=v303 + 1 + 0 ;v77[v349]=v302[v303];end else v77[v79[2 + 0 ]]=v77[v79[(409 -(312 + 96)) + 2 ]] + v79[4] ;end elseif (v80<=(917 -(766 + 23))) then if ((v80>(626 -499)) or (4131>4610)) then v77[v79[2 -0 ]]=v77[v79[7 -4 ]] + v79[13 -9 ] ;else v71=v79[3];end elseif (v80<=(1202 -(1036 + 37))) then if (v77[v79[2 + 0 ]]<v77[v79[7 -3 ]]) then v71=v71 + 1 ;else v71=v79[3 + 0 ];end elseif ((4129>=672) and (v80>(1610 -((1112 -471) + 839)))) then local v395=913 -((1195 -(147 + 138)) + 3) ;local v396;while true do if (v395==(0 -0)) then v396=v77[v79[1688 -(1466 + 218) ]];if  not v396 then v71=v71 + 1 + 0 ;else v77[v79[2 + 0 ]]=v396;v71=v79[1151 -(556 + 592) ];end break;end end else local v397=v79[3 -1 ];do return v77[v397](v13(v77,v397 + 1 + 0 ,v79[811 -(329 + 479) ]));end end v71=v71 + (900 -(813 + 86)) + 0 ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
