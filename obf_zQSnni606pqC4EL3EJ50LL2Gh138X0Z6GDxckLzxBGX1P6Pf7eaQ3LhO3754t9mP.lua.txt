--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then local v82=0;while true do if (v82==0) then v19=v0(v3(v30,1,1));return "";end end else local v83=0;local v84;while true do if (v83==0) then v84=v2(v0(v30,16));if v19 then local v99=0;local v100;while true do if (1==v99) then return v100;end if (v99==0) then v100=v5(v84,v19);v19=nil;v99=1;end end else return v84;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v85=(v31/((5 -3)^(v32-1)))%((5 -3)^(((v33-1) -(v32-(1 -0))) + (2 -1))) ;return v85-(v85%(620 -(555 + 64))) ;else local v86=(933 -(857 + 74))^(v32-(569 -(58 + 309 + 201))) ;return (((v31%(v86 + v86))>=v86) and (928 -(214 + 713))) or ((877 -(282 + 595)) + 0) ;end end local function v21() local v34=0;local v35;while true do if (v34==(1638 -(1523 + (1384 -(226 + 1044))))) then return v35;end if (v34==((0 -0) + 0)) then v35=v1(v16,v18,v18);v18=v18 + ((118 -(32 + 85)) -0) ;v34=1066 -(68 + 997) ;end end end local function v22() local v36=0;local v37;local v38;while true do if (v36==(1 + 0)) then return (v38 * (57 + 199)) + v37 ;end if ((957 -(892 + 65))==v36) then v37,v38=v1(v16,v18,v18 + (4 -2) );v18=v18 + (3 -1) ;v36=1 -0 ;end end end local function v23() local v39,v40,v41,v42=v1(v16,v18,v18 + (353 -(87 + 263)) );v18=v18 + 4 ;return (v42 * (16777396 -(67 + (277 -164)))) + (v41 * (48056 + 17480)) + (v40 * 256) + v39 ;end local function v24() local v43=v23();local v44=v23();local v45=1;local v46=(v20(v44,1 + (0 -0) ,79 -59 ) * (((1396 -(416 + 26)) -((2560 -1758) + 65 + 85))^(85 -53))) + v43 ;local v47=v20(v44,37 -16 ,31);local v48=((v20(v44,24 + 8 )==(998 -(915 + (144 -62)))) and  -1) or (2 -1) ;if (v47==((438 -(145 + 293)) + 0)) then if (v46==(0 -0)) then return v48 * (1187 -(1069 + 118)) ;else v47=2 -1 ;v45=0 -0 ;end elseif (v47==(356 + 1691)) then return ((v46==(0 -0)) and (v48 * (1/(0 + 0)))) or (v48 * NaN) ;end return v8(v48,v47-(1814 -(368 + 423)) ) * (v45 + (v46/((6 -4)^(70 -(10 + 8))))) ;end local function v25(v49) local v50;if  not v49 then local v87=430 -(44 + 386) ;while true do if (v87==(1486 -(998 + 488))) then v49=v23();if (v49==(0 + 0)) then return "";end break;end end end v50=v3(v16,v18,(v18 + v49) -(1 + (1138 -(116 + 1022))) );v18=v18 + v49 ;local v51={};for v65=773 -(201 + 571) , #v50 do v51[v65]=v2(v1(v3(v50,v65,v65)));end return v6(v51);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v52=(function() return 0;end)();local v53=(function() return;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();local v58=(function() return;end)();while true do local v67=(function() return 0;end)();while true do if ((0 -0)==v67) then if (v52~= #"[") then else local v95=(function() return 0 + 0 ;end)();local v96=(function() return;end)();while true do if (0==v95) then v96=(function() return 0;end)();while true do if (v96==(1 + 0)) then for v113= #"}",v57 do local v114=(function() return 836 -(660 + 176) ;end)();local v115=(function() return;end)();local v116=(function() return;end)();local v117=(function() return;end)();while true do if (v114~=0) then else local v121=(function() return 0;end)();while true do if (v121==0) then v115=(function() return 0 + 0 ;end)();v116=(function() return nil;end)();v121=(function() return 1;end)();end if (v121==1) then v114=(function() return 203 -(14 + 188) ;end)();break;end end end if (v114~=(676 -(534 + 141))) then else v117=(function() return nil;end)();while true do if (v115==0) then local v385=(function() return 0 + 0 ;end)();while true do if (v385~=1) then else v115=(function() return 1 + 0 ;end)();break;end if (v385==(0 + 0)) then v116=(function() return v21();end)();v117=(function() return nil;end)();v385=(function() return 1;end)();end end end if (v115==1) then if (v116== #">") then v117=(function() return v21()~=(0 -0) ;end)();elseif (v116==(2 -0)) then v117=(function() return v24();end)();elseif (v116~= #"19(") then else v117=(function() return v25();end)();end v58[v113]=(function() return v117;end)();break;end end break;end end end v56[ #"91("]=(function() return v21();end)();v96=(function() return 2;end)();end if (v96==(0 -0)) then v57=(function() return v23();end)();v58=(function() return {};end)();v96=(function() return 1;end)();end if (v96~=2) then else v52=(function() return 2 + 0 ;end)();break;end end break;end end end if (0~=v52) then else local v97=(function() return 0 + 0 ;end)();local v98=(function() return;end)();while true do if (v97~=(396 -(115 + 281))) then else v98=(function() return 0;end)();while true do if (v98==2) then v52=(function() return  #"~";end)();break;end if (v98==1) then v55=(function() return {};end)();v56=(function() return {v53,v54,nil,v55};end)();v98=(function() return 2 + 0 ;end)();end if (v98~=0) then else v53=(function() return {};end)();v54=(function() return {};end)();v98=(function() return 1;end)();end end break;end end end v67=(function() return 1;end)();end if (v67==(2 -1)) then if (v52==2) then for v101= #"}",v23() do local v102=(function() return v21();end)();if (v20(v102, #"{", #"\\")~=(0 -0)) then else local v105=(function() return 0;end)();local v106=(function() return;end)();local v107=(function() return;end)();local v108=(function() return;end)();while true do if (v105~=3) then else if (v20(v107, #"asd", #"asd")~= #">") then else v108[ #"0313"]=(function() return v58[v108[ #".dev"]];end)();end v53[v101]=(function() return v108;end)();break;end if (v105==0) then local v111=(function() return 867 -(550 + 317) ;end)();while true do if (v111==0) then v106=(function() return v20(v102,2 -0 , #"asd");end)();v107=(function() return v20(v102, #"0836",6);end)();v111=(function() return 1;end)();end if (v111==1) then v105=(function() return 1;end)();break;end end end if (v105==(2 -0)) then if (v20(v107, #"!", #",")~= #"~") then else v108[5 -3 ]=(function() return v58[v108[2]];end)();end if (v20(v107,287 -(134 + 151) ,2)~= #"}") then else v108[ #"asd"]=(function() return v58[v108[ #"gha"]];end)();end v105=(function() return 1668 -(970 + 695) ;end)();end if (v105==1) then local v112=(function() return 0;end)();while true do if (v112==(1 -0)) then v105=(function() return 1992 -(582 + 1408) ;end)();break;end if (v112==(0 -0)) then v108=(function() return {v22(),v22(),nil,nil};end)();if (v106==0) then local v298=(function() return 0;end)();local v299=(function() return;end)();while true do if (v298~=0) then else v299=(function() return 0;end)();while true do if (v299~=(0 -0)) then else v108[ #"91("]=(function() return v22();end)();v108[ #".com"]=(function() return v22();end)();break;end end break;end end elseif (v106== #"[") then v108[ #"91("]=(function() return v23();end)();elseif (v106==2) then v108[ #"xxx"]=(function() return v23() -(2^(1840 -(1195 + 629))) ;end)();elseif (v106== #"-19") then local v489=(function() return 0 -0 ;end)();while true do if (0~=v489) then else v108[ #"xnx"]=(function() return v23() -((243 -(187 + 54))^(796 -(162 + 618))) ;end)();v108[ #"asd1"]=(function() return v22();end)();break;end end end v112=(function() return 1;end)();end end end end end end for v103= #"[",v23() do v54[v103-#"," ]=(function() return v28();end)();end return v56;end break;end end end end local function v29(v59,v60,v61) local v62=v59[1 + 0 ];local v63=v59[(607 -(316 + 289)) + 0 ];local v64=v59[3];return function(...) local v68=v62;local v69=v63;local v70=v64;local v71=v27;local v72=1 -(0 -0) ;local v73= -(1 -0);local v74={};local v75={...};local v76=v12("#",...) -1 ;local v77={};local v78={};for v88=0,v76 do if (v88>=v70) then v74[v88-v70 ]=v75[v88 + (1637 -(1373 + 263)) ];else v78[v88]=v75[v88 + (1001 -(451 + 549)) ];end end local v79=(v76-v70) + 1 + 0 ;local v80;local v81;while true do v80=v68[v72];v81=v80[1 + 0 ];if ((3399>=2260) and (v81<=(101 -36))) then if (v81<=(53 -21)) then if (v81<=15) then if ((v81<=(1391 -(746 + 638))) or (393>=4242)) then if (v81<=3) then if ((989<4859) and (v81<=(1 + 0))) then if ((v81==(0 -0)) or (4795<949)) then local v122=v80[343 -(218 + 123) ];local v123,v124=v71(v78[v122](v13(v78,v122 + (1582 -(1535 + 46)) ,v80[3])));v73=(v124 + v122) -(1 + (1453 -(666 + 787))) ;local v125=0 + 0 ;for v300=v122,v73 do local v301=560 -((731 -(360 + 65)) + 238 + 16) ;while true do if (v301==(0 + 0)) then v125=v125 + (1 -0) ;v78[v300]=v123[v125];break;end end end else local v126=1467 -(899 + (822 -(79 + 175))) ;local v127;while true do if ((3842==3842) and (v126==(0 + 0))) then v127=v80[(5 -1) -2 ];v78[v127](v13(v78,v127 + (604 -(268 + 262 + 73)) ,v73));break;end end end elseif (v81==(292 -(60 + 230))) then local v128=v80[574 -(426 + 146) ];do return v13(v78,v128,v128 + v80[1 + 2 ] );end else for v302=v80[2],v80[1459 -(282 + 1174) ] do v78[v302]=nil;end end elseif (v81<=(816 -(569 + (741 -499)))) then if ((v81==(11 -7)) or (3647<1569)) then for v304=v80[1 + 1 ],v80[1027 -(706 + 318) ] do v78[v304]=nil;end else v61[v80[1254 -(721 + 530) ]]=v78[v80[2]];end elseif (v81==(1277 -(945 + 326))) then v78[v80[2]]();else v78[v80[4 -2 ]]=v78[v80[3]] + v78[v80[4 + 0 ]] ;end elseif ((v81<=(711 -(271 + 429))) or (4046>=4927)) then if ((1747<=3601) and (v81<=9)) then if (v81>((15 -7) + 0)) then if (v78[v80[1502 -(1408 + 92) ]]==v78[v80[1090 -(461 + (1524 -(503 + 396))) ]]) then v72=v72 + 1 ;else v72=v80[1291 -(993 + 295) ];end else local v132=v80[2];v78[v132](v78[v132 + 1 + 0 ]);end elseif ((4623>=2787) and (v81==(1181 -(418 + 753)))) then if (v78[v80[1 + 1 ]]==v80[1 + 3 ]) then v72=v72 + 1 + 0 ;else v72=v80[3];end else v78[v80[1 + 1 ]]=v78[v80[(713 -(92 + 89)) -(406 + 123) ]];end elseif ((2234>=1230) and (v81<=13)) then if ((v81==(1781 -(1749 + 20))) or (343==1786) or (804>4359)) then v61[v80[1 + 2 ]]=v78[v80[1324 -(1249 + 73) ]];else v78[v80[2]]=v78[v80[3]] * v80[2 + 2 ] ;end elseif ((4670>=3623) and (v81>(1159 -(466 + 679)))) then v78[v80[4 -2 ]]=v60[v80[8 -5 ]];elseif (v80[1902 -(106 + 1794) ]<v78[v80[2 + 2 ]]) then v72=v80[5 -2 ];else v72=v72 + 1 + 0 ;end elseif (v81<=((35 + 32) -(27 + 17))) then if (v81<=((199 -148) -32)) then if ((2570>2409) and (v81<=17)) then if (v81>16) then if ((2065<2544) and v78[v80[116 -(1 + 3 + 110) ]]) then v72=v72 + 1 ;else v72=v80[587 -((129 -72) + 527) ];end else local v140=v80[1429 -(41 + 1386) ];local v141=v80[107 -(17 + 86) ];local v142=v140 + 2 ;local v143={v78[v140](v78[v140 + 1 + 0 ],v78[v142])};for v306=1 -0 ,v141 do v78[v142 + v306 ]=v143[v306];end local v144=v143[1];if ((1311<=3359) and (v144 or (2609>=3234))) then local v342=0 -0 ;while true do if ((2717<=3156) and (v342==(166 -(122 + 44)))) then v78[v142]=v144;v72=v80[5 -2 ];break;end end else v72=v72 + ((3 + 0) -2) ;end end elseif ((1081<4524) and ((v81>(15 + 3)) or (3033>=4031))) then do return;end elseif v78[v80[2]] then v72=v72 + 1 + 0 ;else v72=v80[5 -2 ];end elseif ((v81<=21) or (1401==4668)) then if (v81>(85 -(30 + 35))) then local v145=0 + 0 ;local v146;while true do if ((440>=71) and (v145==(1257 -(1043 + 214)))) then v146=v78[v80[15 -11 ]];if ((4934>2607) and  not v146) then v72=v72 + (1213 -(323 + 889)) ;else v78[v80[5 -3 ]]=v146;v72=v80[583 -(361 + 219) ];end break;end end else do return v78[v80[322 -(53 + 267) ]]();end end elseif (v81==(5 + 17)) then local v147=413 -(15 + 398) ;local v148;local v149;local v150;while true do if (v147==(983 -(9 + 9 + 964))) then v150={};v149=v10({},{__index=function(v430,v431) local v432=0 -0 ;local v433;while true do if ((2776>=1321) and (v432==0)) then v433=v150[v431];return v433[1 + 0 ][v433[2 + 0 ]];end end end,__newindex=function(v434,v435,v436) local v437=850 -(20 + 830) ;local v438;while true do if (v437==(0 + 0)) then v438=v150[v435];v438[1][v438[128 -(116 + 10) ]]=v436;break;end end end});v147=1 + 1 ;end if (v147==((2253 -1513) -(542 + 196))) then for v439=1 -0 ,v80[2 + 2 ] do local v440=0 + 0 ;local v441;while true do if (v440==(0 + 0 + 0)) then v72=v72 + (2 -1) ;v441=v68[v72];v440=2 -1 ;end if ((v440==1) or (487>2303) or (1400>3116)) then if (v441[(2366 -814) -(1126 + 425) ]==(497 -((1362 -(485 + 759)) + 287))) then v150[v439-(3 -2) ]={v78,v441[3]};else v150[v439-(2 -1) ]={v60,v441[1 + 2 ]};end v77[ #v77 + (978 -(553 + 424)) ]=v150;break;end end end v78[v80[3 -1 ]]=v29(v148,v149,v61);break;end if (v147==0) then v148=v69[v80[(6 -3) + 0 ]];v149=nil;v147=1 + 0 ;end end else v60[v80[2 + 1 ]]=v78[v80[1 + 1 ]];end elseif ((525<1662) and (v81<=(16 + 11))) then if (v81<=(54 -29)) then if ((v81>(1213 -(442 + 747))) or (4503==3462)) then if ((553<=1543) and (v80[5 -3 ]==v78[v80[8 -4 ]])) then v72=v72 + 1 ;else v72=v80[1 + 2 ];end else v78[v80[2]]=v78[v80[14 -11 ]] -v78[v80[757 -(239 + 514) ]] ;end elseif ((2015==2015) and (v81>(10 + 16))) then local v154=1329 -(797 + 532) ;local v155;while true do if (v154==(0 + 0)) then v155=v80[1 + 1 ];v78[v155]=v78[v155]();break;end end else local v156=v80[4 -2 ];local v157={v78[v156](v13(v78,v156 + 1 ,v73))};local v158=731 -(476 + 255) ;for v309=v156,v80[1134 -(369 + 761) ] do v158=v158 + 1 + 0 ;v78[v309]=v157[v158];end end elseif ((v81<=(52 -23)) or (876>2550)) then if (v81>(52 -(970 -(88 + 858)))) then v60[v80[241 -(64 + 174) ]]=v78[v80[1 + 1 ]];else do return;end end elseif ((219<=2456) and (v81<=(44 -(5 + 9)))) then v78[v80[338 -(144 + 192) ]]=v80[219 -(42 + 174) ]~=(0 + 0) ;v72=v72 + 1 + 0 ;elseif (v81>(14 + 17)) then if ((v78[v80[1506 -(363 + 945 + 196) ]]<v78[v80[1584 -(1183 + 17 + 380) ]]) or (4241<=2332)) then v72=v72 + (2 -(790 -(766 + 23))) ;else v72=v80[3 + 0 ];end else v78[v80[2 + 0 ]]=v60[v80[3]];end elseif (v81<=(2023 -(1913 + 62))) then if (v81<=(197 -157)) then if (v81<=36) then if (v81<=34) then if (v81>33) then local v162=v80[2 + 0 ];v78[v162](v13(v78,v162 + ((2 -0) -1) ,v73));elseif ((v78[v80[1935 -(565 + 1368) ]]~=v78[v80[4]]) or (4219==1150)) then v72=v72 + 1 ;else v72=v80[3];end elseif ((v81==35) or (2364<1157)) then local v163=v80[7 -5 ];local v164={v78[v163](v13(v78,v163 + (1 -0) ,v80[3 + 0 ]))};local v165=856 -(564 + 292) ;for v312=v163,v80[6 -2 ] do v165=v165 + 1 ;v78[v312]=v164[v165];end else local v166=v80[5 -3 ];local v167={v78[v166](v13(v78,v166 + 1 + 0 ,v73))};local v168=0;for v315=v166,v80[480 -(41 + 435) ] do v168=v168 + (1002 -(938 + 63)) ;v78[v315]=v167[v168];end end elseif ((v81<=(30 + 8)) or (1167>1278)) then if (v81==(1162 -(936 + 189))) then local v169=v80[7 -4 ];local v170=v78[v169];for v318=v169 + 1 + 0 ,v80[4] do v170=v170   .. v78[v318] ;end v78[v80[2]]=v170;else v78[v80[1615 -(1565 + (162 -114)) ]]=v61[v80[2 + 1 ]];end elseif (v81==(1177 -(782 + 356))) then v78[v80[269 -(176 + 91) ]]=v80[(1080 -(1036 + 37)) -4 ];elseif ((v78[v80[2]]==v80[5 -1 ]) or (2989<=222)) then v72=v72 + (1093 -(975 + 117)) ;else v72=v80[1878 -(157 + 1718) ];end elseif ((2258>1241) and (v81<=44)) then if (v81<=(35 + 7)) then if (v81>(145 -104)) then v72=v80[10 -7 ];else local v177=v80[1020 -(697 + 321) ];v73=(v177 + v79) -(2 -1) ;for v319=v177,v73 do local v320=v74[v319-v177 ];v78[v319]=v320;end end elseif (v81>(90 -(34 + 13))) then if (v78[v80[(7 -3) -2 ]]~=v80[2 + 0 + 2 ]) then v72=v72 + ((1481 -(641 + 839)) -0) ;else v72=v80[7 -4 ];end else local v178=v80[1229 -(322 + 905) ];do return v78[v178](v13(v78,v178 + 1 ,v80[614 -(602 + 9) ]));end end elseif (v81<=(1235 -(449 + (1653 -(910 + 3))))) then if ((41<4259) and ((v81==45) or (1145<=1082))) then v78[v80[2]]=v78[v80[875 -(826 + (117 -71)) ]][v80[951 -((1929 -(1466 + 218)) + 702) ]];else local v181=v80[6 -4 ];local v182=v78[v80[3]];v78[v181 + 1 ]=v182;v78[v181]=v182[v80[1 + 1 + 2 ]];end elseif (v81>(1945 -(260 + 1638))) then if ( not v78[v80[442 -(382 + (1206 -(556 + 592))) ]] or (3105==4881)) then v72=v72 + ((2 + 1) -2) ;else v72=v80[3 + 0 ];end else v78[v80[3 -(809 -(329 + 479)) ]]=v80[8 -5 ]^v78[v80[1209 -(902 + 303) ]] ;end elseif (v81<=(122 -66)) then if (v81<=((979 -(174 + 680)) -(250 -177))) then if ((v81<=(5 + 45)) or (1930<56)) then if (v81==(1739 -(1121 + 569))) then local v187=v78[v80[4]];if  not v187 then v72=v72 + (215 -(22 + 192)) ;else local v351=0 -0 ;while true do if (0==v351) then v78[v80[2]]=v187;v72=v80[686 -(483 + 200) ];break;end end end else local v188=1463 -(1404 + 59) ;local v189;while true do if (((0 -0)==v188) or (1887>4878)) then v189=v80[(2 + 0) -0 ];do return v78[v189](v13(v78,v189 + (766 -(468 + (1036 -(396 + 343)))) ,v73));end break;end end end elseif ((3333==3333) and (v81==51)) then v78[v80[564 -(334 + 228) ]]=v78[v80[10 -(1 + 6) ]][v78[v80[8 -4 ]]];elseif ((v78[v80[2 -0 ]]~=v80[2 + 2 ]) or (2225==20)) then v72=v72 + ((1714 -(29 + 1448)) -((1530 -(135 + 1254)) + (357 -262))) ;else v72=v80[3 + 0 ];end elseif (v81<=(138 -84)) then if ((v81==(127 -74)) or (4087>4116) or (872>=3092)) then v78[v80[2]]=v78[v80[1 + 2 ]] -v78[v80[10 -6 ]] ;else v78[v80[2 + (0 -0) ]]={};end elseif ((1106<=1266) and (v81>(29 + 26))) then local v194=0 -0 ;local v195;while true do if (v194==(0 + 0)) then v195=v80[165 -(62 + 30 + 71) ];v78[v195](v78[v195 + 1 + 0 ]);break;end end else v78[v80[2]]=v78[v80[4 -1 ]]/v80[769 -(574 + 191) ] ;end elseif ((3155<4650) and (v81<=60)) then if (v81<=((1575 -(389 + 1138)) + 10)) then if (v81>57) then if ((4404>=3252) and (v80[4 -2 ]<v78[v80[3 + 1 ]])) then v72=v72 + (575 -(102 + 472)) ;else v72=v80[852 -(254 + 595) ];end else local v197=v80[2];local v198={};for v322=127 -(55 + 71) , #v77 do local v323=0;local v324;while true do if (v323==(0 -0)) then v324=v77[v322];for v477=1790 -(573 + 1217) , #v324 do local v478=v324[v477];local v479=v478[2 -(1 + 0) ];local v480=v478[1 + 1 ];if ((v479==v78) and (v480>=v197)) then local v495=0 -0 ;while true do if (v495==(939 -(714 + 225))) then v198[v480]=v479[v480];v478[(2 + 0) -1 ]=v198;break;end end end end break;end end end end elseif (v81>(56 + 3)) then v78[v80[2 -0 ]]=v29(v69[v80[1 + (1547 -(320 + 1225)) ]],nil,v61);else local v200=v80[2 -0 ];local v201=v78[v200];local v202=v80[3];for v325=807 -(118 + 688) ,v202 do v201[v325]=v78[v200 + v325 ];end end elseif (v81<=(110 -(25 + 23))) then if ((3774>=1839) and (v81>(12 + 49))) then local v203=1886 -((1649 -722) + 959) ;local v204;while true do if ((1107>796) and ((0 -(0 + 0))==v203)) then v204=v80[734 -(16 + (2180 -(157 + 1307))) ];do return v13(v78,v204,v73);end break;end end else local v205=0 -0 ;local v206;local v207;while true do if ((97 -(11 + 86))==v205) then v206=v80[2];v207=v78[v206];v205=2 -1 ;end if ((2811==2811) and (v205==(286 -(175 + 110)))) then for v444=v206 + (1860 -(821 + 1038)) ,v80[6 -(7 -4) ] do v7(v207,v78[v444]);end break;end end end elseif ((2146>1122) and (v81<=(310 -247))) then v78[v80[1798 -(503 + 1293) ]]=v78[v80[8 -5 ]] * v78[v80[3 + 1 ]] ;elseif ((959==959) and (v81>(1125 -(810 + 251)))) then local v354=v80[2];v78[v354]=v78[v354](v13(v78,v354 + 1 + 0 ,v73));else local v356=0 + 0 ;local v357;local v358;local v359;local v360;while true do if (v356==(2 + 0)) then for v482=v357,v73 do v360=v360 + (534 -(43 + 54 + 436)) ;v78[v482]=v358[v360];end break;end if (v356==(734 -(711 + (38 -16)))) then v73=(v359 + v357) -(3 -2) ;v360=859 -(240 + 619) ;v356=1 + 1 ;end if ((0 + 0)==v356) then v357=v80[2 -0 ];v358,v359=v71(v78[v357](v78[v357 + 1 + 0 ]));v356=1;end end end elseif (v81<=(1842 -(1344 + 400))) then if (v81<=81) then if (v81<=(478 -((632 -377) + 150))) then if ((v81<=(55 + 14)) or (56==3616) or (245>=2204)) then if (v81<=(36 + 31)) then if (v81>66) then local v209=0;local v210;while true do if ((3162>=2069) and (v209==0)) then v210=v80[8 -6 ];v78[v210](v13(v78,v210 + 1 ,v80[9 -6 ]));break;end end elseif ((v78[v80[1741 -(404 + 1335) ]]<v78[v80[4]]) or (2421<622)) then v72=v80[409 -(183 + 223) ];else v72=v72 + (1 -0) ;end elseif ((1009<=1130) and (v81>68)) then v78[v80[2 + 0 ]]=v61[v80[2 + 1 ]];else v78[v80[339 -(10 + 327) ]]=v80[3 + 0 ]~=(338 -(118 + 220)) ;v72=v72 + 1 ;end elseif (((2758<2980) and (v81<=(24 + 47))) or (306>3081)) then if ((v81==70) or (3513<2706)) then v78[v80[1028 -(834 + 192) ]]=v78[v80[452 -(108 + 341) ]][v78[v80[1 + 1 + 2 ]]];else v78[v80[8 -6 ]]();end elseif (v81==(1565 -(711 + 782))) then local v216=(0 + 0) -0 ;local v217;while true do if ((2978<3639) and ((v216==(469 -(270 + 199))) or (86>=3626))) then v217=v80[1 + 1 ];v78[v217]=v78[v217]();break;end end else local v218=v80[1821 -(580 + 1239) ];local v219={v78[v218](v78[v218 + 1 + 0 ])};local v220=0 + 0 ;for v328=v218,v80[2 + 2 ] do local v329=0;while true do if ((2395==2395) and (v329==(0 -(0 + 0)))) then v220=v220 + 1 + 0 ;v78[v328]=v219[v220];break;end end end end elseif (v81<=(1244 -(645 + (807 -285)))) then if (v81<=(1865 -(1010 + 780))) then if ((3682>=2888) and (v81==(74 + 0))) then if ((149<479) and (v80[9 -7 ]<=v78[v80[4]])) then v72=v72 + (2 -1) ;else v72=v80[1839 -(1045 + 791) ];end else v78[v80[4 -2 ]]=v78[v80[4 -1 ]] * v78[v80[509 -(351 + 154) ]] ;end elseif (v81==(1650 -(1281 + 293))) then local v222=(570 -(300 + 4)) -(28 + 238) ;local v223;while true do if ((1020>=567) and (v222==(0 -0))) then v223=v80[2];v78[v223](v13(v78,v223 + (1560 -(1381 + 178)) ,v80[3 + 0 ]));break;end end else v78[v80[2 + 0 ]]=v80[2 + 1 ]~=(0 -0) ;end elseif (v81<=(41 + 38)) then if (v81>(548 -(381 + 24 + 65))) then local v225=v80[2];v78[v225]=v78[v225](v13(v78,v225 + 1 + (0 -0) ,v73));elseif ((3780>2709) and (v78[v80[2]]~=v78[v80[3 + 1 ]])) then v72=v72 + 1 ;else v72=v80[4 -1 ];end elseif ((v81==(1236 -(1074 + 82))) or (237>=2273)) then local v227=0 -0 ;local v228;local v229;while true do if ((v227==(1785 -((576 -(112 + 250)) + 1570))) or (2040<=703) or (733>2469)) then for v447=1456 -(990 + 465) , #v77 do local v448=0 + 0 + 0 ;local v449;while true do if ((2497==2497) and (3279<=3967) and (v448==(0 + 0))) then v449=v77[v447];for v501=0 + 0 , #v449 do local v502=v449[v501];local v503=v502[3 -2 ];local v504=v502[2];if ((v503==v78) and (v504>=v228)) then v229[v504]=v503[v504];v502[1727 -((4178 -2510) + 58) ]=v229;end end break;end end end break;end if (v227==0) then v228=v80[628 -(512 + 114) ];v229={};v227=1;end end else v78[v80[2]][v78[v80[7 -4 ]]]=v78[v80[8 -4 ]];end elseif ((v81<=(309 -(127 + 93))) or (1988==877)) then if ((4291>1912) and (v81<=(40 + 24 + 21))) then if ((2003<2339) and (v81<=(16 + 67))) then if ((3901==3901) and (432==432) and (v81>(72 + 8 + 2))) then local v232=v80[6 -4 ];do return v78[v232](v13(v78,v232 + (1995 -(109 + 1885)) ,v80[3]));end else local v233=1469 -(1269 + 200) ;local v234;local v235;while true do if ((201<415) and ((0 -0)==v233)) then v234=v80[818 -(98 + 717) ];v235=v78[v234];v233=1;end if ((v233==(827 -(802 + 24))) or (1145>=1253) or (133==1784)) then for v450=v234 + (1 -0) ,v80[4 -0 ] do v235=v235   .. v78[v450] ;end v78[v80[1 + 0 + 1 ]]=v235;break;end end end elseif (v81==(65 + 19)) then v78[v80[1 + 1 ]]= #v78[v80[1 + 2 ]];else local v237=0;local v238;local v239;local v240;while true do if ((3418>2118) and (v237==0)) then v238=v80[5 -3 ];v239=v78[v238];v237=3 -2 ;end if (v237==(1 + 0 + 0)) then v240=v80[3];for v451=1 + 0 ,v240 do v239[v451]=v78[v238 + v451 ];end break;end end end elseif ((3066<=3890) and (v81<=((1486 -(1001 + 413)) + 15))) then if (v81==(63 + 23)) then local v241=v80[2];local v242,v243=v71(v78[v241](v78[v241 + 1 ]));v73=(v243 + v241) -1 ;local v244=0;for v330=v241,v73 do v244=v244 + 1 + 0 ;v78[v330]=v242[v244];end else local v245=v80[1435 -(797 + 636) ];local v246={v78[v245](v13(v78,v245 + (1620 -(1427 + 192)) ,v80[2 + 1 ]))};local v247=693 -(627 + 66) ;for v333=v245,v80[4] do local v334=0 -0 ;while true do if (v334==0) then v247=v247 + 1 + 0 ;v78[v333]=v246[v247];break;end end end end elseif (v81>(40 + 48)) then if ( not v78[v80[5 -3 ]] or (2998>=3281) or (7>=310)) then v72=v72 + 1 ;else v72=v80[329 -(192 + 134) ];end else do return v78[v80[2]]();end end elseif (v81<=(695 -(512 + 90))) then if ((4992>286) and ((v81<=91) or (4649<=2632))) then if ((v81==(1366 -(316 + 960))) or (2561==3893)) then v78[v80[2 + 0 ]]=v29(v69[v80[3 + 0 ]],nil,v61);else v78[v80[2 + 0 ]]=v78[v80[11 -8 ]][v80[1910 -(1665 + 241) ]];end elseif ((4362>=1421) and (v81>92)) then if ((75<=3546) and ((v80[2]==v78[v80[555 -(83 + 468) ]]) or (3860>4872))) then v72=v72 + (1807 -(1202 + 604)) ;else v72=v80[3];end else v78[v80[9 -7 ]]=v78[v80[4 -1 ]];end elseif (v81<=(263 -168)) then if ((2680<=3418) and (v81>(419 -(45 + 280)))) then local v253=0 + 0 ;local v254;while true do if (v253==0) then v254=v80[2 + 0 ];v78[v254]=v78[v254](v13(v78,v254 + 1 + 0 ,v80[2 + (718 -(373 + 344)) ]));break;end end else v78[v80[1 + 1 ]][v80[5 -2 ]]=v78[v80[1915 -(340 + 709 + 862) ]];end elseif (v81<=(38 + 58)) then local v257=1772 -(1733 + 39) ;local v258;local v259;while true do if (v257==(2 -1)) then v78[v258 + (1035 -(34 + 91 + 909)) ]=v259;v78[v258]=v259[v80[1952 -(1096 + (2247 -1395)) ]];break;end if ((v257==(0 + 0)) or (4288<2876)) then v258=v80[(2 -0) -0 ];v259=v78[v80[3]];v257=1 + 0 ;end end elseif ((2462>=1147) and (v81>97)) then local v366=v80[2];local v367,v368=v71(v78[v366](v13(v78,v366 + (513 -(409 + 103)) ,v80[239 -(46 + 190) ])));v73=(v368 + v366) -(96 -(51 + 44)) ;local v369=0 + 0 ;for v417=v366,v73 do v369=v369 + (1318 -(1114 + 203)) ;v78[v417]=v367[v369];end else v78[v80[2]][v80[729 -(228 + 498) ]]=v80[4];end elseif ((v81<=(25 + 89)) or (4914<2480)) then if ((v81<=(59 + 47)) or (1559==1240)) then if ((v81<=(765 -((1273 -(35 + 1064)) + 489))) or (3998==2298)) then if (v81<=(260 -160)) then if ((v81==(2004 -(830 + 1075))) or (8>=2739)) then if ((566==566) and (v78[v80[2]]==v78[v80[528 -(303 + 221) ]])) then v72=v72 + (1270 -(231 + 1038)) ;else v72=v80[3 + 0 ];end else local v260=v80[1164 -(171 + 991) ];do return v13(v78,v260,v73);end end elseif ((2590==2590) and (v81==101)) then v78[v80[2]][v80[12 -9 ]]=v80[4];elseif ((v80[5 -3 ]<v78[v80[(7 + 2) -5 ]]) or (82>=1870)) then v72=v72 + 1 + 0 ;else v72=v80[10 -7 ];end elseif ((2624<4557) and (v81<=104)) then if ((3921>=3009) and (v81==(297 -194))) then v78[v80[(4 -2) -0 ]]={};else v78[v80[2]]=v78[v80[9 -6 ]]/v80[1 + 3 ] ;end elseif ((2063>=1648) and (v81==105)) then if (v78[v80[1250 -(111 + 1137) ]]<v78[v80[162 -(91 + 67) ]]) then v72=v72 + (2 -1) ;else v72=v80[1 + 2 ];end else v78[v80[525 -(423 + 100) ]]=v80[(1237 -(298 + 938)) + 2 ]^v78[v80[10 -6 ]] ;end elseif (v81<=110) then if ((1066>=452) and (v81<=(57 + 51))) then if (v81>107) then v78[v80[2]]=v78[v80[774 -(326 + 445) ]] + v78[v80[4]] ;else do return v78[v80[(1267 -(233 + 1026)) -6 ]];end end elseif ((v81>109) or (3131>3542)) then v78[v80[2]]=v78[v80[6 -3 ]] * v80[9 -5 ] ;elseif (v78[v80[713 -(530 + 181) ]]<v78[v80[885 -(614 + (1933 -(636 + 1030))) ]]) then v72=v80[35 -(19 + 13) ];else v72=v72 + (1 -0) ;end elseif (v81<=(260 -148)) then if ((2577>=1578) and (v81>(317 -(106 + 100)))) then local v268=v80[1 + 0 + 1 + 0 ];v78[v268]=v78[v268](v78[v268 + 1 ]);else local v270=0;local v271;while true do if ((4103<=4571) and (v270==((0 + 0) -(221 -(55 + 166))))) then v271=v80[3 -1 ];v73=(v271 + v79) -(1813 -(1293 + 519)) ;v270=1 -0 ;end if (v270==(2 -1)) then for v456=v271,v73 do local v457=v74[v456-v271 ];v78[v456]=v457;end break;end end end elseif (v81>(215 -102)) then if ((4974>=2655) and ((v80[8 -6 ]<v78[v80[9 -5 ]]) or (1495==4787))) then v72=v80[1 + 1 + 1 ];else v72=v72 + 1 + 0 ;end else local v272=0 -0 ;local v273;while true do if (v272==(0 + 0)) then v273=v80[1 + 1 ];do return v78[v273](v13(v78,v273 + 1 + 0 ,v73));end break;end end end elseif ((v81<=((123 + 1095) -(709 + 387))) or (2721<=907)) then if (v81<=(1976 -(673 + 1185))) then if (v81<=((1282 -946) -220)) then if (v81>115) then if (v78[v80[2]]<=v78[v80[12 -8 ]]) then v72=v72 + (1 -0) ;else v72=v80[(300 -(36 + 261)) + 0 ];end elseif (v78[v80[2 + (0 -0) ]]<=v78[v80[5 -1 ]]) then v72=v72 + 1 ;else v72=v80[1 + 2 ];end elseif ((4437>=3031) and ((v81>(232 -115)) or (310>4434))) then local v274=v80[3 -1 ];v78[v274]=v78[v274](v13(v78,v274 + (1881 -(446 + 1434)) ,v80[1371 -(34 + 1334) ]));else v78[v80[1285 -(1040 + 243) ]]=v80[(4 + 4) -5 ]~=(0 + 0) ;end elseif (v81<=((3250 -(1035 + 248)) -(559 + 1288))) then if ((v81==119) or (4470<2949)) then v78[v80[1933 -(609 + 1322) ]][v78[v80[457 -(13 + 441) ]]]=v78[v80[14 -10 ]];else local v279=v80[5 -3 ];local v280=v80[19 -15 ];local v281=v279 + 1 + 1 ;local v282={v78[v279](v78[v279 + (3 -2) ],v78[v281])};for v335=22 -(20 + 1) ,v280 do v78[v281 + v335 ]=v282[v335];end local v283=v282[1 + 0 ];if ((2168<=4360) and v283) then v78[v281]=v283;v72=v80[3];else v72=v72 + 1 + 0 ;end end elseif ((v81==(54 + 67)) or (1580==2426)) then v78[v80[2]][v80[8 -5 ]]=v78[v80[3 + 1 ]];else v78[v80[3 -1 ]]=v80[2 + 1 ];end elseif (v81<=(71 + 55)) then if (v81<=(90 + 34)) then if ((v81==(104 + 19)) or (3711==503)) then v72=v80[3];elseif (v80[2 + 0 ]<=v78[v80[437 -((472 -(134 + 185)) + 280) ]]) then v72=v72 + (1134 -(549 + 584)) ;else v72=v80[8 -(690 -(314 + 371)) ];end elseif (v81>(113 + (41 -29))) then v78[v80[1 + 1 ]]=v78[v80[(970 -(478 + 490)) + 1 ]] + v80[4 + 0 ] ;else local v290=0 + 0 ;local v291;local v292;local v293;while true do if ((v290==0) or (420==4318)) then v291=v69[v80[3]];v292=nil;v290=1;end if ((994==994) and (v290==(2 -0))) then for v459=1,v80[3 + 1 ] do local v460=0 + 0 ;local v461;while true do if ((v460==((1840 -(786 + 386)) -((288 -199) + 578))) or (4158<=33)) then if (v461[1 + 0 ]==(190 -98)) then v293[v459-(1050 -(572 + 477)) ]={v78,v461[1382 -(1055 + 324) ]};else v293[v459-(1 + 0) ]={v60,v461[3]};end v77[ #v77 + (1 -0) ]=v293;break;end if ((v460==(0 + 0 + 0)) or (99>4744)) then v72=v72 + (843 -(497 + 345)) ;v461=v68[v72];v460=1 + 0 ;end end end v78[v80[1 + 1 ]]=v29(v291,v292,v61);break;end if ((1655>401) and ((1334 -(605 + 728))==v290)) then v293={};v292=v10({},{__index=function(v462,v463) local v464=v293[v463];return v464[1 + 0 ][v464[3 -1 ]];end,__newindex=function(v465,v466,v467) local v468=0 + 0 ;local v469;while true do if ((3063<=3426) and (v468==(0 -0))) then v469=v293[v466];v469[1 + 0 ][v469[5 -3 ]]=v467;break;end end end});v290=2 + 0 ;end end end elseif ((4341==4341) and (v81<=((65 + 552) -(457 + 32)))) then if ((1459>764) and (v81==((214 -160) + 73))) then local v294=0;local v295;while true do if ((255<=1596) and (v294==(1402 -(832 + 570)))) then v295=v80[2 + 0 ];v78[v295]=v78[v295](v78[v295 + 1 + 0 ]);break;end end else v78[v80[6 -4 ]]=v78[v80[2 + 1 ]] + v80[800 -(588 + 208) ] ;end elseif ((v81<=((1177 -830) -218)) or (4433<1635)) then v78[v80[2]]= #v78[v80[3]];elseif (v81>130) then local v382=v80[1802 -(884 + 916) ];local v383={v78[v382](v78[v382 + 1 + 0 ])};local v384=653 -(232 + 421) ;for v426=v382,v80[1893 -(1569 + 320) ] do local v427=0 + 0 ;while true do if ((v427==((0 -0) + 0)) or (641>4334) or (4300<3244)) then v384=v384 + 1 ;v78[v426]=v383[v384];break;end end end else do return v78[v80[2]];end end v72=v72 + (3 -2) ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
