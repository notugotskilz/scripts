--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v83=v2(v0(v30,16));if v19 then local v89=0;local v90;while true do if (v89==1) then return v90;end if (v89==0) then v90=v5(v83,v19);v19=nil;v89=1;end end else return v83;end end end);local function v20(v31,v32,v33) if v33 then local v84=(v31/(((1 + 4) -3)^(v32-(2 -1))))%(2^(((v33-(1 -0)) -(v32-(2 -1))) + 1)) ;return v84-(v84%(620 -(555 + 64))) ;else local v85=(933 -(857 + 74))^(v32-(569 -(367 + 201))) ;return (((v31%(v85 + v85))>=v85) and (928 -(214 + 713))) or ((877 -(282 + 595)) + 0) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35=1637 -(1523 + 114) ;local v36;local v37;while true do if (v35==1) then return (v37 * (231 + 25)) + v36 ;end if (v35==((117 -(32 + 85)) -0)) then v36,v37=v1(v16,v18,v18 + (1067 -(68 + 978 + 19)) );v18=v18 + (1272 -(226 + 1044)) ;v35=4 -3 ;end end end local function v23() local v38,v39,v40,v41=v1(v16,v18,v18 + 1 + 2 );v18=v18 + ((1311 -(87 + 263)) -(892 + 65)) ;return (v41 * (40022563 -23245347)) + (v40 * (121138 -55602)) + (v39 * ((649 -(67 + 113)) -213)) + v38 ;end local function v24() local v42=0 + 0 ;local v43;local v44;local v45;local v46;local v47;local v48;while true do if (v42==(7 -4)) then if (v47==(0 + 0)) then if (v46==(0 -0)) then return v48 * (952 -(802 + 150)) ;else local v97=0 -(0 + 0) ;while true do if ((0 -0)==v97) then v47=(773 -(201 + 571)) + 0 ;v45=997 -((2053 -(116 + 1022)) + 82) ;break;end end end elseif (v47==(5796 -3749)) then return ((v46==(0 + 0)) and (v48 * (1/0))) or (v48 * NaN) ;end return v8(v48,v47-(1344 -(567 -246)) ) * (v45 + (v46/(2^(1239 -(1069 + 70 + 48))))) ;end if (v42==1) then v45=439 -(145 + 293) ;v46=(v20(v44,2 -1 ,43 -(83 -60) ) * ((1 + 1)^(113 -81))) + v43 ;v42=(433 -(44 + 386)) -1 ;end if ((0 + 0)==v42) then v43=v23();v44=v23();v42=(2278 -(998 + 488)) -(368 + 423) ;end if ((6 -(2 + 2))==v42) then v47=v20(v44,(898 -(814 + 45)) -(10 + 8) ,119 -88 );v48=((v20(v44,(1167 -693) -(416 + 26) )==1) and  -(3 -2)) or (1 + 0) ;v42=3;end end end local function v25(v49) local v50;if  not v49 then v49=v23();if (v49==(0 + 0)) then return "";end end v50=v3(v16,v18,(v18 + v49) -(1 + 0) );v18=v18 + v49 ;local v51={};for v66=886 -(261 + 624) , #v50 do v51[v66]=v2(v1(v3(v50,v66,v66)));end return v6(v51);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v52=(function() return 0 -0 ;end)();local v53=(function() return;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();local v58=(function() return;end)();local v59=(function() return;end)();while true do local v68=(function() return 0;end)();while true do if (v68==(121 -(30 + 90))) then if (v52~=(1 + 1)) then else v57[ #"asd"]=(function() return v21();end)();for v98= #"[",v23() do local v99=(function() return v21();end)();if (v20(v99, #",", #"[")==(0 + 0)) then local v101=(function() return 0 + 0 ;end)();local v102=(function() return;end)();local v103=(function() return;end)();local v104=(function() return;end)();while true do if (v101==1) then local v112=(function() return 0;end)();while true do if (v112==(0 + 0)) then v104=(function() return {v22(),v22(),nil,nil};end)();if (v102==0) then local v303=(function() return 0 -0 ;end)();local v304=(function() return;end)();while true do if (0==v303) then v304=(function() return 0;end)();while true do if (v304==(0 -0)) then v104[ #"19("]=(function() return v22();end)();v104[ #"0313"]=(function() return v22();end)();break;end end break;end end elseif (v102== #",") then v104[ #"xnx"]=(function() return v23();end)();elseif (v102==2) then v104[ #"19("]=(function() return v23() -((2 + 0)^(11 + 5)) ;end)();elseif (v102~= #"19(") then else local v500=(function() return 396 -(115 + 281) ;end)();local v501=(function() return;end)();while true do if (v500~=(0 -0)) then else v501=(function() return 0;end)();while true do if (v501==0) then v104[ #"xxx"]=(function() return v23() -(2^16) ;end)();v104[ #"xnxx"]=(function() return v22();end)();break;end end break;end end end v112=(function() return 1 + 0 ;end)();end if (v112==1) then v101=(function() return 4 -2 ;end)();break;end end end if (2==v101) then if (v20(v103, #"/", #"}")== #",") then v104[7 -5 ]=(function() return v59[v104[869 -(550 + 317) ]];end)();end if (v20(v103,2 -0 ,2 -0 )== #"!") then v104[ #"-19"]=(function() return v59[v104[ #"-19"]];end)();end v101=(function() return 8 -5 ;end)();end if (v101==(285 -(134 + 151))) then local v113=(function() return 1665 -(970 + 695) ;end)();while true do if (v113==(1 -0)) then v101=(function() return 1991 -(582 + 1408) ;end)();break;end if (v113==(0 -0)) then v102=(function() return v20(v99,2 -0 , #"19(");end)();v103=(function() return v20(v99, #"?id=",22 -16 );end)();v113=(function() return 1;end)();end end end if (3==v101) then if (v20(v103, #"gha", #"xxx")== #"|") then v104[ #"?id="]=(function() return v59[v104[ #"asd1"]];end)();end v54[v98]=(function() return v104;end)();break;end end end end for v100= #"|",v23() do v55,v100,v28=(function() return v53(v55,v100,v28);end)();end return v57;end break;end if (v68~=0) then else local v91=(function() return 0;end)();while true do if ((1825 -(1195 + 629))~=v91) then else v68=(function() return 1 -0 ;end)();break;end if ((241 -(187 + 54))==v91) then if ((781 -(162 + 618))==v52) then local v105=(function() return 0 + 0 ;end)();local v106=(function() return;end)();while true do if (v105~=0) then else v106=(function() return 0 + 0 ;end)();while true do if (v106==0) then local v118=(function() return 0 -0 ;end)();while true do if (v118==0) then v57=(function() return {v54,v55,nil,v56};end)();v58=(function() return v23();end)();v118=(function() return 1;end)();end if (v118==1) then v106=(function() return 1 + 0 ;end)();break;end end end if (1~=v106) then else v59=(function() return {};end)();for v119= #"!",v58 do local v120=(function() return 1636 -(1373 + 263) ;end)();local v121=(function() return;end)();local v122=(function() return;end)();local v123=(function() return;end)();while true do if (v120==(1000 -(451 + 549))) then local v393=(function() return 0;end)();while true do if (v393==0) then v121=(function() return 0;end)();v122=(function() return nil;end)();v393=(function() return 1 + 0 ;end)();end if (v393==1) then v120=(function() return 1;end)();break;end end end if (v120==1) then v123=(function() return nil;end)();while true do if (0==v121) then local v491=(function() return 0;end)();while true do if (v491~=0) then else v122=(function() return v21();end)();v123=(function() return nil;end)();v491=(function() return 1 -0 ;end)();end if (v491==(1 -0)) then v121=(function() return 1385 -(746 + 638) ;end)();break;end end end if (v121==1) then if (v122== #">") then v123=(function() return v21()~=0 ;end)();elseif (v122==2) then v123=(function() return v24();end)();elseif (v122== #"-19") then v123=(function() return v25();end)();end v59[v119]=(function() return v123;end)();break;end end break;end end end v106=(function() return 2;end)();end if (v106==2) then v52=(function() return 2;end)();break;end end break;end end end if (v52~=0) then else v53=(function() return function(v107,v108,v109) local v110=(function() return 0 + 0 ;end)();local v111=(function() return;end)();while true do if (v110~=0) then else v111=(function() return 0 -0 ;end)();while true do if (0==v111) then local v305=(function() return 341 -(218 + 123) ;end)();while true do if (v305~=(1581 -(1535 + 46))) then else v107[v108-#"}" ]=(function() return v109();end)();return v107,v108,v109;end end end end break;end end end;end)();v54=(function() return {};end)();v55=(function() return {};end)();v56=(function() return {};end)();v52=(function() return 1 + 0 ;end)();end v91=(function() return 1;end)();end end end end end end local function v29(v60,v61,v62) local v63=v60[1 + 0 ];local v64=v60[2];local v65=v60[563 -(306 + 254) ];return function(...) local v69=v63;local v70=v64;local v71=v65;local v72=v27;local v73=1 + 0 ;local v74= -(1 -0);local v75={};local v76={...};local v77=v12("#",...) -(1468 -(899 + 568)) ;local v78={};local v79={};for v86=0 + 0 ,v77 do if (v86>=v71) then v75[v86-v71 ]=v76[v86 + (2 -1) ];else v79[v86]=v76[v86 + (604 -(268 + 335)) ];end end local v80=(v77-v71) + ((56 + 235) -((202 -142) + 230)) ;local v81;local v82;while true do v81=v69[v73];v82=v81[573 -(426 + 146) ];if (((3348<=4551) and (v82<=(8 + 57))) or (2590==2864)) then if (((3441<=3825) and (v82<=32)) or (2624>4149)) then if (v82<=(1471 -(282 + 1174))) then if (v82<=7) then if (v82<=(814 -(569 + 242))) then if (v82<=(2 -1)) then if ((v82==(0 + 0)) or (2618>=4495)) then if (v81[1026 -(706 + 318) ]<v79[v81[1255 -((1326 -(316 + 289)) + 530) ]]) then v73=v73 + (1272 -(945 + 326)) ;else v73=v81[3];end else v61[v81[(18 -11) -4 ]]=v79[v81[2 + 0 ]];end elseif (v82>2) then v79[v81[2]]=v79[v81[3]][v79[v81[704 -(271 + 429) ]]];else v79[v81[2 + 0 ]]=v81[1503 -(1408 + 92) ];end elseif (v82<=5) then if (v82>(1090 -(461 + 625))) then if (v81[1 + 1 ]<v79[v81[4]]) then v73=v81[3];else v73=v73 + (1289 -(993 + (1748 -(666 + 787)))) ;end else local v130=v81[1 + 1 ];v79[v130]=v79[v130](v13(v79,v130 + (1172 -(418 + 753)) ,v74));end elseif (v82>(3 + 3)) then do return;end else v79[v81[2]]=v29(v70[v81[3]],nil,v62);end elseif ((v82<=(2 + 9)) or (2485>=3131)) then if (v82<=((428 -(360 + 65)) + 6)) then if (v82==(3 + 5)) then v79[v81[531 -(380 + 26 + 123) ]]=v79[v81[1772 -(1749 + (274 -(79 + 175))) ]][v81[1 + 3 ]];else local v135=v81[(2087 -763) -(1249 + 73) ];do return v79[v135](v13(v79,v135 + 1 + 0 ,v74));end end elseif (v82==10) then local v136=v81[1147 -(466 + 679) ];local v137={v79[v136](v13(v79,v136 + (2 -1) ,v81[8 -5 ]))};local v138=0;for v306=v136,v81[1904 -(106 + 1794) ] do local v307=0 + 0 ;while true do if (v307==(0 + 0)) then v138=v138 + 1 ;v79[v306]=v137[v138];break;end end end else v79[v81[2]]=v81[3]~=0 ;end elseif ((v82<=13) or (2804<=2785)) then if ((4079>=2890) and (v82==(35 -23))) then local v140=0 -0 ;local v141;while true do if (v140==(114 -(4 + 110))) then v141=v79[v81[588 -(57 + 527) ]];if  not v141 then v73=v73 + (1428 -(41 + 1386)) ;else local v475=0;while true do if ((4474<=4770) and (v475==(103 -(17 + 86)))) then v79[v81[2]]=v141;v73=v81[8 -5 ];break;end end end break;end end else v73=v81[3 + 0 ];end elseif (v82==(30 -16)) then v79[v81[5 -3 ]][v81[169 -(122 + 44) ]]=v81[4];elseif (v81[2 -0 ]<=v79[v81[12 -(15 -7) ]]) then v73=v73 + 1 ;else v73=v81[3 + 0 ];end elseif ((v82<=23) or (4571==3415)) then if ((v82<=(3 + 16)) or (4942==3903) or (4441>4787)) then if ((v82<=(33 -16)) or (248>4845)) then if ((1569==1569) and (v82==(81 -(30 + 35)))) then local v145=v81[2 + 0 ];local v146,v147=v72(v79[v145](v13(v79,v145 + (1258 -(1043 + 214)) ,v81[3])));v74=(v147 + v145) -(3 -2) ;local v148=899 -(503 + 396) ;for v308=v145,v74 do v148=v148 + (1213 -(323 + 889)) ;v79[v308]=v146[v148];end else local v149=v81[5 -3 ];local v150={v79[v149](v13(v79,v149 + (321 -(53 + 267)) ,v81[1 + 2 ]))};local v151=0;for v311=v149,v81[417 -(15 + 398) ] do local v312=0;while true do if ((v312==(982 -((34 -16) + 964))) or (4927<=3221)) then v151=v151 + (3 -2) ;v79[v311]=v150[v151];break;end end end end elseif ((1920==1920) and (v82>(11 + 7))) then if (v79[v81[2 + 0 ]]<=v79[v81[(438 + 416) -(20 + 830) ]]) then v73=v73 + 1 + 0 ;else v73=v81[129 -(69 + 47 + 10) ];end else do return;end end elseif (v82<=(2 + 19)) then if ((v82==(758 -(542 + 196))) or (647==4477)) then for v313=v81[3 -1 ],v81[1 + 2 ] do v79[v313]=nil;end else v62[v81[2 + 1 ]]=v79[v81[1 + 1 ]];end elseif (v82==(57 -35)) then if ((3819==3819) and (v79[v81[(15 -11) -2 ]]~=v81[4])) then v73=v73 + (1552 -(1126 + 425)) ;else v73=v81[3];end else v79[v81[2]][v79[v81[3]]]=v79[v81[(56 + 353) -(118 + 287) ]];end elseif (v82<=(61 -34)) then if (v82<=(97 -72)) then if ((v82>24) or (1780>2787)) then v79[v81[1123 -(118 + 1003) ]]=v81[8 -5 ]~=(377 -(142 + 235)) ;v73=v73 + ((4 + 0) -3) ;else v79[v81[1 + 1 ]]=v79[v81[3]] * v79[v81[1 + (8 -5) ]] ;end elseif ((v82==(1003 -(553 + 424))) or (3937<=1230)) then local v158=0;local v159;local v160;local v161;while true do if (v158==(1 -0)) then v161=0 + 0 ;for v443=v159,v81[4 + 0 ] do v161=v161 + 1 + 0 ;v79[v443]=v160[v161];end break;end if (v158==(0 + 0 + 0)) then v159=v81[2 + 0 ];v160={v79[v159](v13(v79,v159 + 1 ,v74))};v158=2 -(1 -0) ;end end elseif (v81[5 -3 ]==v79[v81[8 -4 ]]) then v73=v73 + 1 + 0 ;else v73=v81[14 -11 ];end elseif (v82<=29) then if (v82>28) then local v162=v81[755 -(239 + 514) ];v79[v162](v13(v79,v162 + 1 + 0 ,v74));else v79[v81[1331 -(797 + 532) ]]=v81[3 + 0 ]^v79[v81[2 + 2 ]] ;end elseif (v82<=(70 -40)) then v79[v81[(2448 -(485 + 759)) -(373 + 829) ]]= #v79[v81[734 -(476 + (590 -335)) ]];elseif ((v82>31) or (2637<1706)) then v62[v81[1133 -(369 + 761) ]]=v79[v81[2 + 0 ]];else local v355=v81[2 -0 ];local v356={v79[v355](v79[v355 + 1 ])};local v357=1189 -(442 + 747) ;for v396=v355,v81[242 -(64 + (1309 -(832 + 303))) ] do local v397=0;while true do if ((v397==((946 -(88 + 858)) + 0)) or (1466>4360)) then v357=v357 + (1 -0) ;v79[v396]=v356[v357];break;end end end end elseif ((v82<=(384 -(144 + 192))) or (2669<=2409)) then if (v82<=(256 -(42 + 174))) then if ((v82<=36) or (14>994)) then if (v82<=(26 + 8)) then if ((v82==(28 + 5)) or (1401>4696)) then local v165=v70[v81[2 + 1 + 0 ]];local v166;local v167={};v166=v10({},{__index=function(v315,v316) local v317=v167[v316];return v317[1505 -(363 + 1141) ][v317[1582 -(1183 + 397) ]];end,__newindex=function(v318,v319,v320) local v321=0;local v322;while true do if ((401<=734) and (v321==(0 -0))) then v322=v167[v319];v322[1 + 0 ][v322[2 + 0 ]]=v320;break;end end end});for v323=1976 -(1913 + 62) ,v81[3 + 1 ] do local v324=0 -0 ;local v325;while true do if (v324==(1933 -(565 + 1368))) then v73=v73 + (3 -2) ;v325=v69[v73];v324=1662 -(61 + 1416 + 184) ;end if (v324==(1 -0)) then if ((v325[1 + 0 ]==(918 -(564 + 292))) or (2167>=3426)) then v167[v323-(1 -0) ]={v79,v325[3 + 0 ]};else v167[v323-(477 -((202 -161) + 435)) ]={v61,v325[3]};end v78[ #v78 + (1126 -((1279 -343) + 189)) ]=v167;break;end end end v79[v81[1 + 1 ]]=v29(v165,v166,v62);else local v169=1613 -(1565 + 48) ;local v170;while true do if (v169==(0 + 0)) then v170=v81[1140 -(782 + 356) ];v79[v170]=v79[v170](v79[v170 + ((705 -437) -(176 + 91)) ]);break;end end end elseif (v82==(91 -56)) then v79[v81[2 -(0 -0) ]]=v79[v81[1095 -(975 + 117) ]][v81[1879 -(157 + 1718) ]];elseif ((764<3285) and (v79[v81[2 + 0 ]]<=v79[v81[14 -10 ]])) then v73=v73 + ((1076 -(1036 + 37)) -2) ;else v73=v81[3];end elseif (v82<=(1056 -(697 + 321))) then if (v82==(100 -63)) then local v173=v79[v81[8 -4 ]];if ((2499==2499) and  not v173) then v73=v73 + (2 -1) ;else v79[v81[1 + 1 ]]=v173;v73=v81[5 -2 ];end else local v174=0 -0 ;local v175;local v176;local v177;while true do if (v174==(1227 -(322 + 642 + 263))) then v175=v81[(1193 -580) -(602 + 9) ];v176=v79[v175];v174=1;end if ((v174==(1190 -(449 + 740))) or (3280<1321)) then v177=v81[3];for v450=(687 + 186) -(826 + 46) ,v177 do v176[v450]=v79[v175 + v450 ];end break;end end end elseif (v82==(1519 -(641 + 839))) then v79[v81[2]]=v79[v81[950 -(245 + 702) ]] * v81[12 -8 ] ;else v79[v81[1 + 1 ]]={};end elseif (v82<=(1942 -(260 + (2551 -(910 + 3))))) then if ((4927>=2303) and (v82<=(482 -(382 + 58)))) then if (v82>(131 -90)) then for v326=v81[2 + 0 ],v81[5 -2 ] do v79[v326]=nil;end else local v180=v81[5 -3 ];local v181=v79[v81[1208 -((2299 -1397) + (1987 -(1466 + 218))) ]];v79[v180 + (1 -0) ]=v181;v79[v180]=v181[v81[9 -5 ]];end elseif (v82>(4 + 39)) then if (v79[v81[1692 -(1121 + 569) ]]==v81[218 -(22 + 192) ]) then v73=v73 + 1 ;else v73=v81[686 -(222 + 261 + 200) ];end elseif (((3462>=1032) and  not v79[v81[1465 -(1404 + 59) ]]) or (692>=4933)) then v73=v73 + 1 ;else v73=v81[3];end elseif (v82<=46) then if ((v82==(123 -78)) or (3154<=2260)) then local v185=v81[2 -0 ];v79[v185](v79[v185 + (1149 -(556 + 592)) ]);else local v186=v81[767 -(468 + 297) ];do return v13(v79,v186,v186 + v81[565 -(334 + 228) ] );end end elseif ((v82>(158 -111)) or (1077>=2011) or (2637>3149)) then local v187=0 -0 ;local v188;while true do if (v187==0) then v188=v81[2];v79[v188](v13(v79,v188 + ((1 + 0) -0) ,v81[1 + 2 ]));break;end end else v79[v81[2]]=v81[(1047 -(329 + 479)) -(141 + 95) ];end elseif (v82<=(56 + 0)) then if (v82<=52) then if (v82<=50) then if (v82>(125 -76)) then v79[v81[4 -2 ]][v79[v81[1 + 2 ]]]=v79[v81[10 -6 ]];else v79[v81[2 + 0 ]]=v81[2 + (855 -(174 + 680)) ]^v79[v81[(17 -12) -1 ]] ;end elseif (v82>51) then if (((1543<2415) and (v79[v81[2 + 0 ]]<v79[v81[167 -(92 + 71) ]])) or (3992<2407)) then v73=v81[2 + 1 ];else v73=v73 + (1 -0) ;end else v79[v81[767 -(574 + 191) ]]=v61[v81[3 + 0 ]];end elseif ((v82<=54) or (2902>4859)) then if ((1679<4359) and (v82==(132 -79))) then if (v79[v81[2 + (0 -0) ]]~=v79[v81[853 -(254 + 595) ]]) then v73=v73 + (127 -(55 + 71)) ;else v73=v81[3];end else do return v79[v81[2 -0 ]]();end end elseif (v82>((1318 + 527) -(573 + 1217))) then local v196=v81[2];local v197=v79[v81[(747 -(396 + 343)) -5 ]];v79[v196 + 1 + 0 ]=v197;v79[v196]=v197[v81[5 -1 ]];else v79[v81[941 -(714 + 225) ]]=v79[v81[8 -5 ]] * v79[v81[1 + 3 ]] ;end elseif (v82<=(83 -23)) then if ((1913<4670) and ((v82<=58) or (4444<2015))) then if ((v82>(7 + 50)) or (2846<879)) then if ((4588==4588) and  not v79[v81[2]]) then v73=v73 + (1 -0) ;else v73=v81[809 -(118 + 688) ];end elseif ((v79[v81[50 -(25 + 23) ]]~=v81[4]) or (4200==2332) or (347==2065)) then v73=v73 + 1 + 0 ;else v73=v81[3];end elseif ((v82>(1945 -(927 + 959))) or (1278>=1316)) then v79[v81[6 -4 ]]=v79[v81[3]] + v79[v81[(2213 -(29 + 1448)) -(16 + 716) ]] ;else v79[v81[3 -1 ]]();end elseif (v82<=62) then if (v82==61) then v79[v81[99 -((1400 -(135 + 1254)) + 86) ]]=v79[v81[3]][v79[v81[9 -5 ]]];else v79[v81[287 -((659 -484) + 110) ]]=v79[v81[6 -3 ]];end elseif (v82<=63) then do return v79[v81[9 -7 ]];end elseif ((v82>((8684 -6824) -(503 + 862 + 431))) or (1311>2697)) then if ((v79[v81[2]]==v81[1531 -(389 + 1138) ]) or (2717>3795)) then v73=v73 + (2 -1) ;else v73=v81[3 + 0 ];end else v79[v81[2]]=v79[v81[1064 -(810 + 251) ]] * v81[3 + 1 ] ;end elseif ((v82<=(31 + 67)) or (1081<391)) then if (((1082==1082) and (v82<=(74 + (581 -(102 + 472))))) or (121>3438)) then if (v82<=((572 + 34) -(43 + 490))) then if ((71<1949) and (1328<=4878) and (v82<=69)) then if ((4087>=1355) and (v82<=(800 -(395 + 316 + 22)))) then if (v82>((238 + 17) -189)) then if v79[v81[2]] then v73=v73 + (860 -(240 + 619)) ;else v73=v81[(1546 -(320 + 1225)) + 2 ];end else local v207=v81[2 -0 ];v79[v207]=v79[v207](v13(v79,v207 + 1 + 0 ,v81[1747 -(1344 + 400) ]));end elseif (v82==(120 -52)) then v79[v81[2]]=v62[v81[408 -(255 + 150) ]];else local v211=0;local v212;local v213;local v214;while true do if (((1 + 0)==v211) or (590>4650)) then v214=0;for v454=v212,v81[3 + 1 ] do v214=v214 + (4 -3) ;v79[v454]=v213[v214];end break;end if ((v211==(0 -0)) or (3774<=3667)) then v212=v81[2 + 0 ];v213={v79[v212](v79[v212 + (407 -(183 + 223)) ])};v211=(1465 -(157 + 1307)) -0 ;end end end elseif ((4254==4254) and (v82<=(48 + 23))) then if ((3196>=2550) and (v82==(26 + 44))) then if ((1270<2146) and (v79[v81[2]]~=v79[v81[341 -(10 + 327) ]])) then v73=v73 + 1 + 0 ;else v73=v81[341 -(118 + 220) ];end elseif ((2456<4176) and (v81[1 + 1 ]<v79[v81[453 -(108 + 341) ]])) then v73=v81[2 + 1 ];else v73=v73 + (4 -3) ;end elseif (v82==(1565 -(711 + 782))) then v61[v81[3]]=v79[v81[(1862 -(821 + 1038)) -1 ]];else v79[v81[471 -(270 + 199) ]]=v62[v81[3]];end elseif (v82<=77) then if ((v82<=(25 + 50)) or (1150==3452)) then if ((4563>=56) and (v82==(1893 -(580 + 1239)))) then v79[v81[(12 -7) -3 ]][v81[3]]=v81[4 + 0 ];else local v221=0 + 0 ;local v222;while true do if ((1875<2258) and ((v221==(0 + 0)) or (446==622))) then v222=v81[(1 + 3) -2 ];v79[v222](v13(v79,v222 + 1 + 0 ,v74));break;end end end elseif ((2069>1009) and (v82>(1243 -(645 + 522)))) then local v223=1790 -(1010 + 780) ;local v224;local v225;local v226;local v227;while true do if ((2 + 0)==v223) then for v457=v224,v74 do v227=v227 + 1 ;v79[v457]=v225[v227];end break;end if ((0 -0)==v223) then v224=v81[2];v225,v226=v72(v79[v224](v79[v224 + ((3 -1) -1) ]));v223=1837 -(1045 + 295 + 496) ;end if ((2 -1)==v223) then v74=(v226 + v224) -(1 -0) ;v227=0;v223=507 -(351 + 154) ;end end else local v228=v81[2];v74=(v228 + v80) -1 ;for v328=v228,v74 do local v329=1574 -(1281 + (726 -433)) ;local v330;while true do if ((1173>41) and (v329==((1292 -(834 + 192)) -(28 + 238)))) then v330=v75[v328-v228 ];v79[v328]=v330;break;end end end end elseif ((v82<=(6 + 73)) or (56>=3208)) then if (v82==(174 -96)) then local v229=1559 -(1381 + 178) ;local v230;while true do if ((4313>3373) and (12<4208) and (v229==(0 + 0 + 0 + 0))) then v230=v81[2];v79[v230]=v79[v230]();break;end end else local v231=(0 -0) + 0 ;local v232;local v233;while true do if ((v231==(1 + (304 -(300 + 4)))) or (4493==2225)) then for v462=v232 + (3 -2) ,v81[4] do v233=v233   .. v79[v462] ;end v79[v81[2 + 0 + 0 ]]=v233;break;end if ((3104>=3092) and (0==v231)) then v232=v81[3];v233=v79[v232];v231=471 -(381 + 89) ;end end end elseif ((3548>3098) and (v82>(71 + (23 -14)))) then v79[v81[2 + 0 ]][v81[4 -1 ]]=v79[v81[1160 -((1436 -(112 + 250)) + 82) ]];else v79[v81[3 -1 ]]={};end elseif ((v82<=(1873 -(86 + 128 + 1570))) or (2990<=2980)) then if (v82<=(1540 -((2480 -1490) + 465))) then if ((v82<=83) or (3252==503)) then if (v82==(20 + 14 + 48)) then local v237=0 + 0 ;local v238;local v239;while true do if ((4733>2066) and ((1 + 0)==v237)) then for v463=1 + 0 + 0 , #v78 do local v464=v78[v463];for v476=0 -0 , #v464 do local v477=1726 -(1668 + 58) ;local v478;local v479;local v480;while true do if ((v477==(626 -(512 + 114))) or (2575>=4275)) then v478=v464[v476];v479=v478[2 -1 ];v477=1;end if ((3549>=916) and (v477==1)) then v480=v478[3 -1 ];if (((v479==v79) and (v480>=v238)) or (2189<=245)) then v239[v480]=v479[v480];v478[3 -2 ]=v239;end break;end end end end break;end if ((v237==(0 + 0)) or (1389>3925)) then v238=v81[1 + 1 ];v239={};v237=1 + 0 ;end end else v79[v81[2 + 0 + 0 ]]=v79[v81[10 -7 ]];end elseif (v82==(2078 -(109 + 1885))) then v79[v81[1471 -(1269 + 200) ]]=v79[v81[3]] + v81[7 -3 ] ;elseif (v81[817 -(98 + 717) ]==v79[v81[830 -(802 + 24) ]]) then v73=v73 + (1 -0) ;else v73=v81[3];end elseif ((4169>=3081) and (v82<=(109 -22))) then if (v82==(13 + 73)) then local v243=0 + 0 ;local v244;while true do if ((349<=894) and (v243==(0 + 0))) then v244=v81[1 + 1 ];v74=(v244 + v80) -1 ;v243=2 -1 ;end if ((731<=2978) and (v243==(3 -2))) then for v465=v244,v74 do local v466=v75[v465-v244 ];v79[v465]=v466;end break;end end else do return v79[v81[(1415 -(1001 + 413)) + 1 ]];end end elseif (v82>88) then if ((v79[v81[1 + 1 ]]<v79[v81[(8 -4) + 0 ]]) or (3626<=1306) or (892>3892)) then v73=v73 + 1 + 0 ;else v73=v81[2 + 1 ];end else v79[v81[1435 -(797 + 636) ]]=v29(v70[v81[3]],nil,v62);end elseif ((v82<=(451 -358)) or (4466==900)) then if (v82<=91) then if (v82==((2591 -(244 + 638)) -(1427 + 192))) then if (v79[v81[2]] or (2084>=2888)) then v73=v73 + 1 ;else v73=v81[2 + 1 ];end else v79[v81[4 -2 ]]= #v79[v81[3 + 0 ]];end elseif ((479<1863) and (v82==(42 + 50))) then local v247=v81[328 -(192 + 134) ];local v248={};for v331=1277 -(316 + 960) , #v78 do local v332=0 + 0 ;local v333;while true do if (v332==(0 + (693 -(627 + 66)))) then v333=v78[v331];for v481=0 + 0 , #v333 do local v482=v333[v481];local v483=v482[1];local v484=v482[7 -(14 -9) ];if ((v483==v79) and (v484>=v247)) then v248[v484]=v483[v484];v482[(1154 -(512 + 90)) -(83 + 468) ]=v248;end end break;end end end elseif (((1368<3780) and (v81[1808 -(1202 + 604) ]<v79[v81[18 -14 ]])) or (2428>=4038)) then v73=v73 + (1 -0) ;else v73=v81[8 -5 ];end elseif (v82<=(2001 -(1665 + 241))) then if ((v82>(419 -(45 + (997 -(373 + 344))))) or (2878>2897)) then if ((v79[v81[2 + 0 ]]==v79[v81[4 + 0 + 0 ]]) or (3169==2273)) then v73=v73 + 1 + 0 ;else v73=v81[2 + 1 ];end else local v249=v81[1 + 2 ];local v250=v79[v249];for v334=v249 + (1 -0) ,v81[1915 -(340 + 1571) ] do v250=v250   .. v79[v334] ;end v79[v81[1 + 1 ]]=v250;end elseif (v82<=96) then local v252=v81[1774 -(1733 + 39) ];do return v13(v79,v252,v74);end elseif ((2481<=3279) and (v82==97)) then local v376=v70[v81[8 -5 ]];local v377;local v378={};v377=v10({},{__index=function(v414,v415) local v416=0;local v417;while true do if (v416==0) then v417=v378[v415];return v417[1035 -(125 + 909) ][v417[2]];end end end,__newindex=function(v418,v419,v420) local v421=v378[v419];v421[1949 -(1096 + 852) ][v421[1 + 1 ]]=v420;end});for v423=1 -0 ,v81[4 + (0 -0) ] do v73=v73 + 1 ;local v424=v69[v73];if ((v424[1]==(574 -(409 + 103))) or (2469>3676)) then v378[v423-1 ]={v79,v424[1 + 2 ]};else v378[v423-(1318 -(1114 + 203)) ]={v61,v424[2 + 1 ]};end v78[ #v78 + 1 ]=v378;end v79[v81[665 -(174 + 489) ]]=v29(v376,v377,v62);else v79[v81[5 -3 ]]=v79[v81[1908 -(830 + 1075) ]]/v81[528 -(303 + 221) ] ;end elseif ((v82<=(1383 -((390 -159) + 1038))) or (1063<=877)) then if (v82<=(89 + 17)) then if (v82<=(1264 -(171 + 991))) then if (v82<=100) then if (v82>((1506 -(35 + 1064)) -308)) then if ((2314==2314) and (v79[v81[5 -3 ]]==v79[v81[9 -5 ]])) then v73=v73 + 1 + 0 + 0 ;else v73=v81[10 -7 ];end else local v253=v81[5 -3 ];local v254=v81[5 -1 ];local v255=v253 + (4 -2) ;local v256={v79[v253](v79[v253 + (1249 -(111 + 1137)) ],v79[v255])};for v335=159 -(91 + 67) ,v254 do v79[v255 + v335 ]=v256[v335];end local v257=v256[1];if ((233<487) and v257) then local v382=(0 + 0) -0 ;while true do if (v382==(0 + 0)) then v79[v255]=v257;v73=v81[526 -(423 + 100) ];break;end end else v73=v73 + 1 + 0 ;end end elseif ((924>=477) and (v82>(279 -178))) then local v258=v81[2 + 0 ];do return v79[v258](v13(v79,v258 + (772 -(326 + 445)) ,v81[13 -10 ]));end else local v259=0 -0 ;local v260;while true do if ((1813<=3778) and (v259==(0 -0))) then v260=v81[713 -(530 + 181) ];do return v79[v260](v13(v79,v260 + (882 -(614 + 267)) ,v74));end break;end end end elseif ((2473>=201) and (v82<=104)) then if (v82==(135 -(19 + (1249 -(298 + 938))))) then if ((4150==4150) and (v81[2 -0 ]<=v79[v81[9 -5 ]])) then v73=v73 + (2 -1) ;else v73=v81[3];end else v79[v81[1 + 1 ]]=v61[v81[3]];end elseif (v82==105) then v79[v81[3 -1 ]]=v79[v81[6 -3 ]]/v81[1816 -(1293 + 519) ] ;else local v264=0 -0 ;local v265;while true do if (v264==0) then v265=v81[1261 -(233 + 1026) ];v79[v265](v79[v265 + (2 -1) ]);break;end end end elseif ((4120>=133) and (v82<=(210 -100))) then if ((432<=3007) and (v82<=108)) then if ((3080>=1986) and (v82==(461 -354))) then v79[v81[4 -2 ]]=v79[v81[2 + 1 ]] -v79[v81[1 + 3 ]] ;else local v267=0 -(1666 -(636 + 1030)) ;local v268;while true do if ((0==v267) or (408>2721) or (1439>3538)) then v268=v81[1 + 0 + 1 ];v79[v268]=v79[v268](v13(v79,v268 + 1 + 0 ,v74));break;end end end elseif ((v82>(69 + 40)) or (3418<2497) or (419<7)) then local v269=v81[1098 -(709 + 387) ];v79[v269]=v79[v269]();else v79[v81[2]]=v79[v81[1861 -(673 + 1185) ]] -v79[v81[11 -7 ]] ;end elseif (v82<=((351 + 8) -247)) then if (v82==(182 -71)) then local v272=v81[2];local v273,v274=v72(v79[v272](v13(v79,v272 + 1 + 0 ,v81[3 + 0 ])));v74=(v274 + v272) -1 ;local v275=0 -0 ;for v338=v272,v74 do local v339=0 + 0 ;while true do if ((2820==2820) and (v339==0)) then v275=v275 + (1 -0) ;v79[v338]=v273[v275];break;end end end else local v276=v81[2];do return v79[v276](v13(v79,v276 + (1 -0) ,v81[1883 -(446 + 1434) ]));end end elseif (((1735<2169) and (v82==113)) or (4362<=3527)) then local v277=v81[1285 -(309 + 731 + 243) ];local v278=v79[v277];for v340=v277 + (2 -1) ,v81[1850 -(559 + 1288) ] do v7(v278,v79[v340]);end else local v279=1931 -(609 + 90 + 1232) ;local v280;while true do if (((675 -(55 + 166)) -(13 + 441))==v279) then v280=v81[7 -5 ];v79[v280]=v79[v280](v13(v79,v280 + 1 ,v81[3]));break;end end end elseif ((3890>=3262) and (v82<=122)) then if ((2613<=2680) and (v82<=((60 + 248) -190))) then if ((v82<=(577 -(47 + 414))) or (1482>=4288)) then if ((v82==115) or (4356>=4649)) then if ((v79[v81[2]]<v79[v81[4]]) or (2462>4426)) then v73=v73 + 1 + (0 -0) ;else v73=v81[10 -7 ];end else v79[v81[2]][v81[2 + 1 ]]=v79[v81[4]];end elseif ((4774==4774) and (v82>(414 -(36 + 261)))) then v79[v81[1 + 1 ]]=v79[v81[8 -5 ]] + v81[(4 -1) + 1 ] ;else local v284=v81[3 -1 ];do return v13(v79,v284,v74);end end elseif (v82<=(80 + 40)) then if ((566<=960) and (v82>(67 + 52))) then local v285=0 + 0 ;local v286;local v287;local v288;while true do if ((0 + 0)==v285) then v286=v81[2];v287=v79[v286];v285=1 + 0 ;end if (((3904==3904) and (v285==1)) or (2910<=1930)) then v288=v81[436 -(153 + 280) ];for v471=1,v288 do v287[v471]=v79[v286 + v471 ];end break;end end else v79[v81[2]]=v81[8 -(1373 -(34 + 1334)) ]~=(0 + 0) ;v73=v73 + 1 + 0 ;end elseif ((v82==(64 + 57)) or (2860>=3789)) then local v290=v81[2 + 0 ];local v291=v81[4];local v292=v290 + 2 + 0 ;local v293={v79[v290](v79[v290 + 1 ],v79[v292])};for v341=1 + 0 + 0 ,v291 do v79[v292 + v341 ]=v293[v341];end local v294=v293[668 -(89 + 578) ];if (v294 or (1086>4449)) then local v385=0 + 0 ;while true do if (v385==0) then v79[v292]=v294;v73=v81[5 -2 ];break;end end else v73=v73 + 1 ;end else v79[v81[1051 -(572 + 477) ]]=v79[v81[3 + 0 ]] + v79[v81[1 + 3 ]] ;end elseif (v82<=((1359 -(1035 + 248)) + 50)) then if (v82<=(15 + 109)) then if (v82==(209 -(84 + 2))) then local v296=v81[2 -0 ];local v297={v79[v296](v13(v79,v296 + (843 -(497 + 345)) ,v74))};local v298=0 + 0 ;for v344=v296,v81[4] do v298=v298 + 1 ;v79[v344]=v297[v298];end else do return v79[v81[1 + 1 ]]();end end elseif ((v82>(1458 -(605 + 728))) or (19>452)) then local v299=v81[2];v79[v299]=v79[v299](v79[v299 + 1 + 0 ]);else v79[v81[3 -(1 + 0) ]]();end elseif ((4981>546) and (v82<=(6 + (441 -(134 + 185))))) then if ((v82==(469 -342)) or (2366<=8)) then v73=v81[(1136 -(549 + 584)) + 0 ];else v79[v81[5 -3 ]]=v81[3 + 0 ]~=((1174 -(314 + 371)) -(457 + 32)) ;end elseif (v82<=(55 + 74)) then if (v79[v81[2]]<v79[v81[1406 -(832 + 570) ]]) then v73=v81[3 + 0 ];else v73=v73 + 1 + 0 ;end elseif (v82==(460 -330)) then local v387=v81[1 + 1 ];local v388,v389=v72(v79[v387](v79[v387 + ((2736 -1939) -(588 + 208)) ]));v74=(v389 + v387) -(2 -1) ;local v390=1800 -(884 + 916) ;for v435=v387,v74 do v390=v390 + (1 -0) ;v79[v435]=v388[v390];end else local v391=v81[2 + 0 ];v79[v391](v13(v79,v391 + ((1622 -(478 + 490)) -(232 + 421)) ,v81[(1003 + 889) -(1569 + 320) ]));end v73=v73 + 1 + 0 ;end end;end return v29(v28(),{},v17)(...);end return v15("LOL!",v9(),...);
