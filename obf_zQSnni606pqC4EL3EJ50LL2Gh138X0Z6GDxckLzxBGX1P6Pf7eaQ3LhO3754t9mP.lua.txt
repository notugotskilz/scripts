--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then local v86=0;while true do if (v86==0) then v19=v0(v3(v30,1,1));return "";end end else local v87=v2(v0(v30,16));if v19 then local v110=v5(v87,v19);v19=nil;return v110;else return v87;end end end);local function v20(v31,v32,v33) if v33 then local v88=(v31/((5 -3)^(v32-(2 -1))))%((3 -1)^(((v33-(2 -1)) -(v32-1)) + (620 -(555 + 64)))) ;return v88-(v88%(932 -(857 + 74))) ;else local v89=568 -((1244 -(282 + 595)) + 201) ;local v90;while true do if (v89==(927 -((1851 -(1523 + 114)) + 713))) then v90=(2 + 0)^(v32-(1 + 0)) ;return (((v31%(v90 + v90))>=v90) and (1 + 0)) or 0 ;end end end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + (2 -0) );v18=v18 + (1067 -(68 + 997)) ;return (v36 * 256) + v35 ;end local function v23() local v37,v38,v39,v40=v1(v16,v18,v18 + (1273 -(226 + 1044)) );v18=v18 + (17 -(970 -(892 + 65))) ;return (v40 * (16777333 -(32 + 85))) + (v39 * (64226 + 1310)) + (v38 * ((135 -78) + 199)) + v37 ;end local function v24() local v41=0;local v42;local v43;local v44;local v45;local v46;local v47;while true do if (v41==(1 -0)) then v44=1 -0 ;v45=(v20(v43,351 -(87 + 263) ,20) * ((182 -(67 + 113))^(24 + 8))) + v42 ;v41=4 -2 ;end if ((2 + 0)==v41) then v46=v20(v43,83 -(1548 -(998 + 488)) ,(313 + 670) -((2560 -1758) + 65 + 85) );v47=((v20(v43,85 -53 )==(1 -0)) and  -1) or (1 + 0) ;v41=(1769 -769) -(750 + 165 + 82) ;end if (v41==((438 -(145 + 293)) -0)) then v42=v23();v43=v23();v41=1 + 0 ;end if (v41==(3 -0)) then if (v46==(1187 -(1069 + 118))) then if (v45==(0 -0)) then return v47 * 0 ;else v46=1 -0 ;v44=0 + (772 -(201 + 571)) ;end elseif (v46==(3636 -1589)) then return ((v45==(0 + 0)) and (v47 * ((792 -(368 + 423))/(0 -(1138 -(116 + 1022)))))) or (v47 * NaN) ;end return v8(v47,v46-(1041 -(10 + (33 -25))) ) * (v44 + (v45/(((437 -(44 + 386)) -5)^(494 -(416 + 26))))) ;end end end local function v25(v48) local v49;if  not v48 then v48=v23();if (v48==(0 + 0)) then return "";end end v49=v3(v16,v18,(v18 + v48) -(3 -2) );v18=v18 + v48 ;local v50={};for v66=3 -2 , #v49 do v50[v66]=v2(v1(v3(v49,v66,v66)));end return v6(v50);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v51=(function() return function(v91,v92,v93,v94,v95,v96,v97,v98) local v91=(function() return 0 + 0 ;end)();local v92=(function() return;end)();local v94=(function() return;end)();while true do if (v91~=0) then else local v115=(function() return 1637 -(195 + 1442) ;end)();local v116=(function() return;end)();while true do if (v115==(0 -0)) then v116=(function() return 0;end)();while true do if (v116~=1) then else v91=(function() return  #"~";end)();break;end if (v116==(0 + 0)) then v92=(function() return v93();end)();v94=(function() return nil;end)();v116=(function() return 1 -0 ;end)();end end break;end end end if (v91~= #",") then else if (v92== #"|") then v94=(function() return v93()~=(0 + 0) ;end)();elseif (v92==(2 + 0)) then v94=(function() return v95();end)();elseif (v92== #"91(") then v94=(function() return v96();end)();end v97[v98]=(function() return v94;end)();break;end end return v91,v92,v93,v94,v95,v96,v97,v98;end;end)();local v52=(function() return function(v99,v100,v101) local v102=(function() return 0;end)();while true do if (v102==(396 -(115 + 281))) then local v118=(function() return 0 -0 ;end)();while true do if (v118~=0) then else v99[v100-#"!" ]=(function() return v101();end)();return v99,v100,v101;end end end end end;end)();local v53=(function() return {};end)();local v54=(function() return {};end)();local v55=(function() return {};end)();local v56=(function() return {v53,v54,nil,v55};end)();local v57=(function() return v23();end)();local v58=(function() return {};end)();for v68= #"|",v57 do FlatIdent_25011,Type,v21,Cons,v24,v25,v58,v68=(function() return v51(FlatIdent_25011,Type,v21,Cons,v24,v25,v58,v68);end)();end v56[ #"xnx"]=(function() return v21();end)();for v69= #"\\",v23() do local v70=(function() return v21();end)();if (v20(v70, #"!", #",")~=0) then else local v105=(function() return 0;end)();local v106=(function() return;end)();local v107=(function() return;end)();local v108=(function() return;end)();local v109=(function() return;end)();while true do if (v105~=1) then else local v121=(function() return 0;end)();while true do if (v121==(1 + 0)) then v105=(function() return 2;end)();break;end if (v121==0) then v108=(function() return nil;end)();v109=(function() return nil;end)();v121=(function() return 1 + 0 ;end)();end end end if ((0 -0)~=v105) then else local v122=(function() return 0 -0 ;end)();while true do if (v122~=(3 -2)) then else v105=(function() return 868 -(550 + 317) ;end)();break;end if (v122==0) then v106=(function() return 341 -(218 + 123) ;end)();v107=(function() return nil;end)();v122=(function() return 1;end)();end end end if (v105==(2 -0)) then while true do if (v106== #"asd") then if (v20(v108, #"-19", #"asd")~= #".") then else v109[ #".dev"]=(function() return v58[v109[ #".dev"]];end)();end v53[v69]=(function() return v109;end)();break;end if ( #">"~=v106) then else local v125=(function() return 0 -0 ;end)();local v126=(function() return;end)();while true do if (v125~=(0 -0)) then else v126=(function() return 285 -(134 + 151) ;end)();while true do if (v126~=(1666 -(970 + 695))) then else v106=(function() return 2;end)();break;end if ((560 -(306 + 254))~=v126) then else v109=(function() return {v22(),v22(),nil,nil};end)();if (v107==(0 + 0)) then local v132=(function() return 0 -0 ;end)();while true do if (v132==(1990 -(582 + 1408))) then v109[ #"xxx"]=(function() return v22();end)();v109[ #"asd1"]=(function() return v22();end)();break;end end elseif (v107== #"{") then v109[ #"xxx"]=(function() return v23();end)();elseif (v107==(1469 -(899 + 568))) then v109[ #"xnx"]=(function() return v23() -((6 -4)^(19 -3)) ;end)();elseif (v107== #"-19") then local v449=(function() return 0 -0 ;end)();local v450=(function() return;end)();while true do if (v449==0) then v450=(function() return 0 -0 ;end)();while true do if (v450==0) then v109[ #"19("]=(function() return v23() -((1826 -(1195 + 629))^(619 -(268 + 335))) ;end)();v109[ #"0836"]=(function() return v22();end)();break;end end break;end end end v126=(function() return 1 -0 ;end)();end end break;end end end if (v106==(241 -(187 + 54))) then local v127=(function() return 0;end)();local v128=(function() return;end)();while true do if (v127==(572 -(426 + 146))) then v128=(function() return 0 + 0 ;end)();while true do if ((1456 -(282 + 1174))==v128) then v107=(function() return v20(v70,813 -(569 + 242) , #"-19");end)();v108=(function() return v20(v70, #"?id=",786 -(162 + 618) );end)();v128=(function() return 1 + 0 ;end)();end if (v128~=(1 + 0)) then else v106=(function() return  #"\\";end)();break;end end break;end end end if (v106==2) then local v129=(function() return 0 + 0 ;end)();local v130=(function() return;end)();while true do if (v129==(0 -0)) then v130=(function() return 0 -0 ;end)();while true do if (v130==1) then v106=(function() return  #"xxx";end)();break;end if ((0 + 0)~=v130) then else if (v20(v108, #"{", #"]")~= #",") then else v109[1253 -(721 + 530) ]=(function() return v58[v109[1638 -(1373 + 263) ]];end)();end if (v20(v108,1273 -(945 + 326) ,4 -2 )== #">") then v109[ #"nil"]=(function() return v58[v109[ #"19("]];end)();end v130=(function() return 1;end)();end end break;end end end end break;end end end end for v71= #"!",v23() do v54,v71,v28=(function() return v52(v54,v71,v28);end)();end return v56;end local function v29(v60,v61,v62) local v63=v60[1 + 0 ];local v64=v60[702 -(271 + (1129 -700)) ];local v65=v60[3 + 0 ];return function(...) local v72=v63;local v73=v64;local v74=v65;local v75=v27;local v76=1;local v77= -(1501 -(1408 + 92));local v78={};local v79={...};local v80=v12("#",...) -(1087 -(461 + 625)) ;local v81={};local v82={};for v103=1288 -(993 + 295) ,v80 do if ((2258>1241) and (v103>=v74)) then v78[v103-v74 ]=v79[v103 + 1 + 0 ];else v82[v103]=v79[v103 + (1172 -(418 + 753)) ];end end local v83=(v80-v74) + 1 + (0 -0) ;local v84;local v85;while true do local v104=1073 -(1036 + 37) ;while true do if (v104==(1 + 0)) then if (v85<=(20 + 45)) then if ((41<4259) and (v85<=(9 + 23))) then if (v85<=15) then if ((v85<=(536 -(288 + 118 + 123))) or (86>=3626)) then if (v85<=(1772 -(1749 + 20))) then if (v85<=(1 + 0)) then if ((2395==2395) and (v85==(1322 -(1249 + (141 -68))))) then local v136=v84[1 + 1 ];local v137=v84[1149 -(466 + 679) ];local v138=v136 + (4 -2) ;local v139={v82[v136](v82[v136 + (1901 -(106 + 1794)) ],v82[v138])};for v316=1 + (1480 -(641 + 839)) ,v137 do v82[v138 + v316 ]=v139[v316];end local v140=v139[(914 -(910 + 3)) + 0 ];if (v140 or (1930<56)) then v82[v138]=v140;v76=v84[3];else v76=v76 + (2 -1) ;end else v76=v84[7 -4 ];end elseif (v85>2) then local v142=v84[117 -(4 + 110) ];local v143=v82[v142];for v319=v142 + (585 -(57 + 527)) ,v84[1431 -(41 + 1386) ] do v143=v143   .. v82[v319] ;end v82[v84[105 -((43 -26) + 86) ]]=v143;else v62[v84[3 + 0 ]]=v82[v84[(1687 -(1466 + 218)) -1 ]];end elseif (v85<=((7 + 7) -9)) then if ((3333==3333) and (v85==(170 -(122 + 44)))) then local v147=v84[2 -0 ];local v148={v82[v147](v13(v82,v147 + 1 + 0 ,v77))};local v149=0 + 0 ;for v320=v147,v84[7 -3 ] do v149=v149 + 1 ;v82[v320]=v148[v149];end else v82[v84[2]]();end elseif (((3780>2709) and (v85>6)) or (2225==20)) then local v150=v84[67 -(30 + 35) ];do return v13(v82,v150,v77);end else local v151=0;local v152;while true do if (v151==(0 + 0)) then v152=v84[1150 -(556 + 592) ];v82[v152](v13(v82,v152 + (1258 -(1043 + 77 + 137)) ,v77));break;end end end elseif (v85<=(41 -30)) then if (v85<=(1221 -(323 + 889))) then if (v85>(21 -13)) then local v153=0;local v154;while true do if (v153==0) then v154=v84[582 -(361 + 219) ];v82[v154]=v82[v154]();break;end end elseif  not v82[v84[322 -(53 + 267) ]] then v76=v76 + 1 + 0 ;else v76=v84[(1224 -(329 + 479)) -(15 + 398) ];end elseif ((v85>(992 -(18 + 964))) or (872>=3092)) then local v155=v73[v84[11 -8 ]];local v156;local v157={};v156=v10({},{__index=function(v323,v324) local v325=v157[v324];return v325[1][v325[2 + 0 ]];end,__newindex=function(v326,v327,v328) local v329=v157[v327];v329[1 + 0 ][v329[852 -(20 + 830) ]]=v328;end});for v331=1 + 0 ,v84[130 -(116 + 10) ] do local v332=0 + 0 ;local v333;while true do if (v332==(738 -(542 + 196))) then v76=v76 + (1 -0) ;v333=v72[v76];v332=1 + 0 ;end if (v332==1) then if ((4404>=3252) and (v333[3 -2 ]==(12 + 11))) then v157[v331-(1 + 0) ]={v82,v333[7 -4 ]};else v157[v331-(1552 -(1126 + (880 -455))) ]={v61,v333[1124 -(118 + 1003) ]};end v81[ #v81 + (2 -1) ]=v157;break;end end end v82[v84[379 -((881 -(396 + 343)) + 235) ]]=v29(v155,v156,v62);elseif (v82[v84[2]]~=v84[18 -14 ]) then v76=v76 + 1 + 0 ;else v76=v84[980 -(553 + 424) ];end elseif ((1107>796) and ((v85<=(23 -10)) or (237>=2273))) then if (v85>12) then local v159=v84[2];do return v82[v159](v13(v82,v159 + 1 + 0 ,v77));end else for v334=v84[2],v84[3 + 0 ] do v82[v334]=nil;end end elseif ((959==959) and (v85>(1 + 8 + 5))) then v82[v84[2]]=v82[v84[2 + 1 ]]/v84[(1480 -(29 + 1448)) + 1 ] ;elseif (v82[v84[4 -2 ]]==v84[11 -7 ]) then v76=v76 + 1 ;else v76=v84[6 -3 ];end elseif ((v85<=((1396 -(135 + 1254)) + 16)) or (245>=2204)) then if (v85<=(91 -72)) then if ((3162>=2069) and ((v85<=17) or (2040<=703))) then if ((3279<=3967) and (v85==(769 -(239 + 514)))) then v82[v84[1 + 1 ]][v82[v84[1332 -(797 + 532) ]]]=v82[v84[(11 -8) + (4 -3) ]];else v82[v84[1 + 1 ]]=v84[6 -3 ]~=(1202 -(249 + 124 + 829)) ;v76=v76 + (732 -(476 + 255)) ;end elseif ((v85==18) or (1988==877)) then if ((v84[2]==v82[v84[1134 -(369 + (2288 -(389 + 1138))) ]]) or (306>3081)) then v76=v76 + 1 + 0 ;else v76=v84[5 -2 ];end else local v164=0 -0 ;local v165;while true do if (v164==(238 -(64 + 174))) then v165=v84[1 + 1 ];v82[v165](v13(v82,v165 + (1 -0) ,v77));break;end end end elseif (v85<=(357 -(144 + 192))) then if (v85>(236 -(42 + 174))) then v82[v84[2 + 0 ]][v84[3 + 0 ]]=v84[2 + 2 ];else v82[v84[(2080 -(102 + 472)) -(363 + 1141) ]]=v82[v84[1583 -(1183 + 397) ]] * v82[v84[4]] ;end elseif (v85==(66 -44)) then v82[v84[2 + 0 + 0 ]]=v82[v84[2 + 1 + 0 ]][v82[v84[1979 -(1913 + 62) ]]];else v82[v84[2 + 0 ]]=v82[v84[3]];end elseif (v85<=(71 -44)) then if (v85<=(1958 -(565 + 1368))) then if ((v85==((84 + 6) -(1611 -(320 + 1225)))) or (3513<2706)) then local v173=v84[2];local v174=v82[v173];for v336=v173 + (1662 -(1477 + 184)) ,v84[3] do v7(v174,v82[v336]);end else local v175=v84[2 -0 ];local v176,v177=v75(v82[v175](v82[v175 + 1 ]));v77=(v177 + v175) -(1 + 0) ;local v178=856 -(564 + 292) ;for v337=v175,v77 do local v338=0 -0 ;while true do if (v338==(0 -0)) then v178=v178 + 1 ;v82[v337]=v176[v178];break;end end end end elseif (v85==(330 -(244 + 60))) then v82[v84[2]][v84[3 + (0 -0) ]]=v84[480 -(41 + 435) ];else local v181=v84[1003 -(574 + 364 + 63) ];v82[v181]=v82[v181](v13(v82,v181 + 1 + 0 ,v84[1128 -(936 + 189) ]));end elseif ((2978<3639) and (v85<=(10 + 19))) then if (v85==(1641 -(1565 + 48))) then v82[v84[2 + 0 ]]=v61[v84[3]];else local v185=v84[1140 -(782 + 356) ];local v186=v82[v84[270 -(176 + 91) ]];v82[v185 + (2 -1) ]=v186;v82[v185]=v186[v84[5 -(1465 -(157 + 1307)) ]];end elseif (v85<=(1122 -(975 + (1976 -(821 + 1038))))) then local v190=v84[1878 -(157 + 1718) ];local v191=v82[v190];for v339=v190 + 1 + 0 ,v84[14 -10 ] do v191=v191   .. v82[v339] ;end v82[v84[6 -4 ]]=v191;elseif ((4291>1912) and (v85==(1049 -(697 + 321)))) then local v390=0 -0 ;local v391;while true do if ((3682>=2888) and (2003<2339) and (v390==0)) then v391=v84[3 -1 ];v82[v391]=v82[v391]();break;end end else local v392=v84[4 -2 ];do return v82[v392](v13(v82,v392 + 1 ,v77));end end elseif ((149<479) and (432==432) and (v85<=48)) then if ((v85<=(16 + 24)) or (1145>=1253)) then if ((1020>=567) and (v85<=(67 -31))) then if ((3418>2118) and (v85<=(91 -57))) then if ((3066<=3890) and (v85==((3143 -1883) -(322 + 905)))) then local v193=v84[2];local v194={v82[v193](v13(v82,v193 + (1190 -(449 + 740)) ,v77))};local v195=872 -(826 + 46) ;for v340=v193,v84[4] do v195=v195 + (948 -(245 + 702)) ;v82[v340]=v194[v195];end elseif  not v82[v84[(3 + 3) -4 ]] then v76=v76 + 1 ;else v76=v84[1 + 2 ];end elseif (v85==(1933 -(260 + 1638))) then local v196=440 -(382 + 58) ;local v197;local v198;local v199;while true do if (v196==(3 -2)) then v199=v84[3 + 0 ];for v455=1 -0 ,v199 do v198[v455]=v82[v197 + v455 ];end break;end if ((v196==(0 -0)) or (2998>=3281)) then v197=v84[2];v198=v82[v197];v196=1206 -(902 + 303) ;end end else local v200=0 -0 ;local v201;while true do if ((v200==(0 -0)) or (4649<=2632)) then v201=v84[1 + 1 ];v82[v201]=v82[v201](v82[v201 + (1691 -(1121 + 569)) ]);break;end end end elseif (v85<=38) then if ((v85==(251 -(22 + (475 -283)))) or (733>2469)) then if (v82[v84[2]]<v82[v84[1030 -(834 + 192) ]]) then v76=v84[686 -(483 + 200) ];else v76=v76 + (1464 -(1404 + 59)) ;end elseif (v84[5 -(1 + 2) ]<v82[v84[(2 + 2) -(0 + 0) ]]) then v76=v84[3];else v76=v76 + (766 -(468 + 297)) ;end elseif (v85>39) then local v202=v84[(873 -309) -(334 + 228) ];v82[v202](v13(v82,v202 + (3 -2) ,v84[6 -3 ]));else v82[v84[2]]=v82[v84[5 -2 ]] * v82[v84[2 + 2 ]] ;end elseif ((2497==2497) and (v85<=(280 -(141 + 95)))) then if (v85<=(42 + 0)) then if ((3901==3901) and (v85==(105 -64))) then if (v82[v84[4 -2 ]]~=v82[v84[4]]) then v76=v76 + (305 -(300 + 4)) + 0 ;else v76=v84[8 -5 ];end else v82[v84[2 + 0 ]]={};end elseif ((201<415) and (v85==(23 + 20))) then v82[v84[2 -0 ]]=v29(v73[v84[2 + 1 ]],nil,v62);else v82[v84[165 -(92 + 71) ]]={};end elseif ((v85<=(23 + 7 + 16)) or (3860>4872) or (133==1784)) then if ((v85>(75 -30)) or (7>=310)) then v82[v84[767 -(574 + 191) ]]=v82[v84[3 + 0 ]] -v82[v84[9 -5 ]] ;else v61[v84[2 + 1 ]]=v82[v84[851 -(254 + 595) ]];end elseif (v85==(173 -(55 + 71))) then local v210=0 -0 ;local v211;local v212;while true do if ((4992>286) and ((v210==(1791 -(573 + 1217))) or (3998==2298))) then v82[v211 + (2 -1) ]=v212;v82[v211]=v212[v84[1 + 3 ]];break;end if ((v210==(0 -0)) or (8>=2739)) then v211=v84[2];v212=v82[v84[942 -(714 + 225) ]];v210=1;end end else v82[v84[5 -3 ]]=v62[v84[3 -(0 -0) ]];end elseif (((2590==2590) and (v85<=56)) or (2561==3893)) then if (v85<=((368 -(112 + 250)) + 46)) then if (v85<=(72 -22)) then if ((v85==(855 -(48 + 70 + (1723 -1035)))) or (82>=1870)) then local v215=48 -(15 + 10 + 23) ;local v216;while true do if ((2624<4557) and (v215==0)) then v216=v84[1 + 1 + 0 ];do return v13(v82,v216,v77);end break;end end elseif ((4362>=1421) and (v82[v84[1888 -(927 + 959) ]]<v82[v84[13 -9 ]])) then v76=v84[735 -(16 + 716) ];else v76=v76 + 1 ;end elseif (v85==(98 -47)) then local v217=v84[2];v82[v217]=v82[v217](v13(v82,v217 + (98 -(11 + 86)) ,v84[6 -3 ]));else v82[v84[287 -(175 + 83 + 27) ]]= #v82[v84[6 -3 ]];end elseif ((v85<=(266 -212)) or (3131>3542)) then if ((75<=3546) and (v85>(1849 -(503 + 642 + 651)))) then local v220=v84[2];local v221={v82[v220](v13(v82,v220 + 1 ,v84[3 + 0 ]))};local v222=1061 -(602 + 208 + (1665 -(1001 + 413))) ;for v343=v220,v84[3 + 1 ] do v222=v222 + 1 ;v82[v343]=v221[v222];end else v82[v84[2]]=v29(v73[v84[3]],nil,v62);end elseif (v85>(17 + 38)) then if v82[v84[2 + 0 ]] then v76=v76 + (534 -(43 + 490)) ;else v76=v84[736 -((1585 -874) + 22) ];end else v82[v84[7 -5 ]][v82[v84[862 -(240 + 619) ]]]=v82[v84[1 + 3 ]];end elseif (v85<=(95 -(917 -(244 + 638)))) then if (v85<=(4 + 54)) then if (v85==(1801 -(1344 + 400))) then v82[v84[407 -(255 + 150) ]]=v84[3 + 0 ]~=(0 + 0) ;v76=v76 + (4 -3) ;else local v227=0;local v228;local v229;local v230;while true do if (v227==(0 -0)) then v228=v84[(2434 -(627 + 66)) -(404 + 1335) ];v229={v82[v228](v13(v82,v228 + (1 -0) ,v84[2 + 1 ]))};v227=1;end if ((2577>=1578) and (v227==(1 + 0))) then v230=(939 -(512 + 90)) -(10 + 327) ;for v458=v228,v84[3 + 1 ] do v230=v230 + (339 -((2024 -(1665 + 241)) + 220)) ;v82[v458]=v229[v230];end break;end end end elseif ((2680<=3418) and (v85>59)) then if ((4103<=4571) and (v82[v84[1 + 1 ]]~=v84[4])) then v76=v76 + (450 -(108 + 341)) ;else v76=v84[2 + 1 ];end elseif (v84[8 -6 ]<=v82[v84[4]]) then v76=v76 + (1494 -(711 + 782)) ;else v76=v84[5 -(719 -(373 + 344)) ];end elseif ((v85<=((240 + 291) -(270 + 199))) or (4288<2876)) then if ((2462>=1147) and ((v85>(20 + 11 + 30)) or (1495==4787))) then v82[v84[1821 -(580 + 1239) ]]=v82[v84[8 -5 ]] -v82[v84[4 + 0 ]] ;else do return v82[v84[1 + 1 ]]();end end elseif ((v85<=((73 -45) + 35)) or (4914<2480)) then if ((v82[v84[4 -2 ]]==v84[3 + 1 ]) or (1559==1240)) then v76=v76 + 1 ;else v76=v84[3];end elseif (v85==(1231 -(645 + 522))) then local v402=0;local v403;while true do if (v402==(1790 -(1010 + 780))) then v403=v84[2];v82[v403]=v82[v403](v13(v82,v403 + 1 + 0 ,v77));break;end end else v82[v84[2]]=v84[3]~=0 ;end elseif (v85<=((787 -321) -368)) then if (v85<=81) then if (v85<=(213 -140)) then if ((566==566) and (v85<=(1905 -((2144 -(35 + 1064)) + 791)))) then if (v85<=(169 -102)) then if ((v85==66) or (310>4434)) then v76=v84[3];elseif (v82[v84[2 -(0 + 0) ]]<v82[v84[509 -(351 + 154) ]]) then v76=v76 + (1575 -(1281 + 293)) ;else v76=v84[269 -(28 + 238) ];end elseif (v85==68) then if (v82[v84[4 -2 ]]==v82[v84[4]]) then v76=v76 + (1560 -(1381 + 178)) ;else v76=v84[(6 -3) + 0 ];end elseif ((2168<=4360) and (v84[2 + 0 + 0 ]==v82[v84[4]])) then v76=v76 + (1237 -(298 + 938)) + (1259 -(233 + 1026)) ;else v76=v84[10 -7 ];end elseif (v85<=(37 + 34)) then if (v85>70) then v82[v84[472 -(381 + 89) ]]=v84[3 + 0 ]~=(0 + 0) ;else local v234=v84[2 -0 ];v82[v234]=v82[v234](v82[v234 + (1157 -(1074 + 82)) ]);end elseif ((994==994) and (v85>(157 -(1751 -(636 + 1030))))) then local v236=v84[2];v82[v236](v82[v236 + (1785 -(214 + 1570)) ]);else local v237=v84[1457 -(507 + 483 + 465) ];local v238=v82[v237];local v239=v84[3];for v346=1 + 0 + 0 ,v239 do v238[v346]=v82[v237 + v346 ];end end elseif ((3921>=3009) and (v85<=(34 + 43))) then if ((2063>=1648) and (v85<=75)) then if ((1066>=452) and (1655>401) and (v85>(72 + 1 + 1))) then do return v82[v84[7 -5 ]];end elseif ((4974>=2655) and (v82[v84[1728 -(1668 + 58) ]]<=v82[v84[630 -(512 + 114) ]])) then v76=v76 + 1 ;else v76=v84[7 -4 ];end elseif ((3063<=3426) and (v85==(156 -80))) then v82[v84[1 + 1 ]]=v82[v84[10 -7 ]][v84[2 + 2 ]];elseif (v82[v84[1 + 1 ]]~=v82[v84[4 + 0 ]]) then v76=v76 + (3 -(223 -(55 + 166))) ;else v76=v84[1997 -(109 + 1885) ];end elseif (v85<=((300 + 1248) -(1269 + 200))) then if (v85==(149 -71)) then if (v84[817 -(98 + 717) ]<=v82[v84[830 -(802 + 24) ]]) then v76=v76 + (1 -0) ;else v76=v84[3 -0 ];end else local v242=v84[1 + 1 + 0 ];local v243={v82[v242](v82[v242 + 1 + 0 ])};local v244=0 + 0 ;for v349=v242,v84[11 -7 ] do local v350=0 -0 ;while true do if (v350==(0 + 0)) then v244=v244 + 1 + 0 ;v82[v349]=v243[v244];break;end end end end elseif (((1459>764) and (v85>((251 -185) + 14))) or (2721<=907)) then v82[v84[2 + 0 ]]=v82[v84[2 + 1 ]] + v84[1437 -(797 + 636) ] ;else local v246=v84[9 -7 ];v77=(v246 + v83) -(1620 -((1724 -(36 + 261)) + 192)) ;for v351=v246,v77 do local v352=0;local v353;while true do if ((4437>=3031) and (v352==(0 + 0))) then v353=v78[v351-v246 ];v82[v351]=v353;break;end end end end elseif (v85<=(206 -117)) then if ((v85<=85) or (4470<2949)) then if (v85<=83) then if (v85==82) then local v247=v84[2 + 0 ];local v248={v82[v247](v82[v247 + (327 -(192 + 134)) ])};local v249=1276 -(316 + 960) ;for v354=v247,v84[4] do v249=v249 + 1 + 0 ;v82[v354]=v248[v249];end else do return;end end elseif (v85==(25 + 40 + 19)) then if (v82[v84[2 + 0 + 0 ]]<v82[v84[4]]) then v76=v76 + ((1286 -(1035 + 248)) -2) ;else v76=v84[3];end elseif (v82[v84[553 -(83 + 468) ]]<=v82[v84[1810 -(1202 + 604) ]]) then v76=v76 + (4 -(24 -(20 + 1))) ;else v76=v84[3];end elseif (v85<=(144 -57)) then if ((v85==(238 -152)) or (1580==2426)) then v82[v84[327 -(24 + 21 + 280) ]]=v82[v84[3 + 0 ]] * v84[4] ;else v62[v84[3]]=v82[v84[2]];end elseif (v85==(77 + 11)) then v82[v84[2]]= #v82[v84[2 + 1 ]];else local v254=v84[321 -(134 + 185) ];local v255=v84[3 + 1 ];local v256=v254 + (1134 -(549 + 584)) + 1 ;local v257={v82[v254](v82[v254 + (1 -0) ],v82[v256])};for v357=1912 -(340 + 1571) ,v255 do v82[v256 + v357 ]=v257[v357];end local v258=v257[1 + 0 ];if (v258 or (3711==503)) then v82[v256]=v258;v76=v84[1775 -((2418 -(314 + 371)) + 39) ];else v76=v76 + (2 -1) ;end end elseif (v85<=((3868 -2741) -(125 + 909))) then if ((v85<=91) or (641>4334)) then if (v85==90) then v82[v84[1950 -((2064 -(478 + 490)) + 452 + 400) ]]=v82[v84[3]][v84[4]];else local v261=v84[1 + 1 ];local v262={};for v360=1 -0 , #v81 do local v361=0 + 0 ;local v362;while true do if (v361==(512 -(409 + 103))) then v362=v81[v360];for v481=236 -(46 + 190) , #v362 do local v482=95 -(51 + 44) ;local v483;local v484;local v485;while true do if ((3399>=2260) and ((1 + 0)==v482)) then v485=v483[1319 -(1114 + 203) ];if ((v484==v82) and (v485>=v261)) then v262[v485]=v484[v485];v483[727 -((1400 -(786 + 386)) + 498) ]=v262;end break;end if ((v482==(0 + 0)) or (393>=4242)) then v483=v362[v481];v484=v483[1 + 0 ];v482=664 -(174 + 489) ;end end end break;end end end end elseif ((v85==(239 -147)) or (420==4318)) then local v263=v84[1907 -(830 + (3481 -2406)) ];do return v82[v263](v13(v82,v263 + ((1904 -(1055 + 324)) -(303 + 221)) ,v84[3]));end else v82[v84[1271 -((1571 -(1093 + 247)) + 1038) ]]=v82[v84[3 + 0 + 0 ]] + v82[v84[4]] ;end elseif (v85<=(1257 -(171 + 991))) then if ((v85>(387 -293)) or (4158<=33)) then local v265=0;local v266;while true do if (((0 -0)==v265) or (99>4744)) then v266=v84[4 -2 ];v82[v266](v13(v82,v266 + 1 + 0 ,v84[10 -7 ]));break;end end elseif ((4341==4341) and (989<4859) and v82[v84[5 -3 ]]) then v76=v76 + (1 -0) ;else v76=v84[9 -6 ];end elseif (v85<=(1344 -(111 + 1137))) then v82[v84[2]]=v84[3];elseif (v85>(255 -(91 + 67))) then v82[v84[1 + 1 ]]=v82[v84[8 -5 ]] + v84[4] ;else v82[v84[1 + 1 ]]=v62[v84[526 -(423 + 100) ]];end elseif ((v85<=114) or (4795<949)) then if ((255<=1596) and (v85<=(1 + 105))) then if ((v85<=((1119 -837) -180)) or (4433<1635)) then if (v85<=(53 + 47)) then if (((3842==3842) and (v85>99)) or (4300<3244)) then if ((v84[773 -(326 + 445) ]<v82[v84[17 -13 ]]) or (3534>4677)) then v76=v76 + (3 -2) ;else v76=v84[6 -3 ];end else v82[v84[4 -2 ]]=v84[8 -5 ]^v82[v84[715 -(530 + 181) ]] ;end elseif ((v85==(982 -(614 + 267))) or (4859<2999)) then v82[v84[34 -(19 + 13) ]]=v82[v84[4 -1 ]] * v84[9 -5 ] ;else v82[v84[5 -3 ]]=v82[v84[3]] + v82[v84[2 + 2 ]] ;end elseif ((1747<=3601) and (v85<=(182 -78))) then if (v85>((535 -322) -110)) then local v272=0;local v273;local v274;local v275;local v276;while true do if ((4726>2407) and (v272==1)) then v77=(v275 + v273) -(1813 -(460 + 833 + 519)) ;v276=0 -0 ;v272=4 -(7 -5) ;end if ((v272==(0 -(0 -0))) or (1284>3669)) then v273=v84[8 -(5 + 1) ];v274,v275=v75(v82[v273](v82[v273 + (2 -1) ]));v272=1 + 0 ;end if (v272==(1 + 1)) then for v466=v273,v77 do local v467=0 -0 ;while true do if ((v467==(0 + 0)) or (804>4359)) then v276=v276 + (2 -1) + 0 ;v82[v466]=v274[v276];break;end end end break;end end else v82[v84[2 + 0 ]]=v61[v84[1099 -(709 + 387) ]];end elseif (v85==(1963 -(673 + 1185))) then do return v82[v84[5 -3 ]]();end else local v279=v84[2];v82[v279](v82[v279 + 1 ]);end elseif ((1117<2549) and (v85<=((1041 -(364 + 324)) -243))) then if (v85<=(177 -69)) then if (v85==107) then local v280=v84[2 + 0 ];do return v82[v280](v13(v82,v280 + (2 -1) + 0 ,v84[3 -0 ]));end else v82[v84[1 + 1 ]][v84[3]]=v82[v84[4]];end elseif ((v85==(216 -107)) or (2851>4774)) then do return;end else v82[v84[(6 -3) -1 ]]();end elseif ((4670>=3623) and (v85<=(1992 -(446 + 1434)))) then if ((2065<2544) and (v85==(1394 -(1040 + 243)))) then v61[v84[8 -5 ]]=v82[v84[1849 -(559 + 1288) ]];else local v285=1931 -(202 + 407 + 1322) ;local v286;local v287;while true do if (v285==(455 -(13 + 441))) then for v468=(12 -9) -2 , #v81 do local v469=v81[v468];for v486=0 -(0 -0) , #v469 do local v487=v469[v486];local v488=v487[1];local v489=v487[9 -7 ];if ((1031<3848) and (v488==v82) and (v489>=v286)) then local v498=0 + 0 ;while true do if ((1854>903) and (v498==((0 -0) -0))) then v287[v489]=v488[v489];v487[(1269 -(1249 + 19)) + 0 ]=v287;break;end end end end end break;end if ((4663>1860) and (v285==(0 + 0 + 0))) then v286=v84[2];v287={};v285=2 -1 ;end end end elseif (v85>(62 + 51)) then for v363=v84[3 -1 ],v84[2 + 1 ] do v82[v363]=nil;end else v82[v84[2 + 0 ]][v84[3 + 0 ]]=v82[v84[4 + 0 ]];end elseif (((1311<=3359) and (v85<=((467 -347) + (1088 -(686 + 400))))) or (3053<=469)) then if (((2717<=3156) and (v85<=(551 -(153 + 280)))) or (540>=1869)) then if ((1081<4524) and (v85<=(334 -218))) then if (v85==(104 + 9 + 2)) then local v290=0 + 0 ;local v291;while true do if ((440>=71) and (v290==0)) then v291=v84[2 + 0 ];v82[v291]=v82[v291](v13(v82,v291 + 1 ,v77));break;end end else local v292=v84[2 + 0 ];do return v13(v82,v292,v292 + v84[3 + 0 ] );end end elseif ((3292==3292) and (4934>2607) and (v85>(177 -60))) then local v293=v84[2 + 0 ];v77=(v293 + v83) -1 ;for v365=v293,v77 do local v366=667 -(89 + (807 -(73 + 156))) ;local v367;while true do if (v366==(0 + 0)) then v367=v78[v365-v293 ];v82[v365]=v367;break;end end end elseif ((v84[3 -1 ]<v82[v84[4]]) or (1400>3116)) then v76=v84[3];else v76=v76 + ((5 + 1045) -(572 + 477)) ;end elseif ((525<1662) and (v85<=(17 + 103))) then if (v85>((883 -(721 + 90)) + 47)) then local v294=v84[1 + 1 ];local v295,v296=v75(v82[v294](v13(v82,v294 + (87 -(84 + 2)) ,v84[3])));v77=(v296 + v294) -((1 + 0) -0) ;local v297=0 + 0 ;for v368=v294,v77 do local v369=0;while true do if ((v369==0) or (876>2550)) then v297=v297 + (843 -(497 + (1120 -775))) ;v82[v368]=v295[v297];break;end end end else v82[v84[2]]=v82[v84[1 + (472 -(224 + 246)) ]]/v84[1 + 3 ] ;end elseif ((1038<=2645) and (v85>(1454 -((980 -375) + 728)))) then v82[v84[2 + 0 ]]=v84[6 -(5 -2) ]^v82[v84[1 + 3 ]] ;else local v300=v82[v84[14 -10 ]];if ((219<=2456) and  not v300) then v76=v76 + 1 + 0 + 0 ;else local v421=0 -0 ;while true do if (v421==(0 + 0 + 0)) then v82[v84[491 -(336 + 121 + (63 -31)) ]]=v300;v76=v84[2 + 1 ];break;end end end end elseif (v85<=126) then if ((v85<=(1526 -(832 + 570))) or (3230<2525)) then if (v85>(116 + 7)) then do return v82[v84[1 + (3 -2) ]];end else v82[v84[6 -4 ]]=v84[2 + 1 ];end elseif ((v85==(921 -(588 + 208))) or (2400>4083)) then local v303=v82[v84[4]];if  not v303 then v76=v76 + (2 -1) ;else local v422=1800 -(884 + 916) ;while true do if ((v422==0) or (4219==1150)) then v82[v84[2]]=v303;v76=v84[6 -3 ];break;end end end elseif (v84[2 + 0 ]<v82[v84[657 -((745 -(203 + 310)) + 421) ]]) then v76=v76 + ((3883 -(1238 + 755)) -(1569 + 320)) ;else v76=v84[1 + 2 ];end elseif (v85<=(25 + 103)) then if ((v85>(427 -300)) or (2989<=222)) then local v304=v84[607 -(316 + 289) ];local v305,v306=v75(v82[v304](v13(v82,v304 + (2 -1) ,v84[1 + 2 ])));v77=(v306 + v304) -(1454 -(666 + 787)) ;local v307=425 -(360 + 65) ;for v370=v304,v77 do local v371=0 + 0 ;while true do if (v371==(254 -(79 + 175))) then v307=v307 + (1 -0) ;v82[v370]=v305[v307];break;end end end else local v308=v73[v84[3 + 0 ]];local v309;local v310={};v309=v10({},{__index=function(v372,v373) local v374=v310[v373];return v374[2 -1 ][v374[3 -1 ]];end,__newindex=function(v375,v376,v377) local v378=v310[v376];v378[1][v378[901 -(503 + 396) ]]=v377;end});for v380=182 -((169 -77) + 89) ,v84[7 -3 ] do v76=v76 + 1 ;local v381=v72[v76];if (v381[1 + (0 -0) ]==(14 + 9)) then v310[v380-(3 -2) ]={v82,v381[3 + 0 ]};else v310[v380-(1 + 0) ]={v61,v381[1 + 2 ]};end v81[ #v81 + (1 -0) ]=v310;end v82[v84[1246 -(485 + 759) ]]=v29(v308,v309,v62);end elseif (v85<=(298 -169)) then v82[v84[1191 -((1745 -1303) + 747) ]]=v82[v84[1138 -(832 + (627 -324)) ]];elseif (v85>(1076 -(88 + 858))) then v82[v84[1 + 1 ]]=v82[v84[3 + 0 ]][v82[v84[1 + 3 ]]];elseif (v82[v84[2]]==v82[v84[793 -((1599 -(171 + 662)) + (116 -(4 + 89))) ]]) then v76=v76 + 1 ;else v76=v84[3];end v76=v76 + (4 -3) ;break;end if ((0 -0)==v104) then v84=v72[v76];v85=v84[1];v104=1;end end end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
