--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then local v86=0;while true do if (v86==0) then v19=v0(v3(v30,1,1));return "";end end else local v87=v2(v0(v30,16));if v19 then local v111=0;local v112;while true do if (v111==0) then v112=v5(v87,v19);v19=nil;v111=1;end if (v111==1) then return v112;end end else return v87;end end end);local function v20(v31,v32,v33) if v33 then local v88=0 -0 ;local v89;while true do if (v88==(0 -0)) then v89=(v31/((3 -1)^(v32-(878 -(282 + 595)))))%(2^(((v33-(2 -(1 + 0))) -(v32-(620 -(555 + 64)))) + ((958 -(892 + 65)) -0))) ;return v89-(v89%(932 -(857 + 74))) ;end end else local v90=(1272 -(226 + 1044))^(v32-(4 -(7 -4))) ;return (((v31%(v90 + v90))>=v90) and (569 -(367 + 201))) or ((1712 -785) -(214 + 713)) ;end end local function v21() local v34=(0 -0) -0 ;local v35;while true do if (v34==((259 + 92) -(87 + (1045 -782)))) then return v35;end if (v34==(180 -(67 + 113))) then v35=v1(v16,v18,v18);v18=v18 + 1 + 0 ;v34=1;end end end local function v22() local v36,v37=v1(v16,v18,v18 + 2 );v18=v18 + (954 -(802 + 150)) ;return (v37 * (689 -433)) + v36 ;end local function v23() local v38=0 -0 ;local v39;local v40;local v41;local v42;while true do if (v38==(0 + 0)) then v39,v40,v41,v42=v1(v16,v18,v18 + (1000 -(915 + 82)) );v18=v18 + 4 ;v38=2 -1 ;end if (v38==(1 + 0)) then return (v42 * (22064430 -5287214)) + (v41 * 65536) + (v40 * ((3273 -1830) -(1069 + 118))) + v39 ;end end end local function v24() local v43=v23();local v44=v23();local v45=1 -0 ;local v46=(v20(v44,1 + 0 ,20) * ((774 -(201 + 571))^(1170 -((549 -433) + 1022)))) + v43 ;local v47=v20(v44,4 + 17 ,54 -23 );local v48=((v20(v44,8 + 11 + 13 )==(1 + 0)) and  -(3 -(6 -4))) or ((2539 -(760 + 987)) -(368 + 423)) ;if (v47==((1913 -(1789 + 124)) -0)) then if (v46==(0 -0)) then return v48 * (18 -((776 -(745 + 21)) + 8)) ;else local v113=0 -(0 + 0) ;while true do if ((442 -(416 + 26))==v113) then v47=3 -2 ;v45=0 + 0 ;break;end end end elseif (v47==(3621 -(4330 -2756))) then return ((v46==0) and (v48 * (((1721 -1282) -(145 + 293))/(430 -(44 + 386))))) or (v48 * NaN) ;end return v8(v48,v47-(3466 -2443) ) * (v45 + (v46/((1488 -(998 + 488))^52))) ;end local function v25(v49) local v50=0;local v51;local v52;while true do if ((1 + 1)==v50) then v52={};for v114=1 + 0 , #v51 do v52[v114]=v2(v1(v3(v51,v114,v114)));end v50=1058 -(87 + 968) ;end if (v50==3) then return v6(v52);end if (v50==((0 -0) -0)) then v51=nil;if  not v49 then v49=v23();if (v49==((1817 -(1703 + 114)) + (701 -(376 + 325)))) then return "";end end v50=1;end if (v50==(2 -1)) then v51=v3(v16,v18,(v18 + v49) -1 );v18=v18 + v49 ;v50=1415 -(447 + 966) ;end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v53=(function() return function(v91,v92,v93,v94,v95,v96,v97,v98) local v91=(function() return 0;end)();local v92=(function() return;end)();local v94=(function() return;end)();while true do if (v91==0) then local v120=(function() return 0;end)();local v121=(function() return;end)();while true do if (v120==(0 -0)) then v121=(function() return 0;end)();while true do if (v121==0) then v92=(function() return v93();end)();v94=(function() return nil;end)();v121=(function() return 242 -(187 + 54) ;end)();end if (v121==(781 -(162 + 618))) then v91=(function() return  #"[";end)();break;end end break;end end end if (v91== #"[") then if (v92== #"{") then v94=(function() return v93()~=(0 + 0) ;end)();elseif (v92==(2 + 0)) then v94=(function() return v95();end)();elseif (v92== #"nil") then v94=(function() return v96();end)();end v97[v98]=(function() return v94;end)();break;end end return v91,v92,v93,v94,v95,v96,v97,v98;end;end)();local v54=(function() return function(v99,v100,v101) local v102=(function() return 0 -0 ;end)();while true do if (v102==(0 -0)) then local v123=(function() return 0;end)();local v124=(function() return;end)();while true do if (v123==(0 + 0)) then v124=(function() return 0;end)();while true do if (v124==(1636 -(1373 + 263))) then v99[v100-#"}" ]=(function() return v101();end)();return v99,v100,v101;end end break;end end end end end;end)();local v55=(function() return {};end)();local v56=(function() return {};end)();local v57=(function() return {};end)();local v58=(function() return {v55,v56,nil,v57};end)();local v59=(function() return v23();end)();local v60=(function() return {};end)();for v68= #" ",v59 do FlatIdent_9147D,Type,v21,Cons,v24,v25,v60,v68=(function() return v53(FlatIdent_9147D,Type,v21,Cons,v24,v25,v60,v68);end)();end v58[ #"91("]=(function() return v21();end)();for v69= #"}",v23() do local v70=(function() return v21();end)();if (v20(v70, #".", #",")==0) then local v106=(function() return 0;end)();local v107=(function() return;end)();local v108=(function() return;end)();local v109=(function() return;end)();local v110=(function() return;end)();while true do if (v106~=(1002 -(451 + 549))) then else while true do if (v107~=0) then else local v126=(function() return 0;end)();local v127=(function() return;end)();while true do if (v126~=0) then else v127=(function() return 0;end)();while true do if (0==v127) then v108=(function() return v20(v70,2, #"xnx");end)();v109=(function() return v20(v70, #".com",2 + 4 );end)();v127=(function() return 1 -0 ;end)();end if (v127~=(1 -0)) then else v107=(function() return  #"/";end)();break;end end break;end end end if (v107~=(1386 -(746 + 638))) then else local v128=(function() return 0;end)();local v129=(function() return;end)();while true do if (v128==0) then v129=(function() return 0 + 0 ;end)();while true do if (v129~=0) then else if (v20(v109, #">", #":")== #".") then v110[2 -0 ]=(function() return v60[v110[2]];end)();end if (v20(v109,2,2)== #"!") then v110[ #"nil"]=(function() return v60[v110[ #"91("]];end)();end v129=(function() return 342 -(218 + 123) ;end)();end if (v129~=(1582 -(1535 + 46))) then else v107=(function() return  #"gha";end)();break;end end break;end end end if (v107== #"]") then local v130=(function() return 0 + 0 ;end)();local v131=(function() return;end)();while true do if (v130~=(0 + 0)) then else v131=(function() return 0;end)();while true do if (v131~=0) then else v110=(function() return {v22(),v22(),nil,nil};end)();if (v108==(560 -(306 + 254))) then local v323=(function() return 0;end)();local v324=(function() return;end)();while true do if (v323==(0 + 0)) then v324=(function() return 0 -0 ;end)();while true do if (v324==0) then v110[ #"xnx"]=(function() return v22();end)();v110[ #".com"]=(function() return v22();end)();break;end end break;end end elseif (v108== #".") then v110[ #"xnx"]=(function() return v23();end)();elseif (v108==(1469 -(899 + 568))) then v110[ #"-19"]=(function() return v23() -((2 + 0)^(38 -22)) ;end)();elseif (v108== #"xxx") then local v481=(function() return 0;end)();local v482=(function() return;end)();while true do if (v481==0) then v482=(function() return 603 -(268 + 335) ;end)();while true do if (v482==(290 -(60 + 230))) then v110[ #"gha"]=(function() return v23() -((574 -(426 + 146))^(2 + 14)) ;end)();v110[ #".com"]=(function() return v22();end)();break;end end break;end end end v131=(function() return 1;end)();end if (v131==(1457 -(282 + 1174))) then v107=(function() return 813 -(569 + 242) ;end)();break;end end break;end end end if (v107== #"nil") then if (v20(v109, #"91(", #"nil")== #"|") then v110[ #"0313"]=(function() return v60[v110[ #"asd1"]];end)();end v55[v69]=(function() return v110;end)();break;end end break;end if (v106~=(2 -1)) then else v109=(function() return nil;end)();v110=(function() return nil;end)();v106=(function() return 2;end)();end if (v106~=0) then else local v125=(function() return 0;end)();while true do if (v125==0) then v107=(function() return 0;end)();v108=(function() return nil;end)();v125=(function() return 1 + 0 ;end)();end if (1==v125) then v106=(function() return 1;end)();break;end end end end end end for v71= #"[",v23() do v56,v71,v28=(function() return v54(v56,v71,v28);end)();end return v58;end local function v29(v62,v63,v64) local v65=v62[1025 -(706 + (500 -182)) ];local v66=v62[(978 + 275) -(721 + 530) ];local v67=v62[1274 -(945 + 326) ];return function(...) local v72=v65;local v73=v66;local v74=v67;local v75=v27;local v76=1;local v77= -(2 -1);local v78={};local v79={...};local v80=v12("#",...) -(701 -(271 + 429)) ;local v81={};local v82={};for v103=0 + 0 ,v80 do if ((2570>2409) and (v103>=v74)) then v78[v103-v74 ]=v79[v103 + (1501 -(1408 + 92)) ];else v82[v103]=v79[v103 + (1087 -(461 + 625)) ];end end local v83=(v80-v74) + (1289 -(993 + 295)) ;local v84;local v85;while true do v84=v72[v76];v85=v84[1 + 0 ];if (v85<=(1235 -((1281 -863) + 753))) then if (v85<=(12 + 19)) then if (v85<=(2 + 13)) then if (v85<=(3 + 4)) then if (v85<=(1 + 2)) then if ((v85<=(530 -((781 -375) + 123))) or (2609>=3234)) then if (v85==0) then local v135=v84[1771 -(1749 + 20) ];local v136=v84[4];local v137=v135 + 1 + 1 ;local v138={v82[v135](v82[v135 + 1 + 0 ],v82[v137])};for v325=1146 -(466 + 679) ,v136 do v82[v137 + v325 ]=v138[v325];end local v139=v138[2 -1 ];if v139 then v82[v137]=v139;v76=v84[8 -(904 -(503 + 396)) ];else v76=v76 + (1901 -((287 -(92 + 89)) + 1794)) ;end else local v140=0 + 0 ;local v141;while true do if (v140==(0 + 0)) then v141=v84[2];do return v13(v82,v141,v141 + v84[3] );end break;end end end elseif ((v85>(5 -3)) or (3033>=4031)) then if (v84[2]==v82[v84[4]]) then v76=v76 + ((3 -1) -1) ;else v76=v84[117 -(4 + 110) ];end else local v142=v84[2];local v143={v82[v142](v82[v142 + (585 -(57 + 527)) ])};local v144=1427 -(41 + 1386) ;for v328=v142,v84[4] do v144=v144 + ((15 + 89) -(17 + 86)) ;v82[v328]=v143[v144];end end elseif (v85<=(4 + (2 -1))) then if (v85==(8 -4)) then local v145=v84[2];v77=(v145 + v83) -(2 -1) ;for v331=v145,v77 do local v332=0;local v333;while true do if (v332==(166 -(122 + 44))) then v333=v78[v331-v145 ];v82[v331]=v333;break;end end end else local v146=v82[v84[6 -(2 + 0) ]];if ( not v146 or (1401==4668)) then v76=v76 + ((2 + 1) -2) ;else local v382=0 + 0 ;while true do if ((2776>=1321) and (v382==(0 + 0))) then v82[v84[3 -(2 -1) ]]=v146;v76=v84[68 -(30 + 5 + 30) ];break;end end end end elseif (v85>6) then if ((v84[2 + 0 ]<v82[v84[1261 -(1043 + 214) ]]) or (487>2303)) then v76=v76 + 1 ;else v76=v84[4 -1 ];end elseif (v82[v84[(1251 -(485 + 759)) -5 ]]<v82[v84[1216 -((747 -424) + 889) ]]) then v76=v84[7 -4 ];else v76=v76 + (1190 -(442 + 747)) ;end elseif (v85<=(591 -((1496 -(832 + 303)) + 219))) then if (v85<=(329 -(53 + 267))) then if ((v85>8) or (4503==3462)) then local v147=v84[1 + 1 ];v82[v147]=v82[v147]();else local v149=413 -(15 + 398) ;local v150;while true do if (v149==(982 -(18 + 964))) then v150=v82[v84[14 -10 ]];if  not v150 then v76=v76 + 1 + 0 ;else local v473=0 + 0 ;while true do if ((553<=1543) and (v473==(850 -(20 + (1776 -(88 + 858)))))) then v82[v84[2 + 0 ]]=v150;v76=v84[129 -(116 + 10) ];break;end end end break;end end end elseif (v85>(1 + 9)) then local v151=v84[740 -(166 + 376 + 196) ];local v152={};for v334=1 -0 , #v81 do local v335=v81[v334];for v385=0 + 0 , #v335 do local v386=0 + 0 ;local v387;local v388;local v389;while true do if ((2015==2015) and (v386==(1 + 0))) then v389=v387[4 -2 ];if ((v388==v82) and (v389>=v151)) then local v483=0 -0 ;while true do if (v483==(1551 -(1126 + 425))) then v152[v389]=v388[v389];v387[406 -(118 + 287) ]=v152;break;end end end break;end if (v386==(0 -0)) then v387=v335[v385];v388=v387[1 + 0 ];v386=1122 -(118 + 1003) ;end end end end else local v153=v84[5 -(1 + 2) ];v82[v153](v13(v82,v153 + 1 ,v84[3]));end elseif ((v85<=13) or (4241<=2332)) then if (v85==(389 -(142 + 235))) then local v154=v84[(802 -(766 + 23)) -10 ];local v155=v82[v154];for v336=v154 + 1 + 0 ,v84[4] do v155=v155   .. v82[v336] ;end v82[v84[979 -(553 + (2093 -1669)) ]]=v155;else v82[v84[3 -1 ]]=v82[v84[3 + 0 ]] + v82[v84[4 + 0 ]] ;end elseif ((v85>14) or (2364<1157)) then v82[v84[2 + 0 ]]=v82[v84[2 + 1 ]] + v84[3 + 1 ] ;else v82[v84[4 -2 ]]=v82[v84[7 -4 ]][v82[v84[8 -4 ]]];end elseif (v85<=(7 + 16)) then if (v85<=(91 -72)) then if (v85<=(770 -(239 + (702 -188)))) then if (v85>(6 + 10)) then if ((v84[1331 -(797 + 532) ]<=v82[v84[4]]) or (1167>1278)) then v76=v76 + 1 ;else v76=v84[3 + 0 ];end else local v161=v84[2 + 1 ];local v162=v82[v161];for v337=v161 + (2 -1) ,v84[9 -5 ] do v162=v162   .. v82[v337] ;end v82[v84[(4086 -2882) -(373 + (1902 -(1036 + 37))) ]]=v162;end elseif (v85>(749 -(338 + 138 + 255))) then if v82[v84[1132 -(369 + 761) ]] then v76=v76 + 1 ;else v76=v84[2 + (1 -0) ];end else local v164=v84[2];v82[v164](v13(v82,v164 + ((1 + 0) -0) ,v77));end elseif ((v85<=(39 -18)) or (1145<=1082)) then if ((v85==20) or (3105==4881)) then local v165=238 -(64 + (1654 -(641 + 839))) ;local v166;local v167;local v168;while true do if ((v165==((914 -(910 + 3)) + (0 -0))) or (1887>4878)) then v168=v84[3 -0 ];for v440=1685 -(1466 + 218) ,v168 do v167[v440]=v82[v166 + v440 ];end break;end if ((v165==(336 -(144 + 192))) or (4087>4116)) then v166=v84[218 -(42 + 174) ];v167=v82[v166];v165=1 + 0 ;end end else v82[v84[2 + 0 ]]={};end elseif (v85>(10 + 12)) then local v170=1504 -(363 + 1141) ;local v171;while true do if (v170==(1580 -(1183 + 183 + 214))) then v171=v84[5 -3 ];do return v82[v171](v13(v82,v171 + 1 + 0 ,v84[3]));end break;end end else local v172=0 + 0 ;local v173;local v174;local v175;local v176;while true do if (v172==(1975 -(1913 + 62))) then v173=v84[(1150 -(556 + 592)) + 0 ];v174,v175=v75(v82[v173](v13(v82,v173 + (2 -1) ,v84[1936 -(565 + 1368) ])));v172=3 -2 ;end if ((1106<=1266) and (v172==(1663 -(1477 + 184)))) then for v443=v173,v77 do local v444=(0 + 0) -0 ;while true do if (v444==0) then v176=v176 + 1 + 0 ;v82[v443]=v174[v176];break;end end end break;end if ((3155<4650) and ((857 -(564 + 292))==v172)) then v77=(v175 + v173) -(1 -0) ;v176=0 -0 ;v172=2;end end end elseif (v85<=(331 -((1052 -(329 + 479)) + 60))) then if (v85<=25) then if ((3774>=1839) and (v85>24)) then v63[v84[3 + 0 ]]=v82[v84[478 -(41 + 435) ]];else local v179=v84[1003 -(938 + 63) ];v82[v179](v13(v82,v179 + 1 + 0 ,v84[3]));end elseif (v85==(1151 -(936 + 189))) then v82[v84[1 + 1 ]]=v64[v84[1616 -(1565 + (902 -(174 + 680))) ]];else v82[v84[2 + 0 ]]=v82[v84[1141 -(782 + 356) ]] * v82[v84[271 -(176 + 91) ]] ;end elseif (v85<=((257 -182) -46)) then if ((2811==2811) and (v85==(41 -13))) then local v183=v84[1094 -(975 + 117) ];do return v13(v82,v183,v77);end else local v184=1875 -(157 + (3560 -1842)) ;local v185;while true do if ((2146>1122) and (v184==0)) then v185=v84[2 + 0 + 0 ];v82[v185]=v82[v185](v13(v82,v185 + (3 -2) ,v84[10 -7 ]));break;end end end elseif (v85==(1048 -(697 + 321))) then v82[v84[5 -3 ]]=v84[5 -2 ];else local v188=v84[4 -(741 -(396 + 343)) ];local v189=v82[v188];for v338=v188 + 1 ,v84[2 + 1 ] do v7(v189,v82[v338]);end end elseif (v85<=(87 -40)) then if ((v85<=(104 -65)) or (56==3616)) then if (v85<=(1262 -(322 + 905))) then if (v85<=((57 + 587) -(602 + 9))) then if ((v85==(1221 -(449 + 740))) or (2421<622)) then v82[v84[2]]=v82[v84[875 -(826 + 46) ]] + v82[v84[4]] ;elseif  not v82[v84[949 -(245 + (2179 -(29 + 1448))) ]] then v76=v76 + 1 ;else v76=v84[9 -6 ];end elseif ((1009<=1130) and (v85>(11 + 23))) then v82[v84[1900 -((1649 -(135 + 1254)) + 1638) ]]=v84[443 -(382 + 58) ]~=(0 -0) ;elseif ((2758<2980) and (v82[v84[2]]~=v82[v84[4]])) then v76=v76 + 1 ;else v76=v84[3];end elseif (v85<=(118 -81)) then if ((v85==36) or (86>=3626)) then if ((2395==2395) and (v82[v84[2 + 0 ]]==v84[8 -4 ])) then v76=v76 + (2 -1) ;else v76=v84[3];end elseif (v82[v84[2]]~=v84[4]) then v76=v76 + (1206 -(902 + 303)) ;else v76=v84[5 -2 ];end elseif (v85>38) then for v339=v84[2],v84[3] do v82[v339]=nil;end else v76=v84[6 -3 ];end elseif (v85<=(4 + 39)) then if (v85<=(1731 -(1121 + 569))) then if ((3780>2709) and (v85==40)) then v82[v84[2]]=v82[v84[3]][v84[4]];else v82[v84[2]]=v84[217 -(22 + 192) ]~=(683 -(483 + 200)) ;end elseif (v85>(1505 -(1404 + 59))) then v82[v84[5 -3 ]][v84[3 -0 ]]=v84[769 -((2185 -1717) + 297) ];else v82[v84[564 -(334 + 228) ]]();end elseif (v85<=45) then if ((v85>44) or (237>=2273)) then v82[v84[2]]=v29(v73[v84[3]],nil,v64);else v82[v84[6 -4 ]]=v84[6 -3 ]~=(0 -0) ;v76=v76 + 1 + 0 ;end elseif (v85==46) then v82[v84[238 -(141 + 95) ]]=v82[v84[3 + 0 ]][v82[v84[9 -5 ]]];else local v202=v73[v84[6 -3 ]];local v203;local v204={};v203=v10({},{__index=function(v341,v342) local v343=0 + 0 ;local v344;while true do if (v343==0) then v344=v204[v342];return v344[1][v344[5 -3 ]];end end end,__newindex=function(v345,v346,v347) local v348=v204[v346];v348[1 + 0 ][v348[2 + 0 ]]=v347;end});for v350=1,v84[5 -(575 -(102 + 472)) ] do v76=v76 + 1 + 0 ;local v351=v72[v76];if (v351[1 + 0 ]==(270 -(92 + 40 + 31))) then v204[v350-1 ]={v82,v351[3]};else v204[v350-(1 -0) ]={v63,v351[7 -4 ]};end v81[ #v81 + 1 + 0 ]=v204;end v82[v84[851 -(254 + 595) ]]=v29(v202,v203,v64);end elseif ((v85<=(181 -(55 + 71))) or (2040<=703)) then if (v85<=((41 + 25) -15)) then if (v85<=49) then if (v85==48) then local v206=v84[2];v77=(v206 + v83) -(1791 -(573 + 1217)) ;for v353=v206,v77 do local v354=v78[v353-v206 ];v82[v353]=v354;end else local v207=0 -0 ;local v208;local v209;local v210;while true do if ((3279<=3967) and (v207==(0 + 0))) then v208=v73[v84[3]];v209=nil;v207=1 -0 ;end if ((v207==(941 -(714 + 225))) or (1988==877)) then for v446=2 -1 ,v84[5 -1 ] do local v447=0 + 0 ;local v448;while true do if (v447==(1 -0)) then if ((4291>1912) and (v448[807 -(118 + 688) ]==(155 -((1489 -(157 + 1307)) + 23)))) then v210[v446-(1 + 0) ]={v82,v448[735 -(16 + 716) ]};else v210[v446-(1 -0) ]={v63,v448[6 -3 ]};end v81[ #v81 + (286 -(175 + 110)) ]=v210;break;end if ((2003<2339) and (v447==(0 -0))) then v76=v76 + ((1 + 3) -3) ;v448=v72[v76];v447=1;end end end v82[v84[1798 -((892 -389) + 1293) ]]=v29(v208,v209,v64);break;end if (v207==(2 -1)) then v210={};v209=v10({},{__index=function(v449,v450) local v451=v210[v450];return v451[1 + 0 ][v451[1063 -(810 + 251) ]];end,__newindex=function(v452,v453,v454) local v455=v210[v453];v455[1 + 0 ][v455[1 + 1 ]]=v454;end});v207=2 + 0 ;end end end elseif (v85>(583 -(43 + 490))) then v82[v84[735 -(711 + 22) ]]=v82[v84[11 -8 ]] * v84[863 -(240 + 619) ] ;else v82[v84[1 + 1 ]][v82[v84[3]]]=v82[v84[1 + 3 ]];end elseif (v85<=(84 -31)) then if ((432==432) and (v85>(4 + 48))) then if ((v82[v84[1746 -(1344 + 400) ]]<v82[v84[409 -(255 + 150) ]]) or (1145>=1253)) then v76=v76 + 1 + 0 + 0 ;else v76=v84[2 + 1 ];end else v82[v84[2]]={};end elseif (v85==(230 -(4 + 172))) then v82[v84[6 -4 ]]=v82[v84[1742 -(404 + 1335) ]] + v84[4] ;else v82[v84[408 -(183 + 223) ]]=v63[v84[3]];end elseif (v85<=((108 -38) -11)) then if (v85<=(38 + 19)) then if (v85==(21 + 35)) then v82[v84[2]][v84[340 -((314 -(300 + 4)) + 327) ]]=v82[v84[3 + 1 ]];else local v220=0;local v221;while true do if ((3418>2118) and (v220==(338 -(118 + 59 + 161)))) then v221=v84[1 + 1 ];do return v82[v221](v13(v82,v221 + (450 -(108 + 341)) ,v77));end break;end end end elseif (v85==(27 + (81 -50))) then do return v82[v84[2]]();end else local v222=0 -0 ;local v223;local v224;local v225;while true do if (v222==(1494 -(711 + 782))) then v225=0;for v457=v223,v84[7 -3 ] do v225=v225 + (470 -(270 + 199)) ;v82[v457]=v224[v225];end break;end if (v222==(0 + 0)) then v223=v84[1821 -(580 + 1239) ];v224={v82[v223](v13(v82,v223 + 1 + 0 ,v77))};v222=1;end end end elseif (v85<=61) then if (v85==60) then v82[v84[(363 -(112 + 250)) + 1 ]]=v82[v84[2 + 1 ]][v84[9 -5 ]];else local v228=v84[2 + 0 ];v82[v228]=v82[v228](v13(v82,v228 + 1 ,v77));end elseif (v85<=(1229 -(645 + 209 + 313))) then if (v82[v84[1792 -(1010 + 780) ]]<v82[v84[4]]) then v76=v76 + 1 + 0 ;else v76=v84[14 -11 ];end elseif ((3066<=3890) and (v85==(184 -121))) then v82[v84[1838 -(1045 + 791) ]]=v84[3];elseif (v82[v84[4 -2 ]]~=v82[v84[4]]) then v76=v76 + (1 -0) ;else v76=v84[508 -(351 + 154) ];end elseif ((v85<=(1671 -(1281 + 293))) or (2998>=3281)) then if (v85<=(346 -(28 + 238))) then if (v85<=(160 -88)) then if ((v85<=(1627 -(1381 + 178))) or (4649<=2632)) then if (v85<=(62 + (9 -5))) then if (v85>65) then for v356=v84[2 + 0 ],v84[2 + 1 ] do v82[v356]=nil;end else local v230=v84[6 -4 ];local v231,v232=v75(v82[v230](v13(v82,v230 + 1 ,v84[2 + 1 ])));v77=(v232 + v230) -(471 -(219 + 162 + 89)) ;local v233=0 + 0 + 0 ;for v358=v230,v77 do v233=v233 + 1 + 0 ;v82[v358]=v231[v233];end end elseif (v85>(114 -47)) then local v234=v84[1158 -(1074 + 82) ];local v235=v84[(6 + 2) -4 ];local v236=v234 + 1 + 1 ;local v237={v82[v234](v82[v234 + (1456 -(990 + 465)) ],v82[v236])};for v361=1 + 0 ,v235 do v82[v236 + v361 ]=v237[v361];end local v238=v237[1];if (v238 or (3860>4872)) then local v400=0 + 0 ;while true do if (((0 + 0)==v400) or (3998==2298)) then v82[v236]=v238;v76=v84[3];break;end end else v76=v76 + (3 -2) ;end elseif (v82[v84[1728 -(1668 + 58) ]]~=v84[630 -(512 + 114) ]) then v76=v76 + 1 ;else v76=v84[7 -4 ];end elseif (v85<=70) then if (v85>69) then local v239=v84[3 -(1415 -(1001 + 413)) ];v82[v239]=v82[v239](v82[v239 + (3 -2) ]);else local v241=0 + 0 ;local v242;local v243;local v244;while true do if (v241==1) then v244=0 + 0 ;for v461=v242,v84[4 + 0 ] do v244=v244 + (3 -2) ;v82[v461]=v243[v244];end break;end if (v241==((4446 -2452) -(109 + 1885))) then v242=v84[1471 -(1269 + 200) ];v243={v82[v242](v13(v82,v242 + 1 ,v77))};v241=816 -(98 + 717) ;end end end elseif (v85==71) then local v245=v84[828 -(802 + 24) ];v82[v245]=v82[v245](v82[v245 + (1 -0) ]);else v82[v84[2 -0 ]][v84[1 + 2 ]]=v84[4];end elseif (v85<=(59 + 17)) then if (v85<=74) then if ((v85==(12 + 61)) or (8>=2739)) then v82[v84[2]][v82[v84[3]]]=v82[v84[1 + 3 ]];else local v251=0 -0 ;local v252;local v253;while true do if (v251==(3 -2)) then for v464=1 + 0 , #v81 do local v465=0;local v466;while true do if (v465==(0 + 0)) then v466=v81[v464];for v493=882 -(244 + 638) , #v466 do local v494=v466[v493];local v495=v494[1 + 0 ];local v496=v494[2 + 0 ];if ((v495==v82) and (v496>=v252)) then v253[v496]=v495[v496];v494[1 + 0 ]=v253;end end break;end end end break;end if (v251==(1433 -(797 + 636))) then v252=v84[(702 -(627 + 66)) -7 ];v253={};v251=1620 -(1427 + 192) ;end end end elseif (v85==((77 -51) + 49)) then local v254=v84[4 -2 ];do return v82[v254](v13(v82,v254 + 1 + 0 ,v84[2 + 1 ]));end elseif v82[v84[328 -(192 + 134) ]] then v76=v76 + (1277 -(316 + 960)) ;else v76=v84[2 + 1 ];end elseif ((2590==2590) and (v85<=(61 + (619 -(512 + 90))))) then if ((v85>(72 + (1911 -(1665 + 241)))) or (82>=1870)) then if (v84[7 -5 ]<v82[v84[555 -(83 + 468) ]]) then v76=v84[1809 -((1919 -(373 + 344)) + 604) ];else v76=v76 + (4 -3) ;end else v82[v84[2 -0 ]]=v82[v84[8 -(3 + 2) ]];end elseif (v85>79) then local v257=v84[2];v82[v257]=v82[v257](v13(v82,v257 + (326 -(45 + 280)) ,v77));else v82[v84[1 + 1 + 0 ]]=v29(v73[v84[3 + 0 ]],nil,v64);end elseif (v85<=88) then if (v85<=(31 + 53)) then if (v85<=(46 + 36)) then if ((2624<4557) and (v85>((39 -24) + 66))) then do return v82[v84[3 -1 ]];end else local v260=v84[1913 -(340 + 1571) ];local v261=v82[v260];local v262=v84[2 + 1 ];for v364=1773 -(1733 + 39) ,v262 do v261[v364]=v82[v260 + v364 ];end end elseif (v85==(227 -144)) then if (v82[v84[1036 -(125 + 909) ]]==v82[v84[1952 -(1096 + 852) ]]) then v76=v76 + 1 + 0 ;else v76=v84[3 -0 ];end else local v263=v84[2 + 0 ];do return v82[v263](v13(v82,v263 + 1 ,v77));end end elseif ((v85<=(598 -(409 + 103))) or (3131>3542)) then if ((2577>=1578) and (v85>(143 -58))) then v82[v84[2]]=v82[v84[239 -(46 + (1289 -(35 + 1064))) ]] * v82[v84[99 -(51 + 44) ]] ;else v82[v84[1 + 0 + 1 ]]=v82[v84[1320 -(1114 + 203) ]] -v82[v84[730 -(228 + 498) ]] ;end elseif ((4103<=4571) and (v85==87)) then local v266=v84[1 + 1 ];v82[v266](v13(v82,v266 + 1 + 0 ,v77));else local v267=v84[665 -(174 + (1045 -556)) ];v82[v267](v82[v267 + 1 ]);end elseif (v85<=92) then if ((v85<=(234 -144)) or (1495==4787)) then if ((v85==((8 + 1986) -(830 + 1075))) or (310>4434)) then do return;end else v82[v84[1238 -(298 + 938) ]]=v82[v84[3]] * v84[528 -(303 + 221) ] ;end elseif (v85==(1360 -(231 + (2297 -(233 + 1026))))) then if ((2168<=4360) and (v84[2 + 0 ]<v82[v84[1166 -(171 + 991) ]])) then v76=v84[3];else v76=v76 + (4 -3) ;end else do return;end end elseif (v85<=94) then if (v85==93) then v76=v84[3];else v63[v84[3]]=v82[v84[5 -3 ]];end elseif (v85<=(237 -142)) then local v272=v84[2 + 0 ];v82[v272](v82[v272 + (3 -2) ]);elseif (v85>96) then if (v82[v84[2]]==v84[11 -7 ]) then v76=v76 + (1 -0) ;else v76=v84[9 -6 ];end else v82[v84[(2916 -(636 + 1030)) -(111 + 1137) ]]();end elseif (v85<=(271 -(91 + 67))) then if (v85<=(312 -207)) then if ((994==994) and (v85<=(26 + 75))) then if (v85<=(622 -(423 + 100))) then if ((1655>401) and (v85>(1 + 97))) then local v273=0;local v274;while true do if (v273==(0 -0)) then v274=v84[2 + 0 ];v82[v274]=v82[v274](v13(v82,v274 + 1 ,v84[774 -(326 + 445) ]));break;end end else v82[v84[8 -(4 + 2) ]]=v82[v84[6 -3 ]] -v82[v84[9 -5 ]] ;end elseif (v85>(811 -(530 + 181))) then local v276=v84[883 -(614 + 267) ];local v277,v278=v75(v82[v276](v82[v276 + 1 ]));v77=(v278 + v276) -(33 -(19 + 13)) ;local v279=0;for v367=v276,v77 do v279=v279 + (1 -0) ;v82[v367]=v277[v279];end else do return v82[v84[4 -(2 + 0) ]]();end end elseif ((3063<=3426) and (v85<=(294 -191))) then if (v85==(27 + 75)) then if  not v82[v84[3 -(1 + 0) ]] then v76=v76 + (1 -0) ;else v76=v84[1815 -(1293 + 519) ];end else local v280=v84[3 -1 ];local v281,v282=v75(v82[v280](v82[v280 + (2 -1) ]));v77=(v282 + v280) -(1 -0) ;local v283=0 -0 ;for v370=v280,v77 do v283=v283 + (2 -1) ;v82[v370]=v281[v283];end end elseif (v85==(4 + 52 + (269 -(55 + 166)))) then local v284=v84[1 + 1 ];local v285=v82[v84[3]];v82[v284 + 1 + 0 ]=v285;v82[v284]=v285[v84[4]];elseif (v82[v84[2]]<v82[v84[9 -5 ]]) then v76=v84[3];else v76=v76 + 1 + 0 ;end elseif ((1459>764) and (v85<=(11 + 98))) then if (v85<=(408 -301)) then if (v85>(36 + 70)) then v82[v84[2 + 0 ]]=v82[v84[3]];else local v291=v84[2];v82[v291]=v82[v291]();end elseif ((v85>(1204 -(709 + 387))) or (641>4334)) then if (v84[2]<v82[v84[1862 -(673 + 1185) ]]) then v76=v76 + ((299 -(36 + 261)) -(1 -0)) ;else v76=v84[9 -6 ];end elseif (v82[v84[2 -0 ]]==v82[v84[(1371 -(34 + 1334)) + 1 ]]) then v76=v76 + 1 + 0 ;else v76=v84[3 -0 ];end elseif (v85<=(28 + 83)) then if ((3399>=2260) and (v85==110)) then v82[v84[3 -(1 + 0) ]]=v82[v84[5 -2 ]]/v84[1884 -(446 + 1434) ] ;elseif (v82[v84[2 + 0 ]]<=v82[v84[(2570 -(1035 + 248)) -(1040 + 243) ]]) then v76=v76 + (2 -1) ;else v76=v84[1850 -(559 + 1288) ];end elseif (v85==(2043 -((630 -(20 + 1)) + 1322))) then local v294=v84[456 -(13 + 441) ];do return v13(v82,v294,v77);end else v82[v84[7 -5 ]]=v84[7 -4 ]^v82[v84[4]] ;end elseif (v85<=(602 -481)) then if (v85<=(5 + 112)) then if ((v85<=(417 -(158 + 144))) or (393>=4242)) then if ((989<4859) and (v85==(41 + 73))) then v82[v84[321 -(134 + 185) ]]= #v82[v84[2 + 1 ]];else local v297=v84[5 -3 ];local v298={v82[v297](v13(v82,v297 + 1 + 0 ,v84[1136 -(549 + 584) ]))};local v299=0 -0 ;for v373=v297,v84[3 + 1 ] do v299=v299 + 1 + 0 ;v82[v373]=v298[v299];end end elseif (v85>(84 + 32)) then local v300=v84[2 + 0 ];local v301={v82[v300](v82[v300 + (434 -(153 + 280)) ])};local v302=0 -0 ;for v376=v300,v84[(689 -(314 + 371)) + 0 ] do v302=v302 + 1 ;v82[v376]=v301[v302];end else v64[v84[2 + 1 ]]=v82[v84[2]];end elseif (v85<=119) then if ((v85>(62 + 56)) or (4795<949)) then do return v82[v84[2]];end else v82[v84[2]]=v82[v84[3 + 0 ]]/v84[3 + 1 ] ;end elseif (v85==120) then if ((3842==3842) and (v84[2 -(0 -0) ]<=v82[v84[3 + 1 ]])) then v76=v76 + (668 -(89 + 578)) ;else v76=v84[3 + 0 ];end else v64[v84[5 -2 ]]=v82[v84[1051 -(572 + 477) ]];end elseif ((1747<=3601) and (v85<=(17 + 108))) then if (v85<=((1042 -(478 + 490)) + 26 + 23)) then if (v85==((1187 -(786 + 386)) + 107)) then v82[v84[88 -(84 + 2) ]]= #v82[v84[4 -1 ]];elseif (v82[v84[2]]<=v82[v84[4]]) then v76=v76 + (3 -2) + 0 ;else v76=v84[845 -(497 + 345) ];end elseif (v85==(4 + 120)) then if (v84[(1380 -(1055 + 324)) + 1 ]==v82[v84[1337 -(605 + 728) ]]) then v76=v76 + 1 + 0 ;else v76=v84[(1346 -(1093 + 247)) -3 ];end else local v309=0 + 0 + 0 ;local v310;local v311;local v312;while true do if (v309==((1 + 2) -2)) then v312=0 + 0 ;for v468=v310,v84[10 -6 ] do local v469=0 + (0 -0) ;while true do if (v469==(489 -(457 + 32))) then v312=v312 + 1 + 0 ;v82[v468]=v311[v312];break;end end end break;end if (v309==(1402 -(832 + 570))) then v310=v84[2 + 0 ];v311={v82[v310](v13(v82,v310 + 1 ,v84[10 -7 ]))};v309=1;end end end elseif (v85<=(62 + 65)) then if (v85>((3128 -2206) -(588 + 208))) then v82[v84[5 -3 ]]=v84[1803 -(884 + (2606 -1690)) ]~=0 ;v76=v76 + ((2 -1) -0) ;else v82[v84[2 + 0 ]]=v64[v84[656 -(232 + 150 + 271) ]];end elseif (v85<=(2017 -((6044 -4475) + 320))) then local v316=v84[1 + 1 ];local v317=v82[v84[3]];v82[v316 + 1 + 0 ]=v317;v82[v316]=v317[v84[13 -9 ]];elseif (v85==(734 -(316 + 289))) then v82[v84[(17 -12) -3 ]][v84[1 + 0 + 2 ]]=v82[v84[1457 -(666 + 787) ]];else v82[v84[427 -(360 + (166 -101)) ]]=v84[3 + 0 ]^v82[v84[4]] ;end v76=v76 + (255 -(79 + 175)) ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
