--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then local v81=0;while true do if (v81==0) then v19=v0(v3(v30,1,1));return "";end end else local v82=0;local v83;while true do if (v82==0) then v83=v2(v0(v30,16));if v19 then local v103=v5(v83,v19);v19=nil;return v103;else return v83;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v84=(v31/((929 -(214 + 713))^(v32-(2 -1))))%((1 + 1)^(((v33-1) -(v32-(2 -1))) + (1 -0))) ;return v84-(v84%(2 -1)) ;else local v85=(2 + 0)^(v32-((737 -(32 + 85)) -(555 + 64))) ;return (((v31%(v85 + v85))>=v85) and (932 -(857 + 74))) or ((2473 -1905) -(367 + 197 + 4)) ;end end local function v21() local v34=(0 -0) + 0 ;local v35;while true do if (v34==1) then return v35;end if (v34==(957 -(892 + 65))) then v35=v1(v16,v18,v18);v18=v18 + (2 -1) ;v34=1 -(350 -(87 + 263)) ;end end end local function v22() local v36,v37=v1(v16,v18,v18 + (182 -(67 + 113)) );v18=v18 + 2 + 0 ;return (v37 * (628 -372)) + v36 ;end local function v23() local v38=0 + (0 -0) ;local v39;local v40;local v41;local v42;while true do if (v38==(3 -2)) then return (v42 * ((16779355 -(1069 + 118)) -(802 + 150))) + (v41 * (176444 -(64610 + 46298))) + (v40 * 256) + v39 ;end if (v38==(0 -0)) then v39,v40,v41,v42=v1(v16,v18,v18 + 3 + 0 );v18=v18 + (1001 -(915 + 82)) ;v38=2 -1 ;end end end local function v24() local v43=v23();local v44=v23();local v45=2 -(4 -3) ;local v46=(v20(v44,1487 -(394 + 604 + 488) ,20) * ((3 -1)^(27 + 5))) + v43 ;local v47=v20(v44,4 + 17 ,54 -23 );local v48=((v20(v44,32 + 0 )==(4 -3)) and  -((3 -2) + 0)) or (792 -(368 + 423)) ;if (v47==(0 -0)) then if (v46==(859 -(814 + 45))) then return v48 * (0 -0) ;else v47=19 -(10 + (1755 -(760 + 987))) ;v45=0 -0 ;end elseif (v47==((4402 -(1789 + 124)) -(416 + 26))) then return ((v46==(0 -0)) and (v48 * ((1 + 0)/(0 -0)))) or (v48 * NaN) ;end return v8(v48,v47-(1461 -(145 + 293)) ) * (v45 + (v46/((6 -4)^(482 -((810 -(745 + 21)) + 386))))) ;end local function v25(v49) local v50;if  not v49 then v49=v23();if (v49==(0 -0)) then return "";end end v50=v3(v16,v18,(v18 + v49) -(3 -2) );v18=v18 + v49 ;local v51={};for v65=1 + 0 , #v50 do v51[v65]=v2(v1(v3(v50,v65,v65)));end return v6(v51);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v52=(function() return 0 + 0 ;end)();local v53=(function() return;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();local v58=(function() return;end)();while true do if (2==v52) then for v93= #" ",v23() do local v94=(function() return 0;end)();local v95=(function() return;end)();local v96=(function() return;end)();while true do if (v94==(0 + 0)) then local v104=(function() return 0;end)();while true do if (v104==(121 -(17 + 104))) then v95=(function() return 0 -0 ;end)();v96=(function() return nil;end)();v104=(function() return 1 + 0 ;end)();end if (v104~=(1 + 0)) then else v94=(function() return 1 -0 ;end)();break;end end end if (v94==(1 -0)) then while true do if (v95==0) then v96=(function() return v21();end)();if (v20(v96, #"!", #":")==0) then local v111=(function() return 0;end)();local v112=(function() return;end)();local v113=(function() return;end)();local v114=(function() return;end)();while true do if (v111==(0 + 0)) then local v116=(function() return 1636 -(1373 + 263) ;end)();local v117=(function() return;end)();while true do if (v116~=0) then else v117=(function() return 1000 -(451 + 549) ;end)();while true do if (v117~=0) then else v112=(function() return v20(v96,1 + 1 , #"xnx");end)();v113=(function() return v20(v96, #"http",9 -3 );end)();v117=(function() return 1;end)();end if (v117==(1 -0)) then v111=(function() return 1385 -(746 + 638) ;end)();break;end end break;end end end if (v111~=(1 + 1)) then else if (v20(v113, #"[", #"~")~= #"]") then else v114[2 -0 ]=(function() return v58[v114[343 -(218 + 123) ]];end)();end if (v20(v113,1583 -(1535 + 46) ,2)== #"~") then v114[ #"asd"]=(function() return v58[v114[ #"19("]];end)();end v111=(function() return 3;end)();end if (v111==1) then v114=(function() return {v22(),v22(),nil,nil};end)();if (v112==0) then local v310=(function() return 0;end)();while true do if (v310~=(0 + 0)) then else v114[ #"19("]=(function() return v22();end)();v114[ #"?id="]=(function() return v22();end)();break;end end elseif (v112== #":") then v114[ #"-19"]=(function() return v23();end)();elseif (v112==2) then v114[ #"xnx"]=(function() return v23() -((1 + 1)^16) ;end)();elseif (v112== #"asd") then local v492=(function() return 0;end)();while true do if (0~=v492) then else v114[ #"xxx"]=(function() return v23() -((562 -(306 + 254))^16) ;end)();v114[ #"http"]=(function() return v22();end)();break;end end end v111=(function() return 1 + 1 ;end)();end if (v111~=(5 -2)) then else if (v20(v113, #"nil", #"-19")== #"|") then v114[ #".com"]=(function() return v58[v114[ #".dev"]];end)();end v53[v93]=(function() return v114;end)();break;end end end break;end end break;end end end for v97= #">",v23() do v54[v97-#"[" ]=(function() return v28();end)();end return v56;end if (v52==0) then local v89=(function() return 1467 -(899 + 568) ;end)();local v90=(function() return;end)();while true do if (v89==(0 + 0)) then v90=(function() return 0;end)();while true do if (2~=v90) then else v52=(function() return  #"}";end)();break;end if ((2 -1)==v90) then v55=(function() return {};end)();v56=(function() return {v53,v54,nil,v55};end)();v90=(function() return 605 -(268 + 335) ;end)();end if (v90==(290 -(60 + 230))) then v53=(function() return {};end)();v54=(function() return {};end)();v90=(function() return 573 -(426 + 146) ;end)();end end break;end end end if (v52== #">") then local v91=(function() return 0;end)();local v92=(function() return;end)();while true do if (v91~=0) then else v92=(function() return 0 + 0 ;end)();while true do if (v92==(1458 -(282 + 1174))) then v52=(function() return 813 -(569 + 242) ;end)();break;end if (v92==(0 -0)) then v57=(function() return v23();end)();v58=(function() return {};end)();v92=(function() return 1 + 0 ;end)();end if (v92~=1) then else for v106= #"\\",v57 do local v107=(function() return 0;end)();local v108=(function() return;end)();local v109=(function() return;end)();local v110=(function() return;end)();while true do if (v107~=(1025 -(706 + 318))) then else v110=(function() return nil;end)();while true do if (v108==(1251 -(721 + 530))) then local v119=(function() return 0;end)();while true do if ((1272 -(945 + 326))==v119) then v108=(function() return 1;end)();break;end if (v119==0) then local v387=(function() return 0 -0 ;end)();while true do if (0~=v387) then else v109=(function() return v21();end)();v110=(function() return nil;end)();v387=(function() return 1 + 0 ;end)();end if (v387==(701 -(271 + 429))) then v119=(function() return 1;end)();break;end end end end end if (v108==1) then if (v109== #"\\") then v110=(function() return v21()~=0 ;end)();elseif (v109==2) then v110=(function() return v24();end)();elseif (v109~= #"asd") then else v110=(function() return v25();end)();end v58[v106]=(function() return v110;end)();break;end end break;end if (v107==0) then local v115=(function() return 0;end)();while true do if (v115~=(1 + 0)) then else v107=(function() return 1;end)();break;end if (v115~=(1500 -(1408 + 92))) then else v108=(function() return 1086 -(461 + 625) ;end)();v109=(function() return nil;end)();v115=(function() return 1289 -(993 + 295) ;end)();end end end end end v56[ #"91("]=(function() return v21();end)();v92=(function() return 2;end)();end end break;end end end end end local function v29(v59,v60,v61) local v62=v59[1 + 0 ];local v63=v59[1173 -(418 + 753) ];local v64=v59[2 + 1 ];return function(...) local v67=v62;local v68=v63;local v69=v64;local v70=v27;local v71=1 + (1148 -(556 + 592)) ;local v72= -1;local v73={};local v74={...};local v75=v12("#",...) -1 ;local v76={};local v77={};for v86=0 + 0 ,v75 do if (v86>=v69) then v73[v86-v69 ]=v74[v86 + 1 + 0 ];else v77[v86]=v74[v86 + (530 -(406 + 123)) ];end end local v78=(v75-v69) + (1770 -(1749 + 20)) ;local v79;local v80;while true do v79=v67[v71];v80=v79[1 + 0 ];if ((1806>1687) and (v80<=((494 + 893) -(1249 + 73)))) then if (v80<=(12 + 20)) then if (v80<=(1160 -(466 + 679))) then if (v80<=(16 -(817 -(329 + 479)))) then if (v80<=(857 -(174 + 680))) then if (v80<=(2 -1)) then if (v80>0) then if ((408<=4328) and v77[v79[1902 -(106 + 1794) ]]) then v71=v71 + 1 + 0 ;else v71=v79[1 + 2 ];end else local v121=v79[5 -3 ];local v122={};for v312=1, #v76 do local v313=v76[v312];for v346=0 -0 , #v313 do local v347=114 -(4 + (377 -267)) ;local v348;local v349;local v350;while true do if ((856<=2021) and (v347==0)) then v348=v313[v346];v349=v348[585 -((118 -61) + 527) ];v347=1;end if (v347==(1428 -(41 + 1386))) then v350=v348[105 -(17 + 86) ];if ((2169>1403) and (v349==v77) and (v350>=v121)) then v122[v350]=v349[v350];v348[1 + 0 + 0 ]=v122;end break;end end end end end elseif (v80==(3 -1)) then local v123=v79[5 -3 ];do return v77[v123](v13(v77,v123 + (167 -(122 + 44)) ,v79[(744 -(396 + 343)) -2 ]));end elseif (v79[6 -4 ]==v77[v79[4 + 0 ]]) then v71=v71 + 1 + 0 ;else v71=v79[5 -2 ];end elseif (v80<=5) then if (v80>(69 -(30 + 35))) then local v124=v79[2];v77[v124](v13(v77,v124 + 1 + 0 ,v72));else v77[v79[1259 -(1043 + 214) ]]=v77[v79[(1 + 10) -8 ]] + v79[4] ;end elseif (v80==(1218 -(323 + 889))) then v77[v79[2]]=v77[v79[7 -4 ]] * v77[v79[584 -(361 + (1696 -(29 + 1448))) ]] ;else local v127=v77[v79[324 -((1442 -(135 + 1254)) + (1005 -738)) ]];if  not v127 then v71=v71 + 1 + 0 ;else v77[v79[415 -((70 -55) + 398) ]]=v127;v71=v79[985 -(18 + 964) ];end end elseif (v80<=11) then if (v80<=9) then if ((v80==8) or (2998>=3281)) then local v128=v79[7 -5 ];v77[v128](v13(v77,v128 + 1 ,v72));else v77[v79[2 + 0 ]][v79[2 + 0 + 1 ]]=v79[854 -(20 + 830) ];end elseif (v80>(8 + 2)) then v77[v79[128 -(116 + 10) ]]=v77[v79[1 + 2 ]][v77[v79[742 -(542 + 196) ]]];else v77[v79[2]]=v77[v79[6 -3 ]] * v77[v79[2 + 2 ]] ;end elseif (v80<=13) then if (v80==((1534 -(389 + 1138)) + 5)) then v77[v79[1 + 1 ]]=v61[v79[7 -4 ]];else v77[v79[4 -2 ]]=v79[3];end elseif (v80==(1565 -(1126 + 425))) then if ((v77[v79[407 -(118 + 287) ]]==v77[v79[15 -11 ]]) or (4649<=2632)) then v71=v71 + 1 ;else v71=v79[3];end else for v314=v79[1123 -(118 + 1003) ],v79[(582 -(102 + 472)) -5 ] do v77[v314]=nil;end end elseif (v80<=(400 -(142 + 235))) then if (v80<=(86 -67)) then if (v80<=(4 + 13)) then if (v80==(993 -(553 + 424))) then do return v77[v79[3 -1 ]]();end else local v138=v79[2 + 0 + 0 ];local v139=v79[3 + 1 + 0 ];local v140=v138 + 2 + 0 + 0 ;local v141={v77[v138](v77[v138 + 1 + 0 ],v77[v140])};for v316=1,v139 do v77[v140 + v316 ]=v141[v316];end local v142=v141[(1547 -(320 + 1225)) -1 ];if (v142 or (3860>4872)) then local v355=0 -0 ;while true do if (v355==(0 -0)) then v77[v140]=v142;v71=v79[(1 -0) + 2 ];break;end end else v71=v71 + (4 -3) ;end end elseif ((v80==18) or (3998==2298)) then local v143=v79[755 -(239 + 514) ];v77[v143](v13(v77,v143 + 1 ,v79[3]));elseif v77[v79[1 + 1 ]] then v71=v71 + ((814 + 516) -(797 + 532)) ;else v71=v79[(1467 -(157 + 1307)) + 0 ];end elseif ((v80<=21) or (8>=2739)) then if ((2590==2590) and (v80>(7 + (1872 -(821 + 1038))))) then v77[v79[4 -2 ]]=v77[v79[(3006 -1801) -(373 + 829) ]][v79[735 -(476 + 255) ]];else v71=v79[1133 -(41 + 328 + 761) ];end elseif (v80>(13 + 9)) then v77[v79[2 -0 ]]= #v77[v79[3]];else local v148=v79[3 -(1 -0) ];v77[v148](v13(v77,v148 + (239 -(64 + 65 + 109)) ,v79[1 + 2 ]));end elseif ((v80<=(39 -12)) or (82>=1870)) then if (v80<=(361 -(144 + (475 -283)))) then if ((2624<4557) and (v80==(240 -(42 + 174)))) then local v149=1026 -(834 + 192) ;local v150;local v151;local v152;while true do if (v149==(1 + 0)) then v152=v79[3];for v423=1 + 0 ,v152 do v151[v423]=v77[v150 + v423 ];end break;end if (v149==0) then v150=v79[1 + 0 + 1 ];v151=v77[v150];v149=1505 -(363 + 293 + 848) ;end end else local v153=v79[2];local v154={v77[v153](v77[v153 + (2 -1) ])};local v155=0 + 0 + 0 ;for v319=v153,v79[3 + 1 ] do v155=v155 + (1976 -(1913 + 62)) ;v77[v319]=v154[v155];end end elseif (v80>(17 + 9)) then v77[v79[2]]={};else for v322=v79[2],v79[7 -(5 -1) ] do v77[v322]=nil;end end elseif (v80<=(1962 -(565 + 1368))) then if (v80==28) then if (v79[7 -5 ]<v77[v79[1665 -(1477 + 184) ]]) then v71=v79[3];else v71=v71 + ((305 -(300 + 4)) -0) ;end elseif (v77[v79[2]]==v77[v79[4 + 0 ]]) then v71=v71 + (857 -(564 + 292)) ;else v71=v79[4 -1 ];end elseif (v80<=(90 -60)) then v77[v79[306 -(244 + 60) ]]=v77[v79[3 + 0 ]] + v79[480 -(41 + 117 + 318) ] ;elseif (v80==(1032 -((2455 -1517) + 63))) then if (v77[v79[(364 -(112 + 250)) + 0 + 0 ]]<v77[v79[1129 -((2344 -1408) + 189) ]]) then v71=v79[1 + 2 ];else v71=v71 + 1 ;end elseif ((v77[v79[1615 -(1565 + 28 + 20) ]]~=v77[v79[3 + 1 ]]) or (3131>3542)) then v71=v71 + 1 + 0 ;else v71=v79[1141 -(585 + 197 + 356) ];end elseif (v80<=(315 -(176 + 91))) then if (v80<=(104 -(32 + 32))) then if (v80<=(52 -16)) then if (v80<=34) then if (v80>(1125 -(975 + 117))) then v61[v79[1878 -(157 + 1718) ]]=v77[v79[2 + 0 ]];elseif (v77[v79[6 -4 ]]==v79[13 -9 ]) then v71=v71 + 1 ;else v71=v79[3];end elseif (v80>(1053 -(697 + 321))) then local v160=0 -0 ;local v161;while true do if ((2577>=1578) and (v160==(0 -0))) then v161=v79[2];v72=(v161 + v78) -(2 -1) ;v160=1 + 0 ;end if ((4103<=4571) and (v160==(1 -0))) then for v428=v161,v72 do local v429=v73[v428-v161 ];v77[v428]=v429;end break;end end else local v162=0 -0 ;local v163;while true do if ((v162==(1227 -(322 + 905))) or (1495==4787)) then v163=v79[(456 + 157) -(602 + 9) ];v77[v163](v77[v163 + (1190 -((1863 -(1001 + 413)) + 740)) ]);break;end end end elseif (v80<=38) then if (v80>(909 -(826 + 46))) then v77[v79[949 -(245 + 702) ]]();else v60[v79[9 -6 ]]=v77[v79[1 + 1 ]];end elseif (v80==39) then if (v79[2]<v77[v79[4]]) then v71=v71 + (1899 -(260 + 1638)) ;else v71=v79[443 -(382 + 58) ];end else local v166=0 -0 ;local v167;while true do if (v166==0) then v167=v79[2 + 0 ];v77[v167]=v77[v167](v13(v77,v167 + 1 ,v72));break;end end end elseif (v80<=(97 -53)) then if ((v80<=42) or (310>4434)) then if (v80>(84 -43)) then local v168=0;local v169;while true do if (v168==(0 -0)) then v169=v79[1207 -(902 + 303) ];v72=(v169 + v78) -(1 -0) ;v168=1;end if ((2168<=4360) and (v168==(2 -1))) then for v431=v169,v72 do local v432=v73[v431-v169 ];v77[v431]=v432;end break;end end elseif (v79[(883 -(244 + 638)) + 1 ]<v77[v79[(2387 -(627 + 66)) -(1121 + 569) ]]) then v71=v79[217 -(22 + 192) ];else v71=v71 + 1 ;end elseif (v80==(726 -(483 + 200))) then if ((994==994) and (v77[v79[1465 -(1404 + 59) ]]<v77[v79[4]])) then v71=v79[8 -5 ];else v71=v71 + (1 -0) ;end else v77[v79[767 -(468 + 297) ]]=v60[v79[565 -(334 + 228) ]];end elseif (v80<=((461 -306) -109)) then if (v80==(104 -59)) then if (v77[v79[(604 -(512 + 90)) -0 ]]<=v77[v79[2 + 2 ]]) then v71=v71 + (237 -((2047 -(1665 + 241)) + 95)) ;else v71=v79[3];end else local v172=0 + 0 ;local v173;while true do if (v172==(0 -0)) then v173=v79[(721 -(373 + 344)) -2 ];do return v77[v173](v13(v77,v173 + 1 + 0 ,v72));end break;end end end elseif (v80>(128 -81)) then v60[v79[2 + 1 + 0 ]]=v77[v79[1 + 1 + (0 -0) ]];else do return;end end elseif (v80<=56) then if ((1655>401) and (v80<=(72 -20))) then if (v80<=(30 + 20)) then if (v80==49) then local v176=163 -(92 + 71) ;local v177;local v178;local v179;while true do if ((0 + 0)==v176) then v177=v79[2 -0 ];v178={v77[v177](v13(v77,v177 + 1 + 0 ,v72))};v176=(1101 -(35 + 1064)) -1 ;end if (v176==(1 + 0)) then v179=0;for v434=v177,v79[853 -(185 + 69 + 595) ] do v179=v179 + (127 -(55 + 71)) ;v77[v434]=v178[v179];end break;end end else local v180=0 -0 ;local v181;while true do if ((3063<=3426) and ((1790 -(573 + 1217))==v180)) then v181=v79[5 -3 ];v77[v181]=v77[v181]();break;end end end elseif (v80==(4 + 47)) then v77[v79[2 -0 ]]=v77[v79[942 -(714 + 225) ]];else v61[v79[8 -5 ]]=v77[v79[2 -0 ]];end elseif (v80<=54) then if (v80>((12 -6) + 47)) then local v186=v79[2 -0 ];local v187=v77[v79[809 -(118 + 688) ]];v77[v186 + (49 -(25 + 23)) ]=v187;v77[v186]=v187[v79[4]];else do return v77[v79[1 + 1 ]]();end end elseif (v80>(1941 -(927 + 959))) then v77[v79[6 -4 ]]=v29(v68[v79[735 -(16 + 716) ]],nil,v61);else v77[v79[3 -1 ]]=v29(v68[v79[(1 + 99) -(11 + 86) ]],nil,v61);end elseif ((1459>764) and (v80<=(146 -86))) then if (v80<=(343 -(175 + 110))) then if ((v80==(143 -86)) or (641>4334)) then do return;end elseif ((3399>=2260) and (v79[(1245 -(298 + 938)) -7 ]<=v77[v79[1800 -(503 + 1293) ]])) then v71=v71 + (2 -1) ;else v71=v79[3 + 0 ];end elseif ((v80>(1120 -(810 + (1510 -(233 + 1026))))) or (393>=4242)) then local v193=0 + 0 ;local v194;local v195;local v196;while true do if (v193==(1 + 0)) then v196={};v195=v10({},{__index=function(v437,v438) local v439=v196[v438];return v439[1][v439[2]];end,__newindex=function(v440,v441,v442) local v443=v196[v441];v443[1 + 0 ][v443[535 -(43 + 490) ]]=v442;end});v193=2;end if ((733 -(711 + 22))==v193) then v194=v68[v79[11 -8 ]];v195=nil;v193=1;end if ((989<4859) and (v193==((841 + 20) -(240 + 619)))) then for v445=1 + 0 ,v79[1 + 3 ] do local v446=0 -0 ;local v447;while true do if ((v446==(0 + 0)) or (4795<949)) then v71=v71 + (1745 -(91 + 1253 + 400)) ;v447=v67[v71];v446=406 -(255 + 150) ;end if ((3842==3842) and (v446==(1 + 0))) then if (v447[(222 -(55 + 166)) + 0 ]==(320 -245)) then v196[v445-(3 -2) ]={v77,v447[409 -(183 + 223) ]};else v196[v445-(1 -0) ]={v60,v447[340 -(10 + 327) ]};end v76[ #v76 + 1 + 0 ]=v196;break;end end end v77[v79[2 + 0 ]]=v29(v194,v195,v61);break;end end else local v197=338 -(118 + 220) ;local v198;local v199;local v200;while true do if (v197==(1 + 0)) then v200={};v199=v10({},{__index=function(v448,v449) local v450=449 -(108 + 341) ;local v451;while true do if (v450==(0 + 0)) then v451=v200[v449];return v451[4 -3 ][v451[1495 -(711 + 782) ]];end end end,__newindex=function(v452,v453,v454) local v455=v200[v453];v455[1 -0 ][v455[471 -(270 + 199) ]]=v454;end});v197=1 + 1 ;end if ((1747<=3601) and (v197==(3 -1))) then for v457=1369 -(34 + 1334) ,v79[1823 -(580 + 1239) ] do v71=v71 + (2 -1) ;local v458=v67[v71];if (v458[1 + 0 ]==75) then v200[v457-(1 + 0) ]={v77,v458[2 + 1 ]};else v200[v457-(1168 -(645 + 522)) ]={v60,v458[14 -11 ]};end v76[ #v76 + (2 -1) ]=v200;end v77[v79[1838 -(1045 + 791) ]]=v29(v198,v199,v61);break;end if (v197==(0 -0)) then v198=v68[v79[4 -1 ]];v199=nil;v197=(394 + 112) -(351 + 154) ;end end end elseif (v80<=(1636 -(1281 + 293))) then if (v80==(327 -(28 + (1521 -(1035 + 248))))) then if (v77[v79[4 -2 ]]<v77[v79[1563 -(1381 + 178) ]]) then v71=v71 + 1 ;else v71=v79[3 + 0 ];end else v77[v79[2 + (21 -(20 + 1)) ]]=v77[v79[3]] * v79[2 + 0 + 2 ] ;end elseif (v80<=((536 -(134 + 185)) -154)) then v77[v79[(1135 -(549 + 584)) + 0 ]]=v77[v79[473 -(381 + 89) ]] -v77[v79[4 + (685 -(314 + 371)) ]] ;elseif ((v80>(44 + 20)) or (804>4359)) then local v366=v79[2 -0 ];local v367=v77[v79[1159 -(1074 + (281 -199)) ]];v77[v366 + (1 -0) ]=v367;v77[v366]=v367[v79[1788 -(214 + 1570) ]];elseif (v77[v79[2]]==v79[4]) then v71=v71 + (1456 -(990 + 465)) ;else v71=v79[2 + 1 ];end elseif (v80<=(43 + 55)) then if ((4670>=3623) and (v80<=(79 + 2))) then if (v80<=(287 -214)) then if (v80<=(1795 -(1668 + (1026 -(478 + 490))))) then if (v80<=(693 -(512 + 114))) then if ((2065<2544) and (v80==((91 + 80) -105))) then v77[v79[(1175 -(786 + 386)) -1 ]]=v79[10 -7 ];else v77[v79[1 + 1 ]]=v77[v79[3]]/v79[1 + 3 ] ;end elseif ((1311<=3359) and (v80==(60 + 8))) then if ((2717<=3156) and (v77[v79[6 -(12 -8) ]]<v77[v79[(3377 -(1055 + 324)) -(109 + (3225 -(1093 + 247))) ]])) then v71=v71 + (1470 -(1269 + 200)) ;else v71=v79[3];end else local v206=v79[3 -1 ];v77[v206]=v77[v206]();end elseif (v80<=(886 -(98 + 717))) then if ((1081<4524) and (v80==(896 -(802 + 24)))) then local v208=v79[2 -0 ];local v209,v210=v70(v77[v208](v77[v208 + (1 -0) ]));v72=(v210 + v208) -(1 + 0) ;local v211=0 + 0 + 0 ;for v324=v208,v72 do local v325=0 + 0 ;while true do if (v325==(0 + 0)) then v211=v211 + (2 -1) ;v77[v324]=v209[v211];break;end end end else local v212=0 -0 ;local v213;while true do if (v212==(0 + 0)) then v213=v79[1 + 1 ];v77[v213](v77[v213 + 1 + 0 ]);break;end end end elseif (v80>(6 + 47 + 19)) then local v214=v79[1 + (3 -2) ];do return v77[v214](v13(v77,v214 + 1 ,v72));end else local v215=v79[1435 -(797 + (2158 -1522)) ];do return v13(v77,v215,v215 + v79[14 -11 ] );end end elseif ((440>=71) and (v80<=77)) then if ((4934>2607) and (v80<=(1694 -(1427 + 192)))) then if (v80>(26 + 48)) then v77[v79[4 -2 ]]=v77[v79[3]];else v77[v79[2 + 0 ]]=v79[3]~=(0 + 0) ;end elseif ((v80==(402 -(192 + 134))) or (1400>3116)) then v77[v79[1278 -(316 + 960) ]]();else local v219=v79[2];v77[v219]=v77[v219](v13(v77,v219 + (2 -1) + 0 ,v79[3]));end elseif (v80<=(61 + (45 -27))) then if (v80>(73 + 5)) then local v221=0;local v222;local v223;while true do if (v221==(3 -2)) then for v463=v222 + ((197 + 355) -(83 + 468)) ,v79[1810 -(1202 + 604) ] do v223=v223   .. v77[v463] ;end v77[v79[9 -7 ]]=v223;break;end if (v221==(0 -0)) then v222=v79[(30 -22) -5 ];v223=v77[v222];v221=326 -((155 -110) + 280) ;end end else do return v77[v79[2 + 0 ]];end end elseif ((525<1662) and (v80>80)) then local v224=0 + 0 ;local v225;local v226;local v227;local v228;while true do if ((v224==(0 + 0)) or (876>2550)) then v225=v79[2];v226,v227=v70(v77[v225](v13(v77,v225 + 1 + 0 ,v79[1 + 2 ])));v224=1;end if (v224==2) then for v464=v225,v72 do v228=v228 + (1 -0) ;v77[v464]=v226[v228];end break;end if ((219<=2456) and (v224==(1912 -(340 + 1571)))) then v72=(v227 + v225) -(1 + 0) ;v228=1772 -(1733 + 39) ;v224=5 -3 ;end end else v77[v79[1036 -(125 + 909) ]][v79[3]]=v79[4 + 0 ];end elseif (v80<=89) then if ((v80<=(2033 -(1096 + 852))) or (4219==1150)) then if (v80<=(38 + 45)) then if (v80==(116 -34)) then if  not v77[v79[2 + 0 ]] then v71=v71 + (513 -(409 + (263 -160))) ;else v71=v79[3];end elseif (v77[v79[238 -(46 + 190) ]]~=v77[v79[99 -(51 + 44) ]]) then v71=v71 + 1 ;else v71=v79[1 + (690 -(364 + 324)) ];end elseif (v80==(1401 -(1114 + (556 -353)))) then v77[v79[728 -(228 + 498) ]]=v79[1 + 2 ]^v77[v79[3 + 1 ]] ;else local v232=v79[(1595 -930) -(174 + 489) ];local v233={v77[v232](v77[v232 + (1906 -(830 + 1075)) ])};local v234=0;for v326=v232,v79[528 -(303 + 221) ] do v234=v234 + 1 ;v77[v326]=v233[v234];end end elseif ((v80<=(1356 -(231 + 1038))) or (2989<=222)) then if ((2258>1241) and (v80>(72 + 14))) then if ((41<4259) and (v77[v79[1164 -((715 -544) + 991) ]]<=v77[v79[16 -12 ]])) then v71=v71 + (2 -1) ;else v71=v79[7 -4 ];end else v77[v79[2 + 0 ]]=v77[v79[10 -7 ]] + v77[v79[4]] ;end elseif (v80>88) then local v236=0;local v237;while true do if (v236==(0 -0)) then v237=v79[(2 -0) -0 ];v77[v237]=v77[v237](v77[v237 + 1 ]);break;end end else v77[v79[6 -4 ]]=v79[3]~=0 ;v71=v71 + ((3793 -2544) -(111 + 1137)) ;end elseif (v80<=(251 -(91 + 67))) then if (v80<=91) then if ((v80==(267 -177)) or (1930<56)) then local v239=v79[1 + 1 ];local v240,v241=v70(v77[v239](v13(v77,v239 + (524 -(423 + 100)) ,v79[1 + 2 ])));v72=(v241 + v239) -(2 -1) ;local v242=0 + 0 ;for v329=v239,v72 do local v330=771 -(326 + (1713 -(1249 + 19))) ;while true do if (v330==(0 -0)) then v242=v242 + (2 -1) ;v77[v329]=v240[v242];break;end end end else v77[v79[4 -2 ]]=v60[v79[3]];end elseif (v80==92) then v77[v79[713 -(530 + 181) ]]=v77[v79[884 -(555 + 59 + (1039 -772)) ]][v77[v79[36 -(19 + 13) ]]];else local v247=v79[2 -0 ];local v248=v77[v247];for v331=v247 + (2 -1) ,v79[8 -5 ] do v7(v248,v77[v331]);end end elseif (v80<=(25 + 70)) then if (v80>(165 -71)) then v77[v79[3 -1 ]]=v79[1815 -(1293 + 519) ]~=0 ;v71=v71 + (1 -0) ;else local v250=v79[2];v77[v250]=v77[v250](v77[v250 + 1 ]);end elseif ((3333==3333) and (v80<=96)) then if (v77[v79[4 -2 ]]~=v79[4]) then v71=v71 + ((1087 -(686 + 400)) -0) ;else v71=v79[3];end elseif ((v80>97) or (2225==20)) then do return v77[v79[8 -6 ]];end elseif (v79[2]==v77[v79[(8 + 1) -(234 -(73 + 156)) ]]) then v71=v71 + 1 + 0 + 0 ;else v71=v79[3];end elseif (v80<=(24 + 90)) then if (v80<=(245 -139)) then if (v80<=(24 + (889 -(721 + 90)))) then if (v80<=(34 + 66)) then if (v80==(62 + 37)) then v77[v79[2]]=v61[v79[3]];else v71=v79[3];end elseif (v80==(1197 -(709 + 387))) then v77[v79[1860 -(8 + 665 + 1185) ]]=v77[v79[8 -5 ]] + v77[v79[(38 -26) -8 ]] ;else local v256=v79[2 -0 ];do return v77[v256](v13(v77,v256 + 1 + 0 ,v79[3]));end end elseif ((v80<=(78 + 26)) or (872>=3092)) then if ((4404>=3252) and (v80>(138 -35))) then v77[v79[1 + 1 ]][v79[5 -2 ]]=v77[v79[(477 -(224 + 246)) -3 ]];else local v259=v79[2];do return v13(v77,v259,v72);end end elseif (v80==105) then local v260=v79[1882 -(446 + 1434) ];local v261={v77[v260](v13(v77,v260 + (2 -1) ,v72))};local v262=0;for v332=v260,v79[1851 -(559 + 1288) ] do v262=v262 + ((3556 -1624) -(111 + 498 + 1322)) ;v77[v332]=v261[v262];end else local v263=v79[456 -(13 + 11 + 430) ];local v264=v79[4];local v265=v263 + 2 + 0 ;local v266={v77[v263](v77[v263 + (2 -1) ],v77[v265])};for v335=(12 -8) -3 ,v264 do v77[v265 + v335 ]=v266[v335];end local v267=v266[1];if v267 then v77[v265]=v267;v71=v79[(514 -(203 + 310)) + 2 ];else v71=v71 + (3 -2) ;end end elseif (v80<=110) then if ((1107>796) and (v80<=108)) then if (v80>(39 + 68)) then local v268=(1993 -(1238 + 755)) + 0 + 0 ;local v269;local v270;local v271;local v272;while true do if ((959==959) and (v268==(0 -0))) then v269=v79[2 + 0 ];v270,v271=v70(v77[v269](v77[v269 + (1 -0) ]));v268=1 + 0 ;end if (v268==(2 + 0)) then for v470=v269,v72 do v272=v272 + 1 + (1534 -(709 + 825)) ;v77[v470]=v270[v272];end break;end if ((v268==1) or (245>=2204)) then v72=(v271 + v269) -(1 + 0) ;v272=0;v268=2 + 0 ;end end else v77[v79[435 -(153 + 280) ]][v77[v79[(14 -6) -5 ]]]=v77[v79[4 + 0 ]];end elseif (v80>(44 + (94 -29))) then v77[v79[2 + 0 ]][v79[3 + 0 ]]=v77[v79[4]];else local v277=v77[v79[3 + (865 -(196 + 668)) ]];if  not v277 then v71=v71 + (1 -0) ;else local v378=0 + 0 ;while true do if ((3162>=2069) and (v378==(667 -(89 + 578)))) then v77[v79[2 + 0 ]]=v277;v71=v79[5 -2 ];break;end end end end elseif (v80<=(1161 -(572 + 477))) then if (v80>((59 -44) + 96)) then if (v79[2 + 0 ]<=v77[v79[1 + 3 ]]) then v71=v71 + (87 -((173 -89) + 2)) ;else v71=v79[(837 -(171 + 662)) -1 ];end elseif  not v77[v79[2 + 0 ]] then v71=v71 + (843 -(497 + 345)) ;else v71=v79[3];end elseif (v80==(3 + (203 -(4 + 89)))) then local v278=v79[1 + 2 ];local v279=v77[v278];for v338=v278 + (1334 -(605 + 728)) ,v79[3 + 1 ] do v279=v279   .. v77[v338] ;end v77[v79[3 -1 ]]=v279;else v77[v79[1 + 1 ]]=v79[10 -7 ]~=0 ;end elseif (v80<=(110 + 12)) then if (v80<=((1142 -816) -208)) then if ((v80<=(88 + 28)) or (306>3081)) then if ((v80==(604 -(457 + 32))) or (3513<2706)) then v77[v79[1 + 1 ]]=v77[v79[1405 -(832 + 570) ]][v79[4 + 0 ]];else local v284=v79[2];local v285={v77[v284](v13(v77,v284 + 1 ,v79[1 + 2 ]))};local v286=0;for v339=v284,v79[4] do v286=v286 + ((13 -10) -2) ;v77[v339]=v285[v286];end end elseif ((2978<3639) and (v80==117)) then local v287=0 + 0 ;local v288;while true do if ((3682>=2888) and (v287==(796 -(588 + 82 + 126)))) then v288=v79[2];v77[v288]=v77[v288](v13(v77,v288 + ((1488 -(35 + 1451)) -1) ,v72));break;end end else v77[v79[2]]=v77[v79[1803 -(884 + 916) ]]/v79[8 -4 ] ;end elseif (v80<=120) then if (v80>(69 + 50)) then local v290=v79[655 -(232 + 421) ];local v291={v77[v290](v13(v77,v290 + 1 + 0 ,v79[3]))};local v292=0 + 0 + 0 ;for v342=v290,v79[13 -9 ] do v292=v292 + (606 -(316 + 289)) ;v77[v342]=v291[v292];end else local v293=0 -0 ;local v294;while true do if ((0 + 0)==v293) then v294=v79[(2969 -(822 + 692)) -(666 + 787) ];do return v13(v77,v294,v72);end break;end end end elseif (v80>121) then if ((149<479) and (v77[v79[2]]~=v79[429 -(360 + (92 -27)) ])) then v71=v71 + 1 + 0 ;else v71=v79[(122 + 135) -(79 + (472 -(45 + 252))) ];end else local v295=0 -0 ;local v296;while true do if ((1020>=567) and (v295==(0 + 0))) then v296=v79[5 -3 ];v77[v296]=v77[v296](v13(v77,v296 + (1 -0) ,v79[902 -(503 + 396) ]));break;end end end elseif (v80<=126) then if (v80<=124) then if ((v80>(304 -(92 + 0 + 89))) or (733>2469)) then v77[v79[3 -(1 + 0) ]]=v79[2 + 1 ]^v77[v79[4]] ;elseif (v79[2 + (0 -0) ]<v77[v79[15 -11 ]]) then v71=v71 + 1 ;else v71=v79[1 + 2 ];end elseif (v80==(558 -(114 + 319))) then v77[v79[4 -2 ]]=v77[v79[3 + (0 -0) ]] * v79[4] ;else v77[v79[1 + 1 ]]={};end elseif (v80<=128) then if (v80==127) then local v300=0 -0 ;local v301;local v302;while true do if (v300==(0 + 0)) then v301=v79[2 -0 ];v302={};v300=1245 -(485 + (971 -212)) ;end if ((2497==2497) and (v300==(2 -1))) then for v473=1, #v76 do local v474=v76[v473];for v486=0, #v474 do local v487=v474[v486];local v488=v487[1];local v489=v487[1191 -(442 + 747) ];if ((v488==v77) and (v489>=v301)) then local v499=1135 -(832 + 303) ;while true do if ((3901==3901) and ((946 -(57 + 31 + (1278 -420)))==v499)) then v302[v489]=v488[v489];v487[1 + 0 ]=v302;break;end end end end end break;end end else v77[v79[2 + (0 -0) ]]= #v77[v79[1 + 2 ]];end elseif ((201<415) and (v80<=(918 -(766 + 23)))) then local v304=0 -0 ;local v305;local v306;local v307;while true do if (v304==(1 -0)) then v307=v79[7 -4 ];for v475=3 -2 ,v307 do v306[v475]=v77[v305 + v475 ];end break;end if ((v304==(1073 -((2999 -(556 + 1407)) + 37))) or (133==1784)) then v305=v79[2 + 0 ];v306=v77[v305];v304=1 -0 ;end end elseif ((v80==130) or (7>=310)) then v77[v79[(1208 -(741 + 465)) + 0 ]][v77[v79[1483 -(641 + 839) ]]]=v77[v79[917 -(910 + 3) ]];else v77[v79[2]]=v77[v79[7 -4 ]] -v77[v79[1688 -(1466 + 218) ]] ;end v71=v71 + 1 + 0 ;end end;end return v29(v28(),{},v17)(...);end return v15("LOL!",v9(),...);
